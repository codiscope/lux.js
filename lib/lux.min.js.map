{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","lux.js","webpack:/webpack/bootstrap c503dffd2e08f5d7b463","webpack:///src/lux.js","webpack:///src/utils.js","webpack:///src/actions.js","webpack:/external {\"root\":\"_\",\"commonjs\":\"lodash\",\"commonjs2\":\"lodash\",\"amd\":\"lodash\"}","webpack:///src/bus.js","webpack:/external \"postal\"","webpack:///src/mixins/index.js","webpack:///src/mixins/store.js","webpack:///src/mixins/actionCreator.js","webpack:///src/mixins/actionListener.js","webpack:///src/store.js","webpack:///src/dispatcher.js","webpack:/external \"machina\"","webpack:///~/immutable/dist/immutable.js","webpack:///src/extend.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_12__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","global","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_utils","_utils2","_actions","_mixins","_store","_extend","_dispatcher","_dispatcher2","window","_babelPolyfill","Error","Store","extend","actions","publishAction","addToActionGroup","component","controllerView","customActionCreator","dispatcher","getActionGroup","actionCreatorListener","actionCreator","actionListener","mixin","initReact","reactMixin","removeStore","stores","utils","ensureLuxProp","context","__lux","cleanup","subscriptions","entries","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","k","regeneratorRuntime","wrap","context$1$0","prev","next","indexOf","undefined","keys","Symbol","iterator","done","t0","finish","stop","marked0$0","map","mark","generateActionCreator","actionList","forEach","action","args","Array","from","arguments","_bus","actionChannel","publish","topic","data","actionType","actionArgs","group","actionGroups","_lodash2","pick","getGroupsWithAction","actionName","groups","_step$value","_slicedToArray","list","push","err","assign","groupName","diff","difference","length","join","sliceIterator","arr","i","_arr","_n","_d","_e","_s","_i","isArray","TypeError","_lodash","create","_postal","_postal2","channel","storeChannel","dispatcherChannel","postal","userReact","React","ensureReact","methodName","options","opt","mixins","storeReactMixin","_actionCreator","actionCreatorReactMixin","concat","createClass","_len","_key","storeMixin","actionCreatorMixin","mxn","setup","teardown","luxCleanup","luxMixinCleanup","target","_actionListener","actionListenerMixin","_this","method","store","gateKeeper","payload","found","waitFor","splice","heardFrom","onChange","handlePreNotify","filter","item","listenTo","_this2","subscribe","prenotify","key","sub","split","pop","unsubscribe","componentWillMount","componentWillUnmount","apply","_slice","prototype","slice","getActions","addActionIfNotPresent","v","_ref","handlers","handlerFn","subs","env","handler","handlerKeys","namespace","_classCallCheck","instance","Constructor","buildActionList","ensureStoreOptions","getHandlerObject","listeners","changed","listener","bind","updateWaitFor","source","handlerObject","dep","addListeners","customMerge","object","props","srcValue","_immutable","Iterable","isIterable","objVal","isEmpty","isObject","merge","processStoreArgs","state","otherOpts","o","clone","dispose","_createClass","defineProperties","descriptor","enumerable","configurable","writable","protoProps","staticProps","_processStoreArgs","_processStoreArgs2","inDispatch","hasChanged","getState","setState","newState","replaceState","flush","hasOwnProperty","res","deps","__subscription","notify","constraint","registerStore","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_step2$value","subscription","_inherits","subClass","superClass","constructor","setPrototypeOf","__proto__","calculateGen","lookup","gen","namespaces","calcdGen","_namespaces","depStore","thisGen","console","warn","buildGenerations","tree","processGeneration","generation","_get","_x","_x2","_x3","_again","property","receiver","Function","desc","getOwnPropertyDescriptor","getter","get","parent","getPrototypeOf","_machina","_machina2","Dispatcher","_machina$BehavioralFsm","initialState","actionMap","states","ready","_onEnter","actionContext","action.dispatch","dispatching","luxAction","generations","transition","action.handled","updated","_onExit","notifying","nothandled","getStoresHandling","createSubscribers","generationIndex","handle","storeMeta","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","actionDef","actionMeta","isThisNameSpace","meta","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_step4$value","idx","findIndex","__subscriptions","handleActionDispatch","BehavioralFsm","ctor","Seq","KeyedIterable","isKeyed","KeyedSeq","IndexedIterable","isIndexed","IndexedSeq","SetIterable","isAssociative","SetSeq","maybeIterable","IS_ITERABLE_SENTINEL","maybeKeyed","IS_KEYED_SENTINEL","maybeIndexed","IS_INDEXED_SENTINEL","maybeAssociative","isOrdered","maybeOrdered","IS_ORDERED_SENTINEL","MakeRef","ref","SetRef","OwnerID","arrCopy","offset","len","Math","max","newArr","ii","ensureSize","iter","size","__iterate","returnTrue","wrapIndex","index","uint32Index","NaN","wholeSlice","begin","end","resolveBegin","resolveIndex","resolveEnd","defaultIndex","min","Iterator","iteratorValue","type","iteratorResult","iteratorDone","hasIterator","getIteratorFn","isIterator","maybeIterator","getIterator","iterable","iteratorFn","REAL_ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","isArrayLike","emptySequence","toSeq","seqFromValue","toKeyedSeq","fromEntrySeq","keyedSeqFromValue","entrySeq","toIndexedSeq","indexedSeqFromValue","toSetSeq","ArraySeq","array","_array","ObjectSeq","_object","_keys","IterableSeq","_iterable","IteratorSeq","_iteratorCache","isSeq","maybeSeq","IS_SEQ_SENTINEL","EMPTY_SEQ","seq","maybeIndexedSeqFromValue","seqIterate","fn","reverse","useKeys","cache","_cache","maxIndex","entry","__iterateUncached","seqIterator","__iteratorUncached","fromJS","json","converter","fromJSWith","","fromJSDefault","parentJSON","isPlainObj","toList","toMap","is","valueA","valueB","valueOf","equals","deepEqual","a","b","__hash","notAssociative","every","flipped","cacheResult","_","allEqual","bSize","has","NOT_SET","Repeat","times","_value","Infinity","EMPTY_REPEAT","invariant","condition","error","Range","start","step","abs","_start","_end","ceil","EMPTY_RANGE","Collection","KeyedCollection","IndexedCollection","SetCollection","smi","i32","hash","h","STRING_HASH_CACHE_MIN_STRLEN","cachedHashString","hashString","hashCode","hashJSObj","toString","string","stringHashCache","STRING_HASH_CACHE_SIZE","STRING_HASH_CACHE_MAX_SIZE","charCodeAt","usingWeakMap","weakMap","UID_HASH_KEY","canDefineProperty","propertyIsEnumerable","getIENodeHash","objHashUID","set","isExtensible","nodeType","node","uniqueID","documentElement","assertNotInfinite","Map","emptyMap","isMap","withMutations","maybeMap","IS_MAP_SENTINEL","ArrayMapNode","ownerID","BitmapIndexedNode","bitmap","nodes","HashArrayMapNode","count","HashCollisionNode","keyHash","ValueNode","MapIterator","_type","_reverse","_stack","_root","mapIteratorFrame","mapIteratorValue","__prev","makeMap","MapPrototype","__ownerID","__altered","EMPTY_MAP","updateMap","newRoot","newSize","didChangeSize","CHANGE_LENGTH","didAlter","DID_ALTER","updateNode","shift","update","isLeafNode","mergeIntoNode","newNode","idx1","MASK","idx2","SHIFT","createNodes","packNodes","excluding","packedII","packedNodes","bit","expandNodes","including","expandedNodes","SIZE","mergeIntoMapWith","merger","iterables","iters","mergeIntoCollectionWith","deepMerger","existing","mergeDeep","deepMergerWith","mergeDeepWith","nextValue","collection","x","mergeIntoMap","updateInDeepMap","keyPathIter","notSetValue","updater","isNotSet","existingValue","newValue","nextExisting","nextUpdated","remove","popCount","setIn","val","canEdit","newArray","spliceIn","newLen","after","spliceOut","List","empty","emptyList","isList","makeList","VNode","toArray","setSize","maybeList","IS_LIST_SENTINEL","iterateList","iterateNodeOrLeaf","level","iterateLeaf","iterateNode","tailPos","tail","left","to","right","DONE","values","_origin","_capacity","getTailOffset","_tail","_level","origin","capacity","ListPrototype","EMPTY_LIST","updateList","setListBounds","newTail","updateVNode","nodeHas","lowerNode","newLowerNode","editableVNode","listNodeFor","rawIndex","owner","oldOrigin","oldCapacity","newOrigin","newCapacity","clear","newLevel","offsetShift","oldTailOffset","newTailOffset","oldTail","removeAfter","removeBefore","beginIndex","mergeIntoListWith","maxSize","OrderedMap","emptyOrderedMap","isOrderedMap","maybeOrderedMap","makeOrderedMap","omap","_map","_list","EMPTY_ORDERED_MAP","updateOrderedMap","newMap","newList","flip","ToKeyedSequence","indexed","_iter","_useKeys","ToIndexedSequence","ToSetSequence","FromEntriesSequence","flipFactory","flipSequence","makeSequence","reversedSequence","includes","cacheResultThrough","this$0","ITERATE_ENTRIES","__iterator","ITERATE_VALUES","ITERATE_KEYS","mapFactory","mapper","mappedSequence","reverseFactory","filterFactory","predicate","filterSequence","iterations","countByFactory","grouper","asMutable","asImmutable","groupByFactory","isKeyedIter","coerce","iterableClass","reify","sliceFactory","originalSize","resolvedBegin","resolvedEnd","sliceSize","resolvedSize","sliceSeq","skipped","isSkipping","takeWhileFactory","takeSequence","iterating","skipWhileFactory","skipSequence","skipping","concatFactory","isKeyedIterable","singleton","concatSeq","flatten","reduce","sum","flattenFactory","depth","flatSequence","flatDeep","currentDepth","stopped","stack","flatMapFactory","interposeFactory","separator","interposedSequence","sortFactory","comparator","defaultComparator","sort","maxFactory","maxCompare","comp","zipWithFactory","keyIter","zipper","zipSequence","iterators","isDone","steps","some","s","validateEntry","resolveSize","forceIterator","keyPath","Record","defaultValues","name","hasInitialized","RecordType","setProps","RecordTypePrototype","_name","_defaultValues","RecordPrototype","makeRecord","likeRecord","record","recordName","names","setProp","Set","emptySet","isSet","add","maybeSet","IS_SET_SENTINEL","updateSet","__empty","__make","makeSet","SetPrototype","EMPTY_SET","OrderedSet","emptyOrderedSet","isOrderedSet","maybeOrderedSet","makeOrderedSet","OrderedSetPrototype","EMPTY_ORDERED_SET","Stack","emptyStack","isStack","unshiftAll","maybeStack","IS_STACK_SENTINEL","makeStack","head","StackPrototype","_head","EMPTY_STACK","methods","keyCopier","getOwnPropertySymbols","keyMapper","entryMapper","not","neg","quoteString","JSON","stringify","defaultZipper","defaultNegComparator","hashIterable","ordered","keyed","hashMerge","murmurHashOfSize","imul","SLICE$0","Keyed","Indexed","DELETE","ITERATOR_SYMBOL","KEYS","VALUES","ENTRIES","inspect","toSource","of","__toString","searchValue","lastIndexOf","other","possibleIndex","floor","offsetValue","d","e","WeakMap","updateIn","deleteIn","updatedValue","mergeWith","mergeIn","mergeDeepIn","sortBy","mutable","wasAltered","__ensureOwner","iterate","removeIn","removed","exists","MAX_ARRAY_MAP_SIZE","isEditable","newEntries","keyHashFrag","MAX_BITMAP_INDEXED_SIZE","newBitmap","newNodes","newCount","MIN_HASH_ARRAY_MAP_SIZE","keyMatch","subNode","insert","oldSize","unshift","originIndex","newChild","removingFirst","oldChild","editable","sizeIndex","valueSeq","indexedIterable","defaultVal","_empty","fromKeys","keySeq","union","intersect","originalSet","subtract","peek","pushAll","toJS","__toJS","toJSON","toObject","toOrderedMap","toOrderedSet","toSet","toStack","__toStringMapper","returnValue","find","findEntry","findLastEntry","sideEffect","joined","isFirst","reducer","initialReduction","reduction","useFirst","reduceRight","reversed","butLast","countBy","entriesSequence","filterNot","findLast","first","flatMap","searchKey","getIn","searchKeyPath","nested","groupBy","hasIn","isSubset","isSuperset","last","maxBy","minBy","rest","skip","amount","skipLast","skipWhile","skipUntil","take","takeLast","takeWhile","takeUntil","IterablePrototype","chain","contains","noLengthWarning","findKey","findLastKey","keyOf","lastKeyOf","mapEntries","mapKeys","KeyedIterablePrototype","removeNum","numArgs","spliced","findLastIndex","interpose","interleave","zipped","interleaved","zip","zipWith","Immutable","Ctor","__super__"],"mappings":"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","file":"lux.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"), require(\"postal\"), require(\"machina\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"lodash\", \"postal\", \"machina\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lux\"] = factory(require(\"lodash\"), require(\"postal\"), require(\"machina\"));\n\telse\n\t\troot[\"lux\"] = factory(root[\"_\"], root[\"postal\"], root[\"machina\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_12__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","/*!\n *  * lux.js - Flux-based architecture for using ReactJS at LeanKit\n *  * Author: Jim Cowart\n *  * Version: v0.8.0\n *  * Url: https://github.com/LeanKit-Labs/lux.js\n *  * License(s): \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"), require(\"postal\"), require(\"machina\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"lodash\", \"postal\", \"machina\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lux\"] = factory(require(\"lodash\"), require(\"postal\"), require(\"machina\"));\n\telse\n\t\troot[\"lux\"] = factory(root[\"_\"], root[\"postal\"], root[\"machina\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_12__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {Object.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t// istanbul ignore next\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tvar _utils = __webpack_require__(1);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _actions = __webpack_require__(2);\n\t\n\tvar _mixins = __webpack_require__(6);\n\t\n\tvar _store = __webpack_require__(10);\n\t\n\tvar _extend = __webpack_require__(14);\n\t\n\tvar _dispatcher = __webpack_require__(11);\n\t\n\tvar _dispatcher2 = _interopRequireDefault(_dispatcher);\n\t\n\t\"use strict\";\n\t\n\t/* istanbul ignore next */\n\tif (!(typeof global === \"undefined\" ? window : global)._babelPolyfill) {\n\t\tthrow new Error(\"You must include the babel polyfill on your page before lux is loaded. See https://babeljs.io/docs/usage/polyfill/ for more details.\");\n\t}\n\t\n\t_store.Store.extend = _extend.extend;\n\t\n\texports[\"default\"] = {\n\t\tactions: _actions.actions,\n\t\tpublishAction: _mixins.publishAction,\n\t\taddToActionGroup: _actions.addToActionGroup,\n\t\tcomponent: _mixins.component,\n\t\tcontrollerView: _mixins.controllerView,\n\t\tcustomActionCreator: _actions.customActionCreator,\n\t\tdispatcher: _dispatcher2[\"default\"],\n\t\tgetActionGroup: _actions.getActionGroup,\n\t\tactionCreatorListener: _mixins.actionCreatorListener,\n\t\tactionCreator: _mixins.actionCreator,\n\t\tactionListener: _mixins.actionListener,\n\t\tmixin: _mixins.mixin,\n\t\tinitReact: _mixins.initReact,\n\t\treactMixin: _mixins.reactMixin,\n\t\tremoveStore: _store.removeStore,\n\t\tStore: _store.Store,\n\t\tstores: _store.stores,\n\t\tutils: _utils2[\"default\"]\n\t};\n\tmodule.exports = exports[\"default\"];\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.ensureLuxProp = ensureLuxProp;\n\texports.entries = entries;\n\tvar marked0$0 = [entries].map(regeneratorRuntime.mark);\n\t\n\tfunction ensureLuxProp(context) {\n\t\tvar __lux = context.__lux = context.__lux || {};\n\t\t/*eslint-disable */\n\t\tvar cleanup = __lux.cleanup = __lux.cleanup || [];\n\t\tvar subscriptions = __lux.subscriptions = __lux.subscriptions || {};\n\t\t/*eslint-enable */\n\t\treturn __lux;\n\t}\n\t\n\tfunction entries(obj) {\n\t\tvar _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, k;\n\t\n\t\treturn regeneratorRuntime.wrap(function entries$(context$1$0) {\n\t\t\twhile (1) switch (context$1$0.prev = context$1$0.next) {\n\t\t\t\tcase 0:\n\t\t\t\t\tif ([\"object\", \"function\"].indexOf(typeof obj) === -1) {\n\t\t\t\t\t\tobj = {};\n\t\t\t\t\t}\n\t\t\t\t\t_iteratorNormalCompletion = true;\n\t\t\t\t\t_didIteratorError = false;\n\t\t\t\t\t_iteratorError = undefined;\n\t\t\t\t\tcontext$1$0.prev = 4;\n\t\t\t\t\t_iterator = Object.keys(obj)[Symbol.iterator]();\n\t\n\t\t\t\tcase 6:\n\t\t\t\t\tif (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n\t\t\t\t\t\tcontext$1$0.next = 13;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tk = _step.value;\n\t\t\t\t\tcontext$1$0.next = 10;\n\t\t\t\t\treturn [k, obj[k]];\n\t\n\t\t\t\tcase 10:\n\t\t\t\t\t_iteratorNormalCompletion = true;\n\t\t\t\t\tcontext$1$0.next = 6;\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 13:\n\t\t\t\t\tcontext$1$0.next = 19;\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 15:\n\t\t\t\t\tcontext$1$0.prev = 15;\n\t\t\t\t\tcontext$1$0.t0 = context$1$0[\"catch\"](4);\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = context$1$0.t0;\n\t\n\t\t\t\tcase 19:\n\t\t\t\t\tcontext$1$0.prev = 19;\n\t\t\t\t\tcontext$1$0.prev = 20;\n\t\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t\t\t\t\t\t_iterator[\"return\"]();\n\t\t\t\t\t}\n\t\n\t\t\t\tcase 22:\n\t\t\t\t\tcontext$1$0.prev = 22;\n\t\n\t\t\t\t\tif (!_didIteratorError) {\n\t\t\t\t\t\tcontext$1$0.next = 25;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthrow _iteratorError;\n\t\n\t\t\t\tcase 25:\n\t\t\t\t\treturn context$1$0.finish(22);\n\t\n\t\t\t\tcase 26:\n\t\t\t\t\treturn context$1$0.finish(19);\n\t\n\t\t\t\tcase 27:\n\t\t\t\tcase \"end\":\n\t\t\t\t\treturn context$1$0.stop();\n\t\t\t}\n\t\t}, marked0$0[0], this, [[4, 15, 19, 27], [20,, 22, 26]]);\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t// istanbul ignore next\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; })();\n\t\n\texports.generateActionCreator = generateActionCreator;\n\texports.getActionGroup = getActionGroup;\n\texports.getGroupsWithAction = getGroupsWithAction;\n\texports.customActionCreator = customActionCreator;\n\texports.addToActionGroup = addToActionGroup;\n\t// istanbul ignore next\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tvar _lodash = __webpack_require__(3);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _utils = __webpack_require__(1);\n\t\n\tvar _bus = __webpack_require__(4);\n\t\n\tvar actions = Object.create(null);\n\texports.actions = actions;\n\tvar actionGroups = Object.create(null);\n\t\n\texports.actionGroups = actionGroups;\n\t\n\tfunction generateActionCreator(actionList) {\n\t\tactionList = typeof actionList === \"string\" ? [actionList] : actionList;\n\t\tactionList.forEach(function (action) {\n\t\t\tif (!actions[action]) {\n\t\t\t\tactions[action] = function () {\n\t\t\t\t\tvar args = Array.from(arguments);\n\t\t\t\t\t_bus.actionChannel.publish({\n\t\t\t\t\t\ttopic: \"execute.\" + action,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tactionType: action,\n\t\t\t\t\t\t\tactionArgs: args\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t}\n\t\n\tfunction getActionGroup(group) {\n\t\tif (actionGroups[group]) {\n\t\t\treturn _lodash2[\"default\"].pick(actions, actionGroups[group]);\n\t\t} else {\n\t\t\tthrow new Error(\"There is no action group named '\" + group + \"'\");\n\t\t}\n\t}\n\t\n\tfunction getGroupsWithAction(actionName) {\n\t\tvar groups = [];\n\t\tvar _iteratorNormalCompletion = true;\n\t\tvar _didIteratorError = false;\n\t\tvar _iteratorError = undefined;\n\t\n\t\ttry {\n\t\t\tfor (var _iterator = (0, _utils.entries)(actionGroups)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\tvar _step$value = _slicedToArray(_step.value, 2);\n\t\n\t\t\t\tvar group = _step$value[0];\n\t\t\t\tvar list = _step$value[1];\n\t\n\t\t\t\tif (list.indexOf(actionName) >= 0) {\n\t\t\t\t\tgroups.push(group);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError = true;\n\t\t\t_iteratorError = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t\t\t\t\t_iterator[\"return\"]();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn groups;\n\t}\n\t\n\tfunction customActionCreator(action) {\n\t\tObject.assign(actions, action);\n\t}\n\t\n\tfunction addToActionGroup(groupName, actionList) {\n\t\tvar group = actionGroups[groupName];\n\t\tif (!group) {\n\t\t\tgroup = actionGroups[groupName] = [];\n\t\t}\n\t\tactionList = typeof actionList === \"string\" ? [actionList] : actionList;\n\t\tvar diff = _lodash2[\"default\"].difference(actionList, Object.keys(actions));\n\t\tif (diff.length) {\n\t\t\tthrow new Error(\"The following actions do not exist: \" + diff.join(\", \"));\n\t\t}\n\t\tactionList.forEach(function (action) {\n\t\t\tif (group.indexOf(action) === -1) {\n\t\t\t\tgroup.push(action);\n\t\t\t}\n\t\t});\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t// istanbul ignore next\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tvar _postal = __webpack_require__(5);\n\t\n\tvar _postal2 = _interopRequireDefault(_postal);\n\t\n\tvar actionChannel = _postal2[\"default\"].channel(\"lux.action\");\n\tvar storeChannel = _postal2[\"default\"].channel(\"lux.store\");\n\tvar dispatcherChannel = _postal2[\"default\"].channel(\"lux.dispatcher\");\n\t\n\texports.actionChannel = actionChannel;\n\texports.storeChannel = storeChannel;\n\texports.dispatcherChannel = dispatcherChannel;\n\texports.postal = _postal2[\"default\"];\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _store = __webpack_require__(7);\n\t\n\tvar _actionCreator = __webpack_require__(8);\n\t\n\tvar _actionListener = __webpack_require__(9);\n\t\n\t\"use strict\";\n\t\n\tvar React = undefined;\n\t\n\tfunction initReact(userReact) {\n\t\tReact = userReact;\n\t\treturn this;\n\t}\n\t\n\tfunction ensureReact(methodName) {\n\t\tif (typeof React === \"undefined\") {\n\t\t\tthrow new Error(\"You attempted to use lux.\" + methodName + \" without first calling lux.initReact( React );\");\n\t\t}\n\t}\n\t\n\tfunction controllerView(options) {\n\t\tensureReact(\"controllerView\");\n\t\tvar opt = {\n\t\t\tmixins: [_store.storeReactMixin, _actionCreator.actionCreatorReactMixin].concat(options.mixins || [])\n\t\t};\n\t\tdelete options.mixins;\n\t\treturn React.createClass(Object.assign(opt, options));\n\t}\n\t\n\tfunction component(options) {\n\t\tensureReact(\"component\");\n\t\tvar opt = {\n\t\t\tmixins: [_actionCreator.actionCreatorReactMixin].concat(options.mixins || [])\n\t\t};\n\t\tdelete options.mixins;\n\t\treturn React.createClass(Object.assign(opt, options));\n\t}\n\t\n\t/*********************************************\n\t*   Generalized Mixin Behavior for non-lux   *\n\t**********************************************/\n\tvar luxMixinCleanup = function luxMixinCleanup() {\n\t\t// istanbul ignore next\n\t\n\t\tvar _this = this;\n\t\n\t\tthis.__lux.cleanup.forEach(function (method) {\n\t\t\treturn method.call(_this);\n\t\t});\n\t\tthis.__lux.cleanup = undefined;\n\t\tdelete this.__lux.cleanup;\n\t};\n\t\n\tfunction mixin(context) {\n\t\tfor (var _len = arguments.length, mixins = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t\t\tmixins[_key - 1] = arguments[_key];\n\t\t}\n\t\n\t\tif (mixins.length === 0) {\n\t\t\tmixins = [_store.storeMixin, _actionCreator.actionCreatorMixin];\n\t\t}\n\t\n\t\tmixins.forEach(function (mxn) {\n\t\t\tif (typeof mxn === \"function\") {\n\t\t\t\tmxn = mxn();\n\t\t\t}\n\t\t\tif (mxn.mixin) {\n\t\t\t\tObject.assign(context, mxn.mixin);\n\t\t\t}\n\t\t\tif (typeof mxn.setup !== \"function\") {\n\t\t\t\tthrow new Error(\"Lux mixins should have a setup method. Did you perhaps pass your mixins ahead of your target instance?\");\n\t\t\t}\n\t\t\tmxn.setup.call(context);\n\t\t\tif (mxn.teardown) {\n\t\t\t\tcontext.__lux.cleanup.push(mxn.teardown);\n\t\t\t}\n\t\t});\n\t\tcontext.luxCleanup = luxMixinCleanup;\n\t\treturn context;\n\t}\n\t\n\tmixin.store = _store.storeMixin;\n\tmixin.actionCreator = _actionCreator.actionCreatorMixin;\n\tmixin.actionListener = _actionListener.actionListenerMixin;\n\t\n\tvar reactMixin = {\n\t\tactionCreator: _actionCreator.actionCreatorReactMixin,\n\t\tstore: _store.storeReactMixin\n\t};\n\t\n\tfunction actionListener(target) {\n\t\treturn mixin(target, _actionListener.actionListenerMixin);\n\t}\n\t\n\tfunction actionCreator(target) {\n\t\treturn mixin(target, _actionCreator.actionCreatorMixin);\n\t}\n\t\n\tfunction actionCreatorListener(target) {\n\t\treturn actionCreator(actionListener(target));\n\t}\n\t\n\texports.component = component;\n\texports.controllerView = controllerView;\n\texports.initReact = initReact;\n\texports.mixin = mixin;\n\texports.reactMixin = reactMixin;\n\texports.actionListener = actionListener;\n\texports.actionCreator = actionCreator;\n\texports.actionCreatorListener = actionCreatorListener;\n\texports.publishAction = _actionCreator.publishAction;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t// istanbul ignore next\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; })();\n\t\n\t/*********************************************\n\t*                 Store Mixin                *\n\t**********************************************/\n\t\n\tvar _bus = __webpack_require__(4);\n\t\n\tvar _utils = __webpack_require__(1);\n\t\n\t\"use strict\";\n\t\n\tfunction gateKeeper(store, data) {\n\t\tvar payload = {};\n\t\tpayload[store] = true;\n\t\tvar __lux = this.__lux;\n\t\n\t\tvar found = __lux.waitFor.indexOf(store);\n\t\n\t\tif (found > -1) {\n\t\t\t__lux.waitFor.splice(found, 1);\n\t\t\t__lux.heardFrom.push(payload);\n\t\n\t\t\tif (__lux.waitFor.length === 0) {\n\t\t\t\t__lux.heardFrom = [];\n\t\t\t\tthis.stores.onChange.call(this, payload);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.stores.onChange.call(this, payload);\n\t\t}\n\t}\n\t\n\tfunction handlePreNotify(data) {\n\t\t// istanbul ignore next\n\t\n\t\tvar _this = this;\n\t\n\t\tthis.__lux.waitFor = data.stores.filter(function (item) {\n\t\t\treturn _this.stores.listenTo.indexOf(item) > -1;\n\t\t});\n\t}\n\t\n\tvar storeMixin = {\n\t\tsetup: function setup() {\n\t\t\t// istanbul ignore next\n\t\n\t\t\tvar _this2 = this;\n\t\n\t\t\tvar __lux = (0, _utils.ensureLuxProp)(this);\n\t\t\tvar stores = this.stores = this.stores || {};\n\t\n\t\t\tif (!stores.listenTo || !stores.listenTo.length) {\n\t\t\t\tthrow new Error(\"listenTo must contain at least one store namespace\");\n\t\t\t}\n\t\n\t\t\tvar listenTo = typeof stores.listenTo === \"string\" ? [stores.listenTo] : stores.listenTo;\n\t\n\t\t\tif (!stores.onChange) {\n\t\t\t\tthrow new Error(\"A component was told to listen to the following store(s): \" + listenTo + \" but no onChange handler was implemented\");\n\t\t\t}\n\t\n\t\t\t__lux.waitFor = [];\n\t\t\t__lux.heardFrom = [];\n\t\n\t\t\tlistenTo.forEach(function (store) {\n\t\t\t\t__lux.subscriptions[store + \".changed\"] = _bus.storeChannel.subscribe(store + \".changed\", function () {\n\t\t\t\t\treturn gateKeeper.call(_this2, store);\n\t\t\t\t});\n\t\t\t});\n\t\n\t\t\t__lux.subscriptions.prenotify = _bus.dispatcherChannel.subscribe(\"prenotify\", function (data) {\n\t\t\t\treturn handlePreNotify.call(_this2, data);\n\t\t\t});\n\t\t},\n\t\tteardown: function teardown() {\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\t\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = (0, _utils.entries)(this.__lux.subscriptions)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar _step$value = _slicedToArray(_step.value, 2);\n\t\n\t\t\t\t\tvar key = _step$value[0];\n\t\t\t\t\tvar sub = _step$value[1];\n\t\n\t\t\t\t\tvar split = undefined;\n\t\t\t\t\tif (key === \"prenotify\" || (split = key.split(\".\")) && split.pop() === \"changed\") {\n\t\t\t\t\t\tsub.unsubscribe();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t\t\t\t\t\t_iterator[\"return\"]();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmixin: {}\n\t};\n\t\n\texports.storeMixin = storeMixin;\n\tvar storeReactMixin = {\n\t\tcomponentWillMount: storeMixin.setup,\n\t\tcomponentWillUnmount: storeMixin.teardown\n\t};\n\texports.storeReactMixin = storeReactMixin;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t// istanbul ignore next\n\tvar _slice = Array.prototype.slice;\n\t// istanbul ignore next\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; })();\n\t\n\texports.publishAction = publishAction;\n\t\n\tvar _utils = __webpack_require__(1);\n\t\n\tvar _actions = __webpack_require__(2);\n\t\n\t/*********************************************\n\t*           Action Creator Mixin          *\n\t**********************************************/\n\t\n\t\"use strict\";\n\t\n\tfunction publishAction(action) {\n\t\tif (_actions.actions[action]) {\n\t\t\tfor (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t\t\t\targs[_key - 1] = arguments[_key];\n\t\t\t}\n\t\n\t\t\t_actions.actions[action].apply(_actions.actions, args);\n\t\t} else {\n\t\t\tthrow new Error(\"There is no action named '\" + action + \"'\");\n\t\t}\n\t}\n\t\n\tvar actionCreatorMixin = {\n\t\tsetup: function setup() {\n\t\t\t// istanbul ignore next\n\t\n\t\t\tvar _this = this;\n\t\n\t\t\tthis.getActionGroup = this.getActionGroup || [];\n\t\t\tthis.getActions = this.getActions || [];\n\t\n\t\t\tif (typeof this.getActionGroup === \"string\") {\n\t\t\t\tthis.getActionGroup = [this.getActionGroup];\n\t\t\t}\n\t\n\t\t\tif (typeof this.getActions === \"string\") {\n\t\t\t\tthis.getActions = [this.getActions];\n\t\t\t}\n\t\n\t\t\tvar addActionIfNotPresent = function addActionIfNotPresent(k, v) {\n\t\t\t\tif (!_this[k]) {\n\t\t\t\t\t_this[k] = v;\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.getActionGroup.forEach(function (group) {\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\t\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = (0, _utils.entries)((0, _actions.getActionGroup)(group))[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar _step$value = _slicedToArray(_step.value, 2);\n\t\n\t\t\t\t\t\tvar k = _step$value[0];\n\t\t\t\t\t\tvar v = _step$value[1];\n\t\n\t\t\t\t\t\taddActionIfNotPresent(k, v);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t\t\t\t\t\t\t_iterator[\"return\"]();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tif (this.getActions.length) {\n\t\t\t\tthis.getActions.forEach(function (key) {\n\t\t\t\t\taddActionIfNotPresent(key, function () {\n\t\t\t\t\t\tpublishAction.apply(undefined, [key].concat(_slice.call(arguments)));\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tmixin: {\n\t\t\tpublishAction: publishAction\n\t\t}\n\t};\n\t\n\texports.actionCreatorMixin = actionCreatorMixin;\n\tvar actionCreatorReactMixin = {\n\t\tcomponentWillMount: actionCreatorMixin.setup,\n\t\tpublishAction: publishAction\n\t};\n\texports.actionCreatorReactMixin = actionCreatorReactMixin;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.actionListenerMixin = actionListenerMixin;\n\t\n\t/*********************************************\n\t*            Action Listener Mixin           *\n\t**********************************************/\n\t\n\tvar _bus = __webpack_require__(4);\n\t\n\tvar _utils = __webpack_require__(1);\n\t\n\tvar _actions = __webpack_require__(2);\n\t\n\t\"use strict\";\n\tfunction actionListenerMixin() {\n\t\tvar _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t\tvar handlers = _ref.handlers;\n\t\tvar handlerFn = _ref.handlerFn;\n\t\tvar context = _ref.context;\n\t\tvar channel = _ref.channel;\n\t\tvar topic = _ref.topic;\n\t\n\t\treturn {\n\t\t\tsetup: function setup() {\n\t\t\t\tcontext = context || this;\n\t\t\t\tvar __lux = (0, _utils.ensureLuxProp)(context);\n\t\t\t\tvar subs = __lux.subscriptions;\n\t\t\t\thandlers = handlers || context.handlers;\n\t\t\t\tchannel = channel || _bus.actionChannel;\n\t\t\t\ttopic = topic || \"execute.*\";\n\t\t\t\thandlerFn = handlerFn || function (data, env) {\n\t\t\t\t\tvar handler = handlers[data.actionType];\n\t\t\t\t\tif (handler) {\n\t\t\t\t\t\thandler.apply(context, data.actionArgs);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (!handlers || !Object.keys(handlers).length) {\n\t\t\t\t\tthrow new Error(\"You must have at least one action handler in the handlers property\");\n\t\t\t\t} else if (subs && subs.actionListener) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsubs.actionListener = channel.subscribe(topic, handlerFn).context(context);\n\t\t\t\tvar handlerKeys = Object.keys(handlers);\n\t\t\t\t(0, _actions.generateActionCreator)(handlerKeys);\n\t\t\t\tif (context.namespace) {\n\t\t\t\t\t(0, _actions.addToActionGroup)(context.namespace, handlerKeys);\n\t\t\t\t}\n\t\t\t},\n\t\t\tteardown: function teardown() {\n\t\t\t\tthis.__lux.subscriptions.actionListener.unsubscribe();\n\t\t\t}\n\t\t};\n\t}\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t// istanbul ignore next\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; })();\n\t\n\t// istanbul ignore next\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\texports.removeStore = removeStore;\n\t// istanbul ignore next\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\t// istanbul ignore next\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _bus = __webpack_require__(4);\n\t\n\tvar _utils = __webpack_require__(1);\n\t\n\tvar _dispatcher = __webpack_require__(11);\n\t\n\tvar _dispatcher2 = _interopRequireDefault(_dispatcher);\n\t\n\tvar _lodash = __webpack_require__(3);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _mixins = __webpack_require__(6);\n\t\n\tvar _immutable = __webpack_require__(13);\n\t\n\tvar stores = {};\n\t\n\texports.stores = stores;\n\tfunction buildActionList(handlers) {\n\t\tvar actionList = [];\n\t\tvar _iteratorNormalCompletion = true;\n\t\tvar _didIteratorError = false;\n\t\tvar _iteratorError = undefined;\n\t\n\t\ttry {\n\t\t\tfor (var _iterator = (0, _utils.entries)(handlers)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\tvar _step$value = _slicedToArray(_step.value, 2);\n\t\n\t\t\t\tvar key = _step$value[0];\n\t\t\t\tvar handler = _step$value[1];\n\t\n\t\t\t\tactionList.push({\n\t\t\t\t\tactionType: key,\n\t\t\t\t\twaitFor: handler.waitFor || []\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError = true;\n\t\t\t_iteratorError = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t\t\t\t\t_iterator[\"return\"]();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn actionList;\n\t}\n\t\n\tfunction ensureStoreOptions(options, handlers, store) {\n\t\tvar namespace = options && options.namespace || store.namespace;\n\t\tif (namespace in stores) {\n\t\t\tthrow new Error(\"The store namespace \\\"\" + namespace + \"\\\" already exists.\");\n\t\t}\n\t\tif (!namespace) {\n\t\t\tthrow new Error(\"A lux store must have a namespace value provided\");\n\t\t}\n\t\tif (!handlers || !Object.keys(handlers).length) {\n\t\t\tthrow new Error(\"A lux store must have action handler methods provided\");\n\t\t}\n\t}\n\t\n\tfunction getHandlerObject(key, listeners) {\n\t\treturn {\n\t\t\twaitFor: [],\n\t\t\thandler: function handler() {\n\t\t\t\tvar changed = 0;\n\t\t\t\tvar args = Array.from(arguments);\n\t\t\t\tlisteners[key].forEach((function (listener) {\n\t\t\t\t\tchanged += listener.apply(this, args) === false ? 0 : 1;\n\t\t\t\t}).bind(this));\n\t\t\t\treturn changed > 0;\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction updateWaitFor(source, handlerObject) {\n\t\tif (source.waitFor) {\n\t\t\tsource.waitFor.forEach(function (dep) {\n\t\t\t\tif (handlerObject.waitFor.indexOf(dep) === -1) {\n\t\t\t\t\thandlerObject.waitFor.push(dep);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\t\n\tfunction addListeners(listeners, key, handler) {\n\t\tlisteners[key] = listeners[key] || [];\n\t\tlisteners[key].push(handler.handler || handler);\n\t}\n\t\n\tfunction customMerge(object, source) {\n\t\tvar props = _lodash2[\"default\"].keys(source) || source;\n\t\n\t\t_lodash2[\"default\"].forEach(props, function (srcValue, key) {\n\t\t\tkey = srcValue;\n\t\t\tsrcValue = source[key];\n\t\n\t\t\tif (_immutable.Iterable.isIterable(srcValue)) {\n\t\t\t\tvar objVal = object[key] || {};\n\t\t\t\tif (_lodash2[\"default\"].isEmpty(objVal)) {\n\t\t\t\t\tobject[key] = srcValue;\n\t\t\t\t}\n\t\t\t} else if (_lodash2[\"default\"].isObject(srcValue)) {\n\t\t\t\tobject[key] = _lodash2[\"default\"].merge(object[key] || {}, srcValue);\n\t\t\t} else {\n\t\t\t\tobject[key] = srcValue;\n\t\t\t}\n\t\t});\n\t\n\t\treturn object;\n\t}\n\t\n\tfunction processStoreArgs() {\n\t\tvar listeners = {};\n\t\tvar handlers = {};\n\t\tvar state = {};\n\t\tvar otherOpts = {};\n\t\n\t\tfor (var _len = arguments.length, options = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\toptions[_key] = arguments[_key];\n\t\t}\n\t\n\t\toptions.forEach(function (o) {\n\t\t\tvar opt = undefined;\n\t\t\tif (o) {\n\t\t\t\topt = _lodash2[\"default\"].clone(o);\n\t\n\t\t\t\tstate = customMerge(state, opt.state);\n\t\n\t\t\t\tif (opt.handlers) {\n\t\t\t\t\tObject.keys(opt.handlers).forEach(function (key) {\n\t\t\t\t\t\tvar handler = opt.handlers[key];\n\t\t\t\t\t\t// set up the actual handler method that will be executed\n\t\t\t\t\t\t// as the store handles a dispatched action\n\t\t\t\t\t\thandlers[key] = handlers[key] || getHandlerObject(key, listeners);\n\t\t\t\t\t\t// ensure that the handler definition has a list of all stores\n\t\t\t\t\t\t// being waited upon\n\t\t\t\t\t\tupdateWaitFor(handler, handlers[key]);\n\t\t\t\t\t\t// Add the original handler method(s) to the listeners queue\n\t\t\t\t\t\taddListeners(listeners, key, handler);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tdelete opt.handlers;\n\t\t\t\tdelete opt.state;\n\t\n\t\t\t\t_lodash2[\"default\"].merge(otherOpts, opt);\n\t\t\t}\n\t\t});\n\t\treturn [state, handlers, otherOpts];\n\t}\n\t\n\tvar Store = (function () {\n\t\tfunction Store() {\n\t\t\t// istanbul ignore next\n\t\n\t\t\tvar _this = this;\n\t\n\t\t\t_classCallCheck(this, Store);\n\t\n\t\t\tvar _processStoreArgs = processStoreArgs.apply(undefined, arguments);\n\t\n\t\t\tvar _processStoreArgs2 = _slicedToArray(_processStoreArgs, 3);\n\t\n\t\t\tvar state = _processStoreArgs2[0];\n\t\t\tvar handlers = _processStoreArgs2[1];\n\t\t\tvar options = _processStoreArgs2[2];\n\t\n\t\t\tensureStoreOptions(options, handlers, this);\n\t\t\tvar namespace = options.namespace || this.namespace;\n\t\t\tObject.assign(this, options);\n\t\t\tstores[namespace] = this;\n\t\t\tvar inDispatch = false;\n\t\t\tthis.hasChanged = false;\n\t\n\t\t\tthis.getState = function () {\n\t\t\t\treturn state;\n\t\t\t};\n\t\n\t\t\tthis.setState = function (newState) {\n\t\t\t\tif (!inDispatch) {\n\t\t\t\t\tthrow new Error(\"setState can only be called during a dispatch cycle from a store action handler.\");\n\t\t\t\t}\n\t\t\t\tstate = Object.assign(state, newState);\n\t\t\t};\n\t\n\t\t\tthis.replaceState = function (newState) {\n\t\t\t\tif (!inDispatch) {\n\t\t\t\t\tthrow new Error(\"replaceState can only be called during a dispatch cycle from a store action handler.\");\n\t\t\t\t}\n\t\t\t\t// we preserve the underlying state ref, but clear it\n\t\t\t\tObject.keys(state).forEach(function (key) {\n\t\t\t\t\tdelete state[key];\n\t\t\t\t});\n\t\t\t\tstate = Object.assign(state, newState);\n\t\t\t};\n\t\n\t\t\tthis.flush = function flush() {\n\t\t\t\tinDispatch = false;\n\t\t\t\tif (this.hasChanged) {\n\t\t\t\t\tthis.hasChanged = false;\n\t\t\t\t\t_bus.storeChannel.publish(this.namespace + \".changed\");\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\t(0, _mixins.mixin)(this, _mixins.mixin.actionListener({\n\t\t\t\tcontext: this,\n\t\t\t\tchannel: _bus.dispatcherChannel,\n\t\t\t\ttopic: namespace + \".handle.*\",\n\t\t\t\thandlers: handlers,\n\t\t\t\thandlerFn: (function (data) {\n\t\t\t\t\tif (handlers.hasOwnProperty(data.actionType)) {\n\t\t\t\t\t\tinDispatch = true;\n\t\t\t\t\t\tvar res = handlers[data.actionType].handler.apply(this, data.actionArgs.concat(data.deps));\n\t\t\t\t\t\tthis.hasChanged = res === false ? false : true;\n\t\t\t\t\t\t_bus.dispatcherChannel.publish(this.namespace + \".handled.\" + data.actionType, { hasChanged: this.hasChanged, namespace: this.namespace });\n\t\t\t\t\t}\n\t\t\t\t}).bind(this)\n\t\t\t}));\n\t\n\t\t\tthis.__subscription = {\n\t\t\t\tnotify: _bus.dispatcherChannel.subscribe(\"notify\", function () {\n\t\t\t\t\treturn _this.flush();\n\t\t\t\t}).constraint(function () {\n\t\t\t\t\treturn inDispatch;\n\t\t\t\t})\n\t\t\t};\n\t\n\t\t\t_dispatcher2[\"default\"].registerStore({\n\t\t\t\tnamespace: namespace,\n\t\t\t\tactions: buildActionList(handlers)\n\t\t\t});\n\t\t}\n\t\n\t\t// Need to build in behavior to remove this store\n\t\t// from the dispatcher's actionMap as well!\n\t\n\t\t_createClass(Store, [{\n\t\t\tkey: \"dispose\",\n\t\t\tvalue: function dispose() {\n\t\t\t\t/*eslint-disable */\n\t\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\t\tvar _didIteratorError2 = false;\n\t\t\t\tvar _iteratorError2 = undefined;\n\t\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator2 = (0, _utils.entries)(this.__subscription)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\t\tvar _step2$value = _slicedToArray(_step2.value, 2);\n\t\n\t\t\t\t\t\tvar k = _step2$value[0];\n\t\t\t\t\t\tvar subscription = _step2$value[1];\n\t\n\t\t\t\t\t\tsubscription.unsubscribe();\n\t\t\t\t\t}\n\t\t\t\t\t/*eslint-enable */\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t\t_iteratorError2 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2[\"return\"]) {\n\t\t\t\t\t\t\t_iterator2[\"return\"]();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tdelete stores[this.namespace];\n\t\t\t\t_dispatcher2[\"default\"].removeStore(this.namespace);\n\t\t\t\tthis.luxCleanup();\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Store;\n\t})();\n\t\n\texports.Store = Store;\n\t\n\tfunction removeStore(namespace) {\n\t\tstores[namespace].dispose();\n\t}\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t// istanbul ignore next\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; })();\n\t\n\t// istanbul ignore next\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\t// istanbul ignore next\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\t// istanbul ignore next\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\t// istanbul ignore next\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// istanbul ignore next\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _lodash = __webpack_require__(3);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _bus = __webpack_require__(4);\n\t\n\tvar _utils = __webpack_require__(1);\n\t\n\tvar _machina = __webpack_require__(12);\n\t\n\tvar _machina2 = _interopRequireDefault(_machina);\n\t\n\t\"use strict\";\n\t\n\tfunction calculateGen(store, lookup, gen, actionType, namespaces) {\n\t\tvar calcdGen = gen;\n\t\tvar _namespaces = namespaces || [];\n\t\tif (_namespaces.indexOf(store.namespace) > -1) {\n\t\t\tthrow new Error(\"Circular dependency detected for the \\\"\" + store.namespace + \"\\\" store when participating in the \\\"\" + actionType + \"\\\" action.\");\n\t\t}\n\t\tif (store.waitFor && store.waitFor.length) {\n\t\t\tstore.waitFor.forEach(function (dep) {\n\t\t\t\tvar depStore = lookup[dep];\n\t\t\t\tif (depStore) {\n\t\t\t\t\t_namespaces.push(store.namespace);\n\t\t\t\t\tvar thisGen = calculateGen(depStore, lookup, gen + 1, actionType, _namespaces);\n\t\t\t\t\tif (thisGen > calcdGen) {\n\t\t\t\t\t\tcalcdGen = thisGen;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn(\"The \\\"\" + actionType + \"\\\" action in the \\\"\" + store.namespace + \"\\\" store waits for \\\"\" + dep + \"\\\" but a store with that namespace does not participate in this action.\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn calcdGen;\n\t}\n\t\n\tfunction buildGenerations(stores, actionType) {\n\t\tvar tree = [];\n\t\tvar lookup = {};\n\t\tstores.forEach(function (store) {\n\t\t\treturn lookup[store.namespace] = store;\n\t\t});\n\t\tstores.forEach(function (store) {\n\t\t\treturn store.gen = calculateGen(store, lookup, 0, actionType);\n\t\t});\n\t\t/*eslint-disable */\n\t\tvar _iteratorNormalCompletion = true;\n\t\tvar _didIteratorError = false;\n\t\tvar _iteratorError = undefined;\n\t\n\t\ttry {\n\t\t\tfor (var _iterator = (0, _utils.entries)(lookup)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\tvar _step$value = _slicedToArray(_step.value, 2);\n\t\n\t\t\t\tvar key = _step$value[0];\n\t\t\t\tvar item = _step$value[1];\n\t\n\t\t\t\ttree[item.gen] = tree[item.gen] || [];\n\t\t\t\ttree[item.gen].push(item);\n\t\t\t}\n\t\t\t/*eslint-enable */\n\t\t} catch (err) {\n\t\t\t_didIteratorError = true;\n\t\t\t_iteratorError = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t\t\t\t\t_iterator[\"return\"]();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn tree;\n\t}\n\t\n\tfunction processGeneration(generation, action) {\n\t\t// istanbul ignore next\n\t\n\t\tvar _this = this;\n\t\n\t\tgeneration.map(function (store) {\n\t\t\tvar data = Object.assign({\n\t\t\t\tdeps: _lodash2[\"default\"].pick(_this.stores, store.waitFor)\n\t\t\t}, action);\n\t\t\t_bus.dispatcherChannel.publish(store.namespace + \".handle.\" + action.actionType, data);\n\t\t});\n\t}\n\t\n\tvar Dispatcher = (function (_machina$BehavioralFsm) {\n\t\t_inherits(Dispatcher, _machina$BehavioralFsm);\n\t\n\t\tfunction Dispatcher() {\n\t\t\t_classCallCheck(this, Dispatcher);\n\t\n\t\t\t_get(Object.getPrototypeOf(Dispatcher.prototype), \"constructor\", this).call(this, {\n\t\t\t\tinitialState: \"ready\",\n\t\t\t\tactionMap: {},\n\t\t\t\tstates: {\n\t\t\t\t\tready: {\n\t\t\t\t\t\t_onEnter: function _onEnter() {\n\t\t\t\t\t\t\tthis.actionContext = undefined;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"action.dispatch\": \"dispatching\"\n\t\t\t\t\t},\n\t\t\t\t\tdispatching: {\n\t\t\t\t\t\t_onEnter: function _onEnter(luxAction) {\n\t\t\t\t\t\t\tthis.actionContext = luxAction;\n\t\t\t\t\t\t\tif (luxAction.generations.length) {\n\t\t\t\t\t\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\t\t\t\t\t\tvar _didIteratorError2 = false;\n\t\t\t\t\t\t\t\tvar _iteratorError2 = undefined;\n\t\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tfor (var _iterator2 = luxAction.generations[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\t\t\t\t\t\tvar generation = _step2.value;\n\t\n\t\t\t\t\t\t\t\t\t\tprocessGeneration.call(luxAction, generation, luxAction.action);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t\t\t\t\t\t_iteratorError2 = err;\n\t\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2[\"return\"]) {\n\t\t\t\t\t\t\t\t\t\t\t_iterator2[\"return\"]();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tthis.transition(luxAction, \"notifying\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.transition(luxAction, \"nothandled\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"action.handled\": function actionHandled(luxAction, data) {\n\t\t\t\t\t\t\tif (data.hasChanged) {\n\t\t\t\t\t\t\t\tluxAction.updated.push(data.namespace);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t_onExit: function _onExit(luxAction) {\n\t\t\t\t\t\t\tif (luxAction.updated.length) {\n\t\t\t\t\t\t\t\t_bus.dispatcherChannel.publish(\"prenotify\", { stores: luxAction.updated });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tnotifying: {\n\t\t\t\t\t\t_onEnter: function _onEnter(luxAction) {\n\t\t\t\t\t\t\t_bus.dispatcherChannel.publish(\"notify\", {\n\t\t\t\t\t\t\t\taction: luxAction.action\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tnothandled: {}\n\t\t\t\t},\n\t\t\t\tgetStoresHandling: function getStoresHandling(actionType) {\n\t\t\t\t\tvar stores = this.actionMap[actionType] || [];\n\t\t\t\t\treturn {\n\t\t\t\t\t\tstores: stores,\n\t\t\t\t\t\tgenerations: buildGenerations(stores, actionType)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.createSubscribers();\n\t\t}\n\t\n\t\t_createClass(Dispatcher, [{\n\t\t\tkey: \"handleActionDispatch\",\n\t\t\tvalue: function handleActionDispatch(data) {\n\t\t\t\tvar luxAction = Object.assign({ action: data, generationIndex: 0, updated: [] }, this.getStoresHandling(data.actionType));\n\t\t\t\tthis.handle(luxAction, \"action.dispatch\");\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"registerStore\",\n\t\t\tvalue: function registerStore(storeMeta) {\n\t\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\t\tvar _didIteratorError3 = false;\n\t\t\t\tvar _iteratorError3 = undefined;\n\t\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator3 = storeMeta.actions[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\t\tvar actionDef = _step3.value;\n\t\n\t\t\t\t\t\tvar action = undefined;\n\t\t\t\t\t\tvar actionName = actionDef.actionType;\n\t\t\t\t\t\tvar actionMeta = {\n\t\t\t\t\t\t\tnamespace: storeMeta.namespace,\n\t\t\t\t\t\t\twaitFor: actionDef.waitFor\n\t\t\t\t\t\t};\n\t\t\t\t\t\taction = this.actionMap[actionName] = this.actionMap[actionName] || [];\n\t\t\t\t\t\taction.push(actionMeta);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t\t_iteratorError3 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3[\"return\"]) {\n\t\t\t\t\t\t\t_iterator3[\"return\"]();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"removeStore\",\n\t\t\tvalue: function removeStore(namespace) {\n\t\t\t\tfunction isThisNameSpace(meta) {\n\t\t\t\t\treturn meta.namespace === namespace;\n\t\t\t\t}\n\t\t\t\t/*eslint-disable */\n\t\t\t\tvar _iteratorNormalCompletion4 = true;\n\t\t\t\tvar _didIteratorError4 = false;\n\t\t\t\tvar _iteratorError4 = undefined;\n\t\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator4 = (0, _utils.entries)(this.actionMap)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t\t\t\t\t\tvar _step4$value = _slicedToArray(_step4.value, 2);\n\t\n\t\t\t\t\t\tvar k = _step4$value[0];\n\t\t\t\t\t\tvar v = _step4$value[1];\n\t\n\t\t\t\t\t\tvar idx = v.findIndex(isThisNameSpace);\n\t\t\t\t\t\tif (idx !== -1) {\n\t\t\t\t\t\t\tv.splice(idx, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t/*eslint-enable */\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError4 = true;\n\t\t\t\t\t_iteratorError4 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion4 && _iterator4[\"return\"]) {\n\t\t\t\t\t\t\t_iterator4[\"return\"]();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError4) {\n\t\t\t\t\t\t\tthrow _iteratorError4;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"createSubscribers\",\n\t\t\tvalue: function createSubscribers() {\n\t\t\t\t// istanbul ignore next\n\t\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\tif (!this.__subscriptions || !this.__subscriptions.length) {\n\t\t\t\t\tthis.__subscriptions = [_bus.actionChannel.subscribe(\"execute.*\", function (data, env) {\n\t\t\t\t\t\treturn _this2.handleActionDispatch(data);\n\t\t\t\t\t}), _bus.dispatcherChannel.subscribe(\"*.handled.*\", function (data) {\n\t\t\t\t\t\treturn _this2.handle(_this2.actionContext, \"action.handled\", data);\n\t\t\t\t\t}).constraint(function () {\n\t\t\t\t\t\treturn !!_this2.actionContext;\n\t\t\t\t\t})];\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: \"dispose\",\n\t\t\tvalue: function dispose() {\n\t\t\t\tif (this.__subscriptions) {\n\t\t\t\t\tthis.__subscriptions.forEach(function (subscription) {\n\t\t\t\t\t\treturn subscription.unsubscribe();\n\t\t\t\t\t});\n\t\t\t\t\tthis.__subscriptions = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Dispatcher;\n\t})(_machina2[\"default\"].BehavioralFsm);\n\t\n\texports[\"default\"] = new Dispatcher();\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t *  Copyright (c) 2014-2015, Facebook, Inc.\n\t *  All rights reserved.\n\t *\n\t *  This source code is licensed under the BSD-style license found in the\n\t *  LICENSE file in the root directory of this source tree. An additional grant\n\t *  of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.Immutable = factory();\n\t}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\t\n\t  function createClass(ctor, superClass) {\n\t    if (superClass) {\n\t      ctor.prototype = Object.create(superClass.prototype);\n\t    }\n\t    ctor.prototype.constructor = ctor;\n\t  }\n\t\n\t  function Iterable(value) {\n\t      return isIterable(value) ? value : Seq(value);\n\t    }\n\t\n\t\n\t  createClass(KeyedIterable, Iterable);\n\t    function KeyedIterable(value) {\n\t      return isKeyed(value) ? value : KeyedSeq(value);\n\t    }\n\t\n\t\n\t  createClass(IndexedIterable, Iterable);\n\t    function IndexedIterable(value) {\n\t      return isIndexed(value) ? value : IndexedSeq(value);\n\t    }\n\t\n\t\n\t  createClass(SetIterable, Iterable);\n\t    function SetIterable(value) {\n\t      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n\t    }\n\t\n\t\n\t\n\t  function isIterable(maybeIterable) {\n\t    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n\t  }\n\t\n\t  function isKeyed(maybeKeyed) {\n\t    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n\t  }\n\t\n\t  function isIndexed(maybeIndexed) {\n\t    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n\t  }\n\t\n\t  function isAssociative(maybeAssociative) {\n\t    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n\t  }\n\t\n\t  function isOrdered(maybeOrdered) {\n\t    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n\t  }\n\t\n\t  Iterable.isIterable = isIterable;\n\t  Iterable.isKeyed = isKeyed;\n\t  Iterable.isIndexed = isIndexed;\n\t  Iterable.isAssociative = isAssociative;\n\t  Iterable.isOrdered = isOrdered;\n\t\n\t  Iterable.Keyed = KeyedIterable;\n\t  Iterable.Indexed = IndexedIterable;\n\t  Iterable.Set = SetIterable;\n\t\n\t\n\t  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n\t  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n\t  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n\t  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\t\n\t  // Used for setting prototype methods that IE8 chokes on.\n\t  var DELETE = 'delete';\n\t\n\t  // Constants describing the size of trie nodes.\n\t  var SHIFT = 5; // Resulted in best performance after ______?\n\t  var SIZE = 1 << SHIFT;\n\t  var MASK = SIZE - 1;\n\t\n\t  // A consistent shared value representing \"not set\" which equals nothing other\n\t  // than itself, and nothing that could be provided externally.\n\t  var NOT_SET = {};\n\t\n\t  // Boolean references, Rough equivalent of `bool &`.\n\t  var CHANGE_LENGTH = { value: false };\n\t  var DID_ALTER = { value: false };\n\t\n\t  function MakeRef(ref) {\n\t    ref.value = false;\n\t    return ref;\n\t  }\n\t\n\t  function SetRef(ref) {\n\t    ref && (ref.value = true);\n\t  }\n\t\n\t  // A function which returns a value representing an \"owner\" for transient writes\n\t  // to tries. The return value will only ever equal itself, and will not equal\n\t  // the return of any subsequent call of this function.\n\t  function OwnerID() {}\n\t\n\t  // http://jsperf.com/copy-array-inline\n\t  function arrCopy(arr, offset) {\n\t    offset = offset || 0;\n\t    var len = Math.max(0, arr.length - offset);\n\t    var newArr = new Array(len);\n\t    for (var ii = 0; ii < len; ii++) {\n\t      newArr[ii] = arr[ii + offset];\n\t    }\n\t    return newArr;\n\t  }\n\t\n\t  function ensureSize(iter) {\n\t    if (iter.size === undefined) {\n\t      iter.size = iter.__iterate(returnTrue);\n\t    }\n\t    return iter.size;\n\t  }\n\t\n\t  function wrapIndex(iter, index) {\n\t    // This implements \"is array index\" which the ECMAString spec defines as:\n\t    //\n\t    //     A String property name P is an array index if and only if\n\t    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n\t    //     to 2^32−1.\n\t    //\n\t    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n\t    if (typeof index !== 'number') {\n\t      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n\t      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n\t        return NaN;\n\t      }\n\t      index = uint32Index;\n\t    }\n\t    return index < 0 ? ensureSize(iter) + index : index;\n\t  }\n\t\n\t  function returnTrue() {\n\t    return true;\n\t  }\n\t\n\t  function wholeSlice(begin, end, size) {\n\t    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n\t      (end === undefined || (size !== undefined && end >= size));\n\t  }\n\t\n\t  function resolveBegin(begin, size) {\n\t    return resolveIndex(begin, size, 0);\n\t  }\n\t\n\t  function resolveEnd(end, size) {\n\t    return resolveIndex(end, size, size);\n\t  }\n\t\n\t  function resolveIndex(index, size, defaultIndex) {\n\t    return index === undefined ?\n\t      defaultIndex :\n\t      index < 0 ?\n\t        Math.max(0, size + index) :\n\t        size === undefined ?\n\t          index :\n\t          Math.min(size, index);\n\t  }\n\t\n\t  /* global Symbol */\n\t\n\t  var ITERATE_KEYS = 0;\n\t  var ITERATE_VALUES = 1;\n\t  var ITERATE_ENTRIES = 2;\n\t\n\t  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n\t  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\t\n\t  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\t\n\t\n\t  function Iterator(next) {\n\t      this.next = next;\n\t    }\n\t\n\t    Iterator.prototype.toString = function() {\n\t      return '[Iterator]';\n\t    };\n\t\n\t\n\t  Iterator.KEYS = ITERATE_KEYS;\n\t  Iterator.VALUES = ITERATE_VALUES;\n\t  Iterator.ENTRIES = ITERATE_ENTRIES;\n\t\n\t  Iterator.prototype.inspect =\n\t  Iterator.prototype.toSource = function () { return this.toString(); }\n\t  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n\t    return this;\n\t  };\n\t\n\t\n\t  function iteratorValue(type, k, v, iteratorResult) {\n\t    var value = type === 0 ? k : type === 1 ? v : [k, v];\n\t    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n\t      value: value, done: false\n\t    });\n\t    return iteratorResult;\n\t  }\n\t\n\t  function iteratorDone() {\n\t    return { value: undefined, done: true };\n\t  }\n\t\n\t  function hasIterator(maybeIterable) {\n\t    return !!getIteratorFn(maybeIterable);\n\t  }\n\t\n\t  function isIterator(maybeIterator) {\n\t    return maybeIterator && typeof maybeIterator.next === 'function';\n\t  }\n\t\n\t  function getIterator(iterable) {\n\t    var iteratorFn = getIteratorFn(iterable);\n\t    return iteratorFn && iteratorFn.call(iterable);\n\t  }\n\t\n\t  function getIteratorFn(iterable) {\n\t    var iteratorFn = iterable && (\n\t      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n\t      iterable[FAUX_ITERATOR_SYMBOL]\n\t    );\n\t    if (typeof iteratorFn === 'function') {\n\t      return iteratorFn;\n\t    }\n\t  }\n\t\n\t  function isArrayLike(value) {\n\t    return value && typeof value.length === 'number';\n\t  }\n\t\n\t  createClass(Seq, Iterable);\n\t    function Seq(value) {\n\t      return value === null || value === undefined ? emptySequence() :\n\t        isIterable(value) ? value.toSeq() : seqFromValue(value);\n\t    }\n\t\n\t    Seq.of = function(/*...values*/) {\n\t      return Seq(arguments);\n\t    };\n\t\n\t    Seq.prototype.toSeq = function() {\n\t      return this;\n\t    };\n\t\n\t    Seq.prototype.toString = function() {\n\t      return this.__toString('Seq {', '}');\n\t    };\n\t\n\t    Seq.prototype.cacheResult = function() {\n\t      if (!this._cache && this.__iterateUncached) {\n\t        this._cache = this.entrySeq().toArray();\n\t        this.size = this._cache.length;\n\t      }\n\t      return this;\n\t    };\n\t\n\t    // abstract __iterateUncached(fn, reverse)\n\t\n\t    Seq.prototype.__iterate = function(fn, reverse) {\n\t      return seqIterate(this, fn, reverse, true);\n\t    };\n\t\n\t    // abstract __iteratorUncached(type, reverse)\n\t\n\t    Seq.prototype.__iterator = function(type, reverse) {\n\t      return seqIterator(this, type, reverse, true);\n\t    };\n\t\n\t\n\t\n\t  createClass(KeyedSeq, Seq);\n\t    function KeyedSeq(value) {\n\t      return value === null || value === undefined ?\n\t        emptySequence().toKeyedSeq() :\n\t        isIterable(value) ?\n\t          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n\t          keyedSeqFromValue(value);\n\t    }\n\t\n\t    KeyedSeq.prototype.toKeyedSeq = function() {\n\t      return this;\n\t    };\n\t\n\t\n\t\n\t  createClass(IndexedSeq, Seq);\n\t    function IndexedSeq(value) {\n\t      return value === null || value === undefined ? emptySequence() :\n\t        !isIterable(value) ? indexedSeqFromValue(value) :\n\t        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n\t    }\n\t\n\t    IndexedSeq.of = function(/*...values*/) {\n\t      return IndexedSeq(arguments);\n\t    };\n\t\n\t    IndexedSeq.prototype.toIndexedSeq = function() {\n\t      return this;\n\t    };\n\t\n\t    IndexedSeq.prototype.toString = function() {\n\t      return this.__toString('Seq [', ']');\n\t    };\n\t\n\t    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n\t      return seqIterate(this, fn, reverse, false);\n\t    };\n\t\n\t    IndexedSeq.prototype.__iterator = function(type, reverse) {\n\t      return seqIterator(this, type, reverse, false);\n\t    };\n\t\n\t\n\t\n\t  createClass(SetSeq, Seq);\n\t    function SetSeq(value) {\n\t      return (\n\t        value === null || value === undefined ? emptySequence() :\n\t        !isIterable(value) ? indexedSeqFromValue(value) :\n\t        isKeyed(value) ? value.entrySeq() : value\n\t      ).toSetSeq();\n\t    }\n\t\n\t    SetSeq.of = function(/*...values*/) {\n\t      return SetSeq(arguments);\n\t    };\n\t\n\t    SetSeq.prototype.toSetSeq = function() {\n\t      return this;\n\t    };\n\t\n\t\n\t\n\t  Seq.isSeq = isSeq;\n\t  Seq.Keyed = KeyedSeq;\n\t  Seq.Set = SetSeq;\n\t  Seq.Indexed = IndexedSeq;\n\t\n\t  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\t\n\t  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\t\n\t\n\t\n\t  createClass(ArraySeq, IndexedSeq);\n\t    function ArraySeq(array) {\n\t      this._array = array;\n\t      this.size = array.length;\n\t    }\n\t\n\t    ArraySeq.prototype.get = function(index, notSetValue) {\n\t      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n\t    };\n\t\n\t    ArraySeq.prototype.__iterate = function(fn, reverse) {\n\t      var array = this._array;\n\t      var maxIndex = array.length - 1;\n\t      for (var ii = 0; ii <= maxIndex; ii++) {\n\t        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n\t          return ii + 1;\n\t        }\n\t      }\n\t      return ii;\n\t    };\n\t\n\t    ArraySeq.prototype.__iterator = function(type, reverse) {\n\t      var array = this._array;\n\t      var maxIndex = array.length - 1;\n\t      var ii = 0;\n\t      return new Iterator(function() \n\t        {return ii > maxIndex ?\n\t          iteratorDone() :\n\t          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n\t      );\n\t    };\n\t\n\t\n\t\n\t  createClass(ObjectSeq, KeyedSeq);\n\t    function ObjectSeq(object) {\n\t      var keys = Object.keys(object);\n\t      this._object = object;\n\t      this._keys = keys;\n\t      this.size = keys.length;\n\t    }\n\t\n\t    ObjectSeq.prototype.get = function(key, notSetValue) {\n\t      if (notSetValue !== undefined && !this.has(key)) {\n\t        return notSetValue;\n\t      }\n\t      return this._object[key];\n\t    };\n\t\n\t    ObjectSeq.prototype.has = function(key) {\n\t      return this._object.hasOwnProperty(key);\n\t    };\n\t\n\t    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n\t      var object = this._object;\n\t      var keys = this._keys;\n\t      var maxIndex = keys.length - 1;\n\t      for (var ii = 0; ii <= maxIndex; ii++) {\n\t        var key = keys[reverse ? maxIndex - ii : ii];\n\t        if (fn(object[key], key, this) === false) {\n\t          return ii + 1;\n\t        }\n\t      }\n\t      return ii;\n\t    };\n\t\n\t    ObjectSeq.prototype.__iterator = function(type, reverse) {\n\t      var object = this._object;\n\t      var keys = this._keys;\n\t      var maxIndex = keys.length - 1;\n\t      var ii = 0;\n\t      return new Iterator(function()  {\n\t        var key = keys[reverse ? maxIndex - ii : ii];\n\t        return ii++ > maxIndex ?\n\t          iteratorDone() :\n\t          iteratorValue(type, key, object[key]);\n\t      });\n\t    };\n\t\n\t  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\t\n\t\n\t  createClass(IterableSeq, IndexedSeq);\n\t    function IterableSeq(iterable) {\n\t      this._iterable = iterable;\n\t      this.size = iterable.length || iterable.size;\n\t    }\n\t\n\t    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n\t      if (reverse) {\n\t        return this.cacheResult().__iterate(fn, reverse);\n\t      }\n\t      var iterable = this._iterable;\n\t      var iterator = getIterator(iterable);\n\t      var iterations = 0;\n\t      if (isIterator(iterator)) {\n\t        var step;\n\t        while (!(step = iterator.next()).done) {\n\t          if (fn(step.value, iterations++, this) === false) {\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      return iterations;\n\t    };\n\t\n\t    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n\t      if (reverse) {\n\t        return this.cacheResult().__iterator(type, reverse);\n\t      }\n\t      var iterable = this._iterable;\n\t      var iterator = getIterator(iterable);\n\t      if (!isIterator(iterator)) {\n\t        return new Iterator(iteratorDone);\n\t      }\n\t      var iterations = 0;\n\t      return new Iterator(function()  {\n\t        var step = iterator.next();\n\t        return step.done ? step : iteratorValue(type, iterations++, step.value);\n\t      });\n\t    };\n\t\n\t\n\t\n\t  createClass(IteratorSeq, IndexedSeq);\n\t    function IteratorSeq(iterator) {\n\t      this._iterator = iterator;\n\t      this._iteratorCache = [];\n\t    }\n\t\n\t    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n\t      if (reverse) {\n\t        return this.cacheResult().__iterate(fn, reverse);\n\t      }\n\t      var iterator = this._iterator;\n\t      var cache = this._iteratorCache;\n\t      var iterations = 0;\n\t      while (iterations < cache.length) {\n\t        if (fn(cache[iterations], iterations++, this) === false) {\n\t          return iterations;\n\t        }\n\t      }\n\t      var step;\n\t      while (!(step = iterator.next()).done) {\n\t        var val = step.value;\n\t        cache[iterations] = val;\n\t        if (fn(val, iterations++, this) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return iterations;\n\t    };\n\t\n\t    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n\t      if (reverse) {\n\t        return this.cacheResult().__iterator(type, reverse);\n\t      }\n\t      var iterator = this._iterator;\n\t      var cache = this._iteratorCache;\n\t      var iterations = 0;\n\t      return new Iterator(function()  {\n\t        if (iterations >= cache.length) {\n\t          var step = iterator.next();\n\t          if (step.done) {\n\t            return step;\n\t          }\n\t          cache[iterations] = step.value;\n\t        }\n\t        return iteratorValue(type, iterations, cache[iterations++]);\n\t      });\n\t    };\n\t\n\t\n\t\n\t\n\t  // # pragma Helper functions\n\t\n\t  function isSeq(maybeSeq) {\n\t    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n\t  }\n\t\n\t  var EMPTY_SEQ;\n\t\n\t  function emptySequence() {\n\t    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n\t  }\n\t\n\t  function keyedSeqFromValue(value) {\n\t    var seq =\n\t      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n\t      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n\t      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n\t      typeof value === 'object' ? new ObjectSeq(value) :\n\t      undefined;\n\t    if (!seq) {\n\t      throw new TypeError(\n\t        'Expected Array or iterable object of [k, v] entries, '+\n\t        'or keyed object: ' + value\n\t      );\n\t    }\n\t    return seq;\n\t  }\n\t\n\t  function indexedSeqFromValue(value) {\n\t    var seq = maybeIndexedSeqFromValue(value);\n\t    if (!seq) {\n\t      throw new TypeError(\n\t        'Expected Array or iterable object of values: ' + value\n\t      );\n\t    }\n\t    return seq;\n\t  }\n\t\n\t  function seqFromValue(value) {\n\t    var seq = maybeIndexedSeqFromValue(value) ||\n\t      (typeof value === 'object' && new ObjectSeq(value));\n\t    if (!seq) {\n\t      throw new TypeError(\n\t        'Expected Array or iterable object of values, or keyed object: ' + value\n\t      );\n\t    }\n\t    return seq;\n\t  }\n\t\n\t  function maybeIndexedSeqFromValue(value) {\n\t    return (\n\t      isArrayLike(value) ? new ArraySeq(value) :\n\t      isIterator(value) ? new IteratorSeq(value) :\n\t      hasIterator(value) ? new IterableSeq(value) :\n\t      undefined\n\t    );\n\t  }\n\t\n\t  function seqIterate(seq, fn, reverse, useKeys) {\n\t    var cache = seq._cache;\n\t    if (cache) {\n\t      var maxIndex = cache.length - 1;\n\t      for (var ii = 0; ii <= maxIndex; ii++) {\n\t        var entry = cache[reverse ? maxIndex - ii : ii];\n\t        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n\t          return ii + 1;\n\t        }\n\t      }\n\t      return ii;\n\t    }\n\t    return seq.__iterateUncached(fn, reverse);\n\t  }\n\t\n\t  function seqIterator(seq, type, reverse, useKeys) {\n\t    var cache = seq._cache;\n\t    if (cache) {\n\t      var maxIndex = cache.length - 1;\n\t      var ii = 0;\n\t      return new Iterator(function()  {\n\t        var entry = cache[reverse ? maxIndex - ii : ii];\n\t        return ii++ > maxIndex ?\n\t          iteratorDone() :\n\t          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n\t      });\n\t    }\n\t    return seq.__iteratorUncached(type, reverse);\n\t  }\n\t\n\t  function fromJS(json, converter) {\n\t    return converter ?\n\t      fromJSWith(converter, json, '', {'': json}) :\n\t      fromJSDefault(json);\n\t  }\n\t\n\t  function fromJSWith(converter, json, key, parentJSON) {\n\t    if (Array.isArray(json)) {\n\t      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n\t    }\n\t    if (isPlainObj(json)) {\n\t      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n\t    }\n\t    return json;\n\t  }\n\t\n\t  function fromJSDefault(json) {\n\t    if (Array.isArray(json)) {\n\t      return IndexedSeq(json).map(fromJSDefault).toList();\n\t    }\n\t    if (isPlainObj(json)) {\n\t      return KeyedSeq(json).map(fromJSDefault).toMap();\n\t    }\n\t    return json;\n\t  }\n\t\n\t  function isPlainObj(value) {\n\t    return value && (value.constructor === Object || value.constructor === undefined);\n\t  }\n\t\n\t  /**\n\t   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n\t   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n\t   *\n\t   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n\t   * value, which is different from the algorithm described by\n\t   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n\t   *\n\t   * This is extended further to allow Objects to describe the values they\n\t   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n\t   *\n\t   * Note: because of this extension, the key equality of Immutable.Map and the\n\t   * value equality of Immutable.Set will differ from ES6 Map and Set.\n\t   *\n\t   * ### Defining custom values\n\t   *\n\t   * The easiest way to describe the value an object represents is by implementing\n\t   * `valueOf`. For example, `Date` represents a value by returning a unix\n\t   * timestamp for `valueOf`:\n\t   *\n\t   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n\t   *     var date2 = new Date(1234567890000);\n\t   *     date1.valueOf(); // 1234567890000\n\t   *     assert( date1 !== date2 );\n\t   *     assert( Immutable.is( date1, date2 ) );\n\t   *\n\t   * Note: overriding `valueOf` may have other implications if you use this object\n\t   * where JavaScript expects a primitive, such as implicit string coercion.\n\t   *\n\t   * For more complex types, especially collections, implementing `valueOf` may\n\t   * not be performant. An alternative is to implement `equals` and `hashCode`.\n\t   *\n\t   * `equals` takes another object, presumably of similar type, and returns true\n\t   * if the it is equal. Equality is symmetrical, so the same result should be\n\t   * returned if this and the argument are flipped.\n\t   *\n\t   *     assert( a.equals(b) === b.equals(a) );\n\t   *\n\t   * `hashCode` returns a 32bit integer number representing the object which will\n\t   * be used to determine how to store the value object in a Map or Set. You must\n\t   * provide both or neither methods, one must not exist without the other.\n\t   *\n\t   * Also, an important relationship between these methods must be upheld: if two\n\t   * values are equal, they *must* return the same hashCode. If the values are not\n\t   * equal, they might have the same hashCode; this is called a hash collision,\n\t   * and while undesirable for performance reasons, it is acceptable.\n\t   *\n\t   *     if (a.equals(b)) {\n\t   *       assert( a.hashCode() === b.hashCode() );\n\t   *     }\n\t   *\n\t   * All Immutable collections implement `equals` and `hashCode`.\n\t   *\n\t   */\n\t  function is(valueA, valueB) {\n\t    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n\t      return true;\n\t    }\n\t    if (!valueA || !valueB) {\n\t      return false;\n\t    }\n\t    if (typeof valueA.valueOf === 'function' &&\n\t        typeof valueB.valueOf === 'function') {\n\t      valueA = valueA.valueOf();\n\t      valueB = valueB.valueOf();\n\t      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n\t        return true;\n\t      }\n\t      if (!valueA || !valueB) {\n\t        return false;\n\t      }\n\t    }\n\t    if (typeof valueA.equals === 'function' &&\n\t        typeof valueB.equals === 'function' &&\n\t        valueA.equals(valueB)) {\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\t\n\t  function deepEqual(a, b) {\n\t    if (a === b) {\n\t      return true;\n\t    }\n\t\n\t    if (\n\t      !isIterable(b) ||\n\t      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n\t      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n\t      isKeyed(a) !== isKeyed(b) ||\n\t      isIndexed(a) !== isIndexed(b) ||\n\t      isOrdered(a) !== isOrdered(b)\n\t    ) {\n\t      return false;\n\t    }\n\t\n\t    if (a.size === 0 && b.size === 0) {\n\t      return true;\n\t    }\n\t\n\t    var notAssociative = !isAssociative(a);\n\t\n\t    if (isOrdered(a)) {\n\t      var entries = a.entries();\n\t      return b.every(function(v, k)  {\n\t        var entry = entries.next().value;\n\t        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n\t      }) && entries.next().done;\n\t    }\n\t\n\t    var flipped = false;\n\t\n\t    if (a.size === undefined) {\n\t      if (b.size === undefined) {\n\t        if (typeof a.cacheResult === 'function') {\n\t          a.cacheResult();\n\t        }\n\t      } else {\n\t        flipped = true;\n\t        var _ = a;\n\t        a = b;\n\t        b = _;\n\t      }\n\t    }\n\t\n\t    var allEqual = true;\n\t    var bSize = b.__iterate(function(v, k)  {\n\t      if (notAssociative ? !a.has(v) :\n\t          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n\t        allEqual = false;\n\t        return false;\n\t      }\n\t    });\n\t\n\t    return allEqual && a.size === bSize;\n\t  }\n\t\n\t  createClass(Repeat, IndexedSeq);\n\t\n\t    function Repeat(value, times) {\n\t      if (!(this instanceof Repeat)) {\n\t        return new Repeat(value, times);\n\t      }\n\t      this._value = value;\n\t      this.size = times === undefined ? Infinity : Math.max(0, times);\n\t      if (this.size === 0) {\n\t        if (EMPTY_REPEAT) {\n\t          return EMPTY_REPEAT;\n\t        }\n\t        EMPTY_REPEAT = this;\n\t      }\n\t    }\n\t\n\t    Repeat.prototype.toString = function() {\n\t      if (this.size === 0) {\n\t        return 'Repeat []';\n\t      }\n\t      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n\t    };\n\t\n\t    Repeat.prototype.get = function(index, notSetValue) {\n\t      return this.has(index) ? this._value : notSetValue;\n\t    };\n\t\n\t    Repeat.prototype.includes = function(searchValue) {\n\t      return is(this._value, searchValue);\n\t    };\n\t\n\t    Repeat.prototype.slice = function(begin, end) {\n\t      var size = this.size;\n\t      return wholeSlice(begin, end, size) ? this :\n\t        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n\t    };\n\t\n\t    Repeat.prototype.reverse = function() {\n\t      return this;\n\t    };\n\t\n\t    Repeat.prototype.indexOf = function(searchValue) {\n\t      if (is(this._value, searchValue)) {\n\t        return 0;\n\t      }\n\t      return -1;\n\t    };\n\t\n\t    Repeat.prototype.lastIndexOf = function(searchValue) {\n\t      if (is(this._value, searchValue)) {\n\t        return this.size;\n\t      }\n\t      return -1;\n\t    };\n\t\n\t    Repeat.prototype.__iterate = function(fn, reverse) {\n\t      for (var ii = 0; ii < this.size; ii++) {\n\t        if (fn(this._value, ii, this) === false) {\n\t          return ii + 1;\n\t        }\n\t      }\n\t      return ii;\n\t    };\n\t\n\t    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n\t      var ii = 0;\n\t      return new Iterator(function() \n\t        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n\t      );\n\t    };\n\t\n\t    Repeat.prototype.equals = function(other) {\n\t      return other instanceof Repeat ?\n\t        is(this._value, other._value) :\n\t        deepEqual(other);\n\t    };\n\t\n\t\n\t  var EMPTY_REPEAT;\n\t\n\t  function invariant(condition, error) {\n\t    if (!condition) throw new Error(error);\n\t  }\n\t\n\t  createClass(Range, IndexedSeq);\n\t\n\t    function Range(start, end, step) {\n\t      if (!(this instanceof Range)) {\n\t        return new Range(start, end, step);\n\t      }\n\t      invariant(step !== 0, 'Cannot step a Range by 0');\n\t      start = start || 0;\n\t      if (end === undefined) {\n\t        end = Infinity;\n\t      }\n\t      step = step === undefined ? 1 : Math.abs(step);\n\t      if (end < start) {\n\t        step = -step;\n\t      }\n\t      this._start = start;\n\t      this._end = end;\n\t      this._step = step;\n\t      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n\t      if (this.size === 0) {\n\t        if (EMPTY_RANGE) {\n\t          return EMPTY_RANGE;\n\t        }\n\t        EMPTY_RANGE = this;\n\t      }\n\t    }\n\t\n\t    Range.prototype.toString = function() {\n\t      if (this.size === 0) {\n\t        return 'Range []';\n\t      }\n\t      return 'Range [ ' +\n\t        this._start + '...' + this._end +\n\t        (this._step > 1 ? ' by ' + this._step : '') +\n\t      ' ]';\n\t    };\n\t\n\t    Range.prototype.get = function(index, notSetValue) {\n\t      return this.has(index) ?\n\t        this._start + wrapIndex(this, index) * this._step :\n\t        notSetValue;\n\t    };\n\t\n\t    Range.prototype.includes = function(searchValue) {\n\t      var possibleIndex = (searchValue - this._start) / this._step;\n\t      return possibleIndex >= 0 &&\n\t        possibleIndex < this.size &&\n\t        possibleIndex === Math.floor(possibleIndex);\n\t    };\n\t\n\t    Range.prototype.slice = function(begin, end) {\n\t      if (wholeSlice(begin, end, this.size)) {\n\t        return this;\n\t      }\n\t      begin = resolveBegin(begin, this.size);\n\t      end = resolveEnd(end, this.size);\n\t      if (end <= begin) {\n\t        return new Range(0, 0);\n\t      }\n\t      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n\t    };\n\t\n\t    Range.prototype.indexOf = function(searchValue) {\n\t      var offsetValue = searchValue - this._start;\n\t      if (offsetValue % this._step === 0) {\n\t        var index = offsetValue / this._step;\n\t        if (index >= 0 && index < this.size) {\n\t          return index\n\t        }\n\t      }\n\t      return -1;\n\t    };\n\t\n\t    Range.prototype.lastIndexOf = function(searchValue) {\n\t      return this.indexOf(searchValue);\n\t    };\n\t\n\t    Range.prototype.__iterate = function(fn, reverse) {\n\t      var maxIndex = this.size - 1;\n\t      var step = this._step;\n\t      var value = reverse ? this._start + maxIndex * step : this._start;\n\t      for (var ii = 0; ii <= maxIndex; ii++) {\n\t        if (fn(value, ii, this) === false) {\n\t          return ii + 1;\n\t        }\n\t        value += reverse ? -step : step;\n\t      }\n\t      return ii;\n\t    };\n\t\n\t    Range.prototype.__iterator = function(type, reverse) {\n\t      var maxIndex = this.size - 1;\n\t      var step = this._step;\n\t      var value = reverse ? this._start + maxIndex * step : this._start;\n\t      var ii = 0;\n\t      return new Iterator(function()  {\n\t        var v = value;\n\t        value += reverse ? -step : step;\n\t        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n\t      });\n\t    };\n\t\n\t    Range.prototype.equals = function(other) {\n\t      return other instanceof Range ?\n\t        this._start === other._start &&\n\t        this._end === other._end &&\n\t        this._step === other._step :\n\t        deepEqual(this, other);\n\t    };\n\t\n\t\n\t  var EMPTY_RANGE;\n\t\n\t  createClass(Collection, Iterable);\n\t    function Collection() {\n\t      throw TypeError('Abstract');\n\t    }\n\t\n\t\n\t  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\t\n\t  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\t\n\t  createClass(SetCollection, Collection);function SetCollection() {}\n\t\n\t\n\t  Collection.Keyed = KeyedCollection;\n\t  Collection.Indexed = IndexedCollection;\n\t  Collection.Set = SetCollection;\n\t\n\t  var imul =\n\t    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n\t    Math.imul :\n\t    function imul(a, b) {\n\t      a = a | 0; // int\n\t      b = b | 0; // int\n\t      var c = a & 0xffff;\n\t      var d = b & 0xffff;\n\t      // Shift by 0 fixes the sign on the high part.\n\t      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n\t    };\n\t\n\t  // v8 has an optimization for storing 31-bit signed numbers.\n\t  // Values which have either 00 or 11 as the high order bits qualify.\n\t  // This function drops the highest order bit in a signed number, maintaining\n\t  // the sign bit.\n\t  function smi(i32) {\n\t    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n\t  }\n\t\n\t  function hash(o) {\n\t    if (o === false || o === null || o === undefined) {\n\t      return 0;\n\t    }\n\t    if (typeof o.valueOf === 'function') {\n\t      o = o.valueOf();\n\t      if (o === false || o === null || o === undefined) {\n\t        return 0;\n\t      }\n\t    }\n\t    if (o === true) {\n\t      return 1;\n\t    }\n\t    var type = typeof o;\n\t    if (type === 'number') {\n\t      var h = o | 0;\n\t      if (h !== o) {\n\t        h ^= o * 0xFFFFFFFF;\n\t      }\n\t      while (o > 0xFFFFFFFF) {\n\t        o /= 0xFFFFFFFF;\n\t        h ^= o;\n\t      }\n\t      return smi(h);\n\t    }\n\t    if (type === 'string') {\n\t      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n\t    }\n\t    if (typeof o.hashCode === 'function') {\n\t      return o.hashCode();\n\t    }\n\t    if (type === 'object') {\n\t      return hashJSObj(o);\n\t    }\n\t    if (typeof o.toString === 'function') {\n\t      return hashString(o.toString());\n\t    }\n\t    throw new Error('Value type ' + type + ' cannot be hashed.');\n\t  }\n\t\n\t  function cachedHashString(string) {\n\t    var hash = stringHashCache[string];\n\t    if (hash === undefined) {\n\t      hash = hashString(string);\n\t      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n\t        STRING_HASH_CACHE_SIZE = 0;\n\t        stringHashCache = {};\n\t      }\n\t      STRING_HASH_CACHE_SIZE++;\n\t      stringHashCache[string] = hash;\n\t    }\n\t    return hash;\n\t  }\n\t\n\t  // http://jsperf.com/hashing-strings\n\t  function hashString(string) {\n\t    // This is the hash from JVM\n\t    // The hash code for a string is computed as\n\t    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n\t    // where s[i] is the ith character of the string and n is the length of\n\t    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n\t    // (exclusive) by dropping high bits.\n\t    var hash = 0;\n\t    for (var ii = 0; ii < string.length; ii++) {\n\t      hash = 31 * hash + string.charCodeAt(ii) | 0;\n\t    }\n\t    return smi(hash);\n\t  }\n\t\n\t  function hashJSObj(obj) {\n\t    var hash;\n\t    if (usingWeakMap) {\n\t      hash = weakMap.get(obj);\n\t      if (hash !== undefined) {\n\t        return hash;\n\t      }\n\t    }\n\t\n\t    hash = obj[UID_HASH_KEY];\n\t    if (hash !== undefined) {\n\t      return hash;\n\t    }\n\t\n\t    if (!canDefineProperty) {\n\t      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n\t      if (hash !== undefined) {\n\t        return hash;\n\t      }\n\t\n\t      hash = getIENodeHash(obj);\n\t      if (hash !== undefined) {\n\t        return hash;\n\t      }\n\t    }\n\t\n\t    hash = ++objHashUID;\n\t    if (objHashUID & 0x40000000) {\n\t      objHashUID = 0;\n\t    }\n\t\n\t    if (usingWeakMap) {\n\t      weakMap.set(obj, hash);\n\t    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n\t      throw new Error('Non-extensible objects are not allowed as keys.');\n\t    } else if (canDefineProperty) {\n\t      Object.defineProperty(obj, UID_HASH_KEY, {\n\t        'enumerable': false,\n\t        'configurable': false,\n\t        'writable': false,\n\t        'value': hash\n\t      });\n\t    } else if (obj.propertyIsEnumerable !== undefined &&\n\t               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n\t      // Since we can't define a non-enumerable property on the object\n\t      // we'll hijack one of the less-used non-enumerable properties to\n\t      // save our hash on it. Since this is a function it will not show up in\n\t      // `JSON.stringify` which is what we want.\n\t      obj.propertyIsEnumerable = function() {\n\t        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n\t      };\n\t      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n\t    } else if (obj.nodeType !== undefined) {\n\t      // At this point we couldn't get the IE `uniqueID` to use as a hash\n\t      // and we couldn't use a non-enumerable property to exploit the\n\t      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n\t      // itself.\n\t      obj[UID_HASH_KEY] = hash;\n\t    } else {\n\t      throw new Error('Unable to set a non-enumerable property on object.');\n\t    }\n\t\n\t    return hash;\n\t  }\n\t\n\t  // Get references to ES5 object methods.\n\t  var isExtensible = Object.isExtensible;\n\t\n\t  // True if Object.defineProperty works as expected. IE8 fails this test.\n\t  var canDefineProperty = (function() {\n\t    try {\n\t      Object.defineProperty({}, '@', {});\n\t      return true;\n\t    } catch (e) {\n\t      return false;\n\t    }\n\t  }());\n\t\n\t  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n\t  // and avoid memory leaks from the IE cloneNode bug.\n\t  function getIENodeHash(node) {\n\t    if (node && node.nodeType > 0) {\n\t      switch (node.nodeType) {\n\t        case 1: // Element\n\t          return node.uniqueID;\n\t        case 9: // Document\n\t          return node.documentElement && node.documentElement.uniqueID;\n\t      }\n\t    }\n\t  }\n\t\n\t  // If possible, use a WeakMap.\n\t  var usingWeakMap = typeof WeakMap === 'function';\n\t  var weakMap;\n\t  if (usingWeakMap) {\n\t    weakMap = new WeakMap();\n\t  }\n\t\n\t  var objHashUID = 0;\n\t\n\t  var UID_HASH_KEY = '__immutablehash__';\n\t  if (typeof Symbol === 'function') {\n\t    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n\t  }\n\t\n\t  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n\t  var STRING_HASH_CACHE_MAX_SIZE = 255;\n\t  var STRING_HASH_CACHE_SIZE = 0;\n\t  var stringHashCache = {};\n\t\n\t  function assertNotInfinite(size) {\n\t    invariant(\n\t      size !== Infinity,\n\t      'Cannot perform this action with an infinite size.'\n\t    );\n\t  }\n\t\n\t  createClass(Map, KeyedCollection);\n\t\n\t    // @pragma Construction\n\t\n\t    function Map(value) {\n\t      return value === null || value === undefined ? emptyMap() :\n\t        isMap(value) && !isOrdered(value) ? value :\n\t        emptyMap().withMutations(function(map ) {\n\t          var iter = KeyedIterable(value);\n\t          assertNotInfinite(iter.size);\n\t          iter.forEach(function(v, k)  {return map.set(k, v)});\n\t        });\n\t    }\n\t\n\t    Map.prototype.toString = function() {\n\t      return this.__toString('Map {', '}');\n\t    };\n\t\n\t    // @pragma Access\n\t\n\t    Map.prototype.get = function(k, notSetValue) {\n\t      return this._root ?\n\t        this._root.get(0, undefined, k, notSetValue) :\n\t        notSetValue;\n\t    };\n\t\n\t    // @pragma Modification\n\t\n\t    Map.prototype.set = function(k, v) {\n\t      return updateMap(this, k, v);\n\t    };\n\t\n\t    Map.prototype.setIn = function(keyPath, v) {\n\t      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n\t    };\n\t\n\t    Map.prototype.remove = function(k) {\n\t      return updateMap(this, k, NOT_SET);\n\t    };\n\t\n\t    Map.prototype.deleteIn = function(keyPath) {\n\t      return this.updateIn(keyPath, function()  {return NOT_SET});\n\t    };\n\t\n\t    Map.prototype.update = function(k, notSetValue, updater) {\n\t      return arguments.length === 1 ?\n\t        k(this) :\n\t        this.updateIn([k], notSetValue, updater);\n\t    };\n\t\n\t    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n\t      if (!updater) {\n\t        updater = notSetValue;\n\t        notSetValue = undefined;\n\t      }\n\t      var updatedValue = updateInDeepMap(\n\t        this,\n\t        forceIterator(keyPath),\n\t        notSetValue,\n\t        updater\n\t      );\n\t      return updatedValue === NOT_SET ? undefined : updatedValue;\n\t    };\n\t\n\t    Map.prototype.clear = function() {\n\t      if (this.size === 0) {\n\t        return this;\n\t      }\n\t      if (this.__ownerID) {\n\t        this.size = 0;\n\t        this._root = null;\n\t        this.__hash = undefined;\n\t        this.__altered = true;\n\t        return this;\n\t      }\n\t      return emptyMap();\n\t    };\n\t\n\t    // @pragma Composition\n\t\n\t    Map.prototype.merge = function(/*...iters*/) {\n\t      return mergeIntoMapWith(this, undefined, arguments);\n\t    };\n\t\n\t    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n\t      return mergeIntoMapWith(this, merger, iters);\n\t    };\n\t\n\t    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n\t      return this.updateIn(\n\t        keyPath,\n\t        emptyMap(),\n\t        function(m ) {return typeof m.merge === 'function' ?\n\t          m.merge.apply(m, iters) :\n\t          iters[iters.length - 1]}\n\t      );\n\t    };\n\t\n\t    Map.prototype.mergeDeep = function(/*...iters*/) {\n\t      return mergeIntoMapWith(this, deepMerger, arguments);\n\t    };\n\t\n\t    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n\t      return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n\t    };\n\t\n\t    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n\t      return this.updateIn(\n\t        keyPath,\n\t        emptyMap(),\n\t        function(m ) {return typeof m.mergeDeep === 'function' ?\n\t          m.mergeDeep.apply(m, iters) :\n\t          iters[iters.length - 1]}\n\t      );\n\t    };\n\t\n\t    Map.prototype.sort = function(comparator) {\n\t      // Late binding\n\t      return OrderedMap(sortFactory(this, comparator));\n\t    };\n\t\n\t    Map.prototype.sortBy = function(mapper, comparator) {\n\t      // Late binding\n\t      return OrderedMap(sortFactory(this, comparator, mapper));\n\t    };\n\t\n\t    // @pragma Mutability\n\t\n\t    Map.prototype.withMutations = function(fn) {\n\t      var mutable = this.asMutable();\n\t      fn(mutable);\n\t      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n\t    };\n\t\n\t    Map.prototype.asMutable = function() {\n\t      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n\t    };\n\t\n\t    Map.prototype.asImmutable = function() {\n\t      return this.__ensureOwner();\n\t    };\n\t\n\t    Map.prototype.wasAltered = function() {\n\t      return this.__altered;\n\t    };\n\t\n\t    Map.prototype.__iterator = function(type, reverse) {\n\t      return new MapIterator(this, type, reverse);\n\t    };\n\t\n\t    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n\t      var iterations = 0;\n\t      this._root && this._root.iterate(function(entry ) {\n\t        iterations++;\n\t        return fn(entry[1], entry[0], this$0);\n\t      }, reverse);\n\t      return iterations;\n\t    };\n\t\n\t    Map.prototype.__ensureOwner = function(ownerID) {\n\t      if (ownerID === this.__ownerID) {\n\t        return this;\n\t      }\n\t      if (!ownerID) {\n\t        this.__ownerID = ownerID;\n\t        this.__altered = false;\n\t        return this;\n\t      }\n\t      return makeMap(this.size, this._root, ownerID, this.__hash);\n\t    };\n\t\n\t\n\t  function isMap(maybeMap) {\n\t    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n\t  }\n\t\n\t  Map.isMap = isMap;\n\t\n\t  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\t\n\t  var MapPrototype = Map.prototype;\n\t  MapPrototype[IS_MAP_SENTINEL] = true;\n\t  MapPrototype[DELETE] = MapPrototype.remove;\n\t  MapPrototype.removeIn = MapPrototype.deleteIn;\n\t\n\t\n\t  // #pragma Trie Nodes\n\t\n\t\n\t\n\t    function ArrayMapNode(ownerID, entries) {\n\t      this.ownerID = ownerID;\n\t      this.entries = entries;\n\t    }\n\t\n\t    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n\t      var entries = this.entries;\n\t      for (var ii = 0, len = entries.length; ii < len; ii++) {\n\t        if (is(key, entries[ii][0])) {\n\t          return entries[ii][1];\n\t        }\n\t      }\n\t      return notSetValue;\n\t    };\n\t\n\t    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n\t      var removed = value === NOT_SET;\n\t\n\t      var entries = this.entries;\n\t      var idx = 0;\n\t      for (var len = entries.length; idx < len; idx++) {\n\t        if (is(key, entries[idx][0])) {\n\t          break;\n\t        }\n\t      }\n\t      var exists = idx < len;\n\t\n\t      if (exists ? entries[idx][1] === value : removed) {\n\t        return this;\n\t      }\n\t\n\t      SetRef(didAlter);\n\t      (removed || !exists) && SetRef(didChangeSize);\n\t\n\t      if (removed && entries.length === 1) {\n\t        return; // undefined\n\t      }\n\t\n\t      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n\t        return createNodes(ownerID, entries, key, value);\n\t      }\n\t\n\t      var isEditable = ownerID && ownerID === this.ownerID;\n\t      var newEntries = isEditable ? entries : arrCopy(entries);\n\t\n\t      if (exists) {\n\t        if (removed) {\n\t          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n\t        } else {\n\t          newEntries[idx] = [key, value];\n\t        }\n\t      } else {\n\t        newEntries.push([key, value]);\n\t      }\n\t\n\t      if (isEditable) {\n\t        this.entries = newEntries;\n\t        return this;\n\t      }\n\t\n\t      return new ArrayMapNode(ownerID, newEntries);\n\t    };\n\t\n\t\n\t\n\t\n\t    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n\t      this.ownerID = ownerID;\n\t      this.bitmap = bitmap;\n\t      this.nodes = nodes;\n\t    }\n\t\n\t    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n\t      if (keyHash === undefined) {\n\t        keyHash = hash(key);\n\t      }\n\t      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n\t      var bitmap = this.bitmap;\n\t      return (bitmap & bit) === 0 ? notSetValue :\n\t        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n\t    };\n\t\n\t    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n\t      if (keyHash === undefined) {\n\t        keyHash = hash(key);\n\t      }\n\t      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\t      var bit = 1 << keyHashFrag;\n\t      var bitmap = this.bitmap;\n\t      var exists = (bitmap & bit) !== 0;\n\t\n\t      if (!exists && value === NOT_SET) {\n\t        return this;\n\t      }\n\t\n\t      var idx = popCount(bitmap & (bit - 1));\n\t      var nodes = this.nodes;\n\t      var node = exists ? nodes[idx] : undefined;\n\t      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\t\n\t      if (newNode === node) {\n\t        return this;\n\t      }\n\t\n\t      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n\t        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n\t      }\n\t\n\t      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n\t        return nodes[idx ^ 1];\n\t      }\n\t\n\t      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n\t        return newNode;\n\t      }\n\t\n\t      var isEditable = ownerID && ownerID === this.ownerID;\n\t      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n\t      var newNodes = exists ? newNode ?\n\t        setIn(nodes, idx, newNode, isEditable) :\n\t        spliceOut(nodes, idx, isEditable) :\n\t        spliceIn(nodes, idx, newNode, isEditable);\n\t\n\t      if (isEditable) {\n\t        this.bitmap = newBitmap;\n\t        this.nodes = newNodes;\n\t        return this;\n\t      }\n\t\n\t      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n\t    };\n\t\n\t\n\t\n\t\n\t    function HashArrayMapNode(ownerID, count, nodes) {\n\t      this.ownerID = ownerID;\n\t      this.count = count;\n\t      this.nodes = nodes;\n\t    }\n\t\n\t    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n\t      if (keyHash === undefined) {\n\t        keyHash = hash(key);\n\t      }\n\t      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\t      var node = this.nodes[idx];\n\t      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n\t    };\n\t\n\t    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n\t      if (keyHash === undefined) {\n\t        keyHash = hash(key);\n\t      }\n\t      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\t      var removed = value === NOT_SET;\n\t      var nodes = this.nodes;\n\t      var node = nodes[idx];\n\t\n\t      if (removed && !node) {\n\t        return this;\n\t      }\n\t\n\t      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\t      if (newNode === node) {\n\t        return this;\n\t      }\n\t\n\t      var newCount = this.count;\n\t      if (!node) {\n\t        newCount++;\n\t      } else if (!newNode) {\n\t        newCount--;\n\t        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n\t          return packNodes(ownerID, nodes, newCount, idx);\n\t        }\n\t      }\n\t\n\t      var isEditable = ownerID && ownerID === this.ownerID;\n\t      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\t\n\t      if (isEditable) {\n\t        this.count = newCount;\n\t        this.nodes = newNodes;\n\t        return this;\n\t      }\n\t\n\t      return new HashArrayMapNode(ownerID, newCount, newNodes);\n\t    };\n\t\n\t\n\t\n\t\n\t    function HashCollisionNode(ownerID, keyHash, entries) {\n\t      this.ownerID = ownerID;\n\t      this.keyHash = keyHash;\n\t      this.entries = entries;\n\t    }\n\t\n\t    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n\t      var entries = this.entries;\n\t      for (var ii = 0, len = entries.length; ii < len; ii++) {\n\t        if (is(key, entries[ii][0])) {\n\t          return entries[ii][1];\n\t        }\n\t      }\n\t      return notSetValue;\n\t    };\n\t\n\t    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n\t      if (keyHash === undefined) {\n\t        keyHash = hash(key);\n\t      }\n\t\n\t      var removed = value === NOT_SET;\n\t\n\t      if (keyHash !== this.keyHash) {\n\t        if (removed) {\n\t          return this;\n\t        }\n\t        SetRef(didAlter);\n\t        SetRef(didChangeSize);\n\t        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n\t      }\n\t\n\t      var entries = this.entries;\n\t      var idx = 0;\n\t      for (var len = entries.length; idx < len; idx++) {\n\t        if (is(key, entries[idx][0])) {\n\t          break;\n\t        }\n\t      }\n\t      var exists = idx < len;\n\t\n\t      if (exists ? entries[idx][1] === value : removed) {\n\t        return this;\n\t      }\n\t\n\t      SetRef(didAlter);\n\t      (removed || !exists) && SetRef(didChangeSize);\n\t\n\t      if (removed && len === 2) {\n\t        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n\t      }\n\t\n\t      var isEditable = ownerID && ownerID === this.ownerID;\n\t      var newEntries = isEditable ? entries : arrCopy(entries);\n\t\n\t      if (exists) {\n\t        if (removed) {\n\t          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n\t        } else {\n\t          newEntries[idx] = [key, value];\n\t        }\n\t      } else {\n\t        newEntries.push([key, value]);\n\t      }\n\t\n\t      if (isEditable) {\n\t        this.entries = newEntries;\n\t        return this;\n\t      }\n\t\n\t      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n\t    };\n\t\n\t\n\t\n\t\n\t    function ValueNode(ownerID, keyHash, entry) {\n\t      this.ownerID = ownerID;\n\t      this.keyHash = keyHash;\n\t      this.entry = entry;\n\t    }\n\t\n\t    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n\t      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n\t    };\n\t\n\t    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n\t      var removed = value === NOT_SET;\n\t      var keyMatch = is(key, this.entry[0]);\n\t      if (keyMatch ? value === this.entry[1] : removed) {\n\t        return this;\n\t      }\n\t\n\t      SetRef(didAlter);\n\t\n\t      if (removed) {\n\t        SetRef(didChangeSize);\n\t        return; // undefined\n\t      }\n\t\n\t      if (keyMatch) {\n\t        if (ownerID && ownerID === this.ownerID) {\n\t          this.entry[1] = value;\n\t          return this;\n\t        }\n\t        return new ValueNode(ownerID, this.keyHash, [key, value]);\n\t      }\n\t\n\t      SetRef(didChangeSize);\n\t      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n\t    };\n\t\n\t\n\t\n\t  // #pragma Iterators\n\t\n\t  ArrayMapNode.prototype.iterate =\n\t  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n\t    var entries = this.entries;\n\t    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n\t      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n\t        return false;\n\t      }\n\t    }\n\t  }\n\t\n\t  BitmapIndexedNode.prototype.iterate =\n\t  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n\t    var nodes = this.nodes;\n\t    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n\t      var node = nodes[reverse ? maxIndex - ii : ii];\n\t      if (node && node.iterate(fn, reverse) === false) {\n\t        return false;\n\t      }\n\t    }\n\t  }\n\t\n\t  ValueNode.prototype.iterate = function (fn, reverse) {\n\t    return fn(this.entry);\n\t  }\n\t\n\t  createClass(MapIterator, Iterator);\n\t\n\t    function MapIterator(map, type, reverse) {\n\t      this._type = type;\n\t      this._reverse = reverse;\n\t      this._stack = map._root && mapIteratorFrame(map._root);\n\t    }\n\t\n\t    MapIterator.prototype.next = function() {\n\t      var type = this._type;\n\t      var stack = this._stack;\n\t      while (stack) {\n\t        var node = stack.node;\n\t        var index = stack.index++;\n\t        var maxIndex;\n\t        if (node.entry) {\n\t          if (index === 0) {\n\t            return mapIteratorValue(type, node.entry);\n\t          }\n\t        } else if (node.entries) {\n\t          maxIndex = node.entries.length - 1;\n\t          if (index <= maxIndex) {\n\t            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n\t          }\n\t        } else {\n\t          maxIndex = node.nodes.length - 1;\n\t          if (index <= maxIndex) {\n\t            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n\t            if (subNode) {\n\t              if (subNode.entry) {\n\t                return mapIteratorValue(type, subNode.entry);\n\t              }\n\t              stack = this._stack = mapIteratorFrame(subNode, stack);\n\t            }\n\t            continue;\n\t          }\n\t        }\n\t        stack = this._stack = this._stack.__prev;\n\t      }\n\t      return iteratorDone();\n\t    };\n\t\n\t\n\t  function mapIteratorValue(type, entry) {\n\t    return iteratorValue(type, entry[0], entry[1]);\n\t  }\n\t\n\t  function mapIteratorFrame(node, prev) {\n\t    return {\n\t      node: node,\n\t      index: 0,\n\t      __prev: prev\n\t    };\n\t  }\n\t\n\t  function makeMap(size, root, ownerID, hash) {\n\t    var map = Object.create(MapPrototype);\n\t    map.size = size;\n\t    map._root = root;\n\t    map.__ownerID = ownerID;\n\t    map.__hash = hash;\n\t    map.__altered = false;\n\t    return map;\n\t  }\n\t\n\t  var EMPTY_MAP;\n\t  function emptyMap() {\n\t    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n\t  }\n\t\n\t  function updateMap(map, k, v) {\n\t    var newRoot;\n\t    var newSize;\n\t    if (!map._root) {\n\t      if (v === NOT_SET) {\n\t        return map;\n\t      }\n\t      newSize = 1;\n\t      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n\t    } else {\n\t      var didChangeSize = MakeRef(CHANGE_LENGTH);\n\t      var didAlter = MakeRef(DID_ALTER);\n\t      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n\t      if (!didAlter.value) {\n\t        return map;\n\t      }\n\t      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n\t    }\n\t    if (map.__ownerID) {\n\t      map.size = newSize;\n\t      map._root = newRoot;\n\t      map.__hash = undefined;\n\t      map.__altered = true;\n\t      return map;\n\t    }\n\t    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n\t  }\n\t\n\t  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n\t    if (!node) {\n\t      if (value === NOT_SET) {\n\t        return node;\n\t      }\n\t      SetRef(didAlter);\n\t      SetRef(didChangeSize);\n\t      return new ValueNode(ownerID, keyHash, [key, value]);\n\t    }\n\t    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n\t  }\n\t\n\t  function isLeafNode(node) {\n\t    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n\t  }\n\t\n\t  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n\t    if (node.keyHash === keyHash) {\n\t      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n\t    }\n\t\n\t    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n\t    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\t\n\t    var newNode;\n\t    var nodes = idx1 === idx2 ?\n\t      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n\t      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\t\n\t    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n\t  }\n\t\n\t  function createNodes(ownerID, entries, key, value) {\n\t    if (!ownerID) {\n\t      ownerID = new OwnerID();\n\t    }\n\t    var node = new ValueNode(ownerID, hash(key), [key, value]);\n\t    for (var ii = 0; ii < entries.length; ii++) {\n\t      var entry = entries[ii];\n\t      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n\t    }\n\t    return node;\n\t  }\n\t\n\t  function packNodes(ownerID, nodes, count, excluding) {\n\t    var bitmap = 0;\n\t    var packedII = 0;\n\t    var packedNodes = new Array(count);\n\t    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n\t      var node = nodes[ii];\n\t      if (node !== undefined && ii !== excluding) {\n\t        bitmap |= bit;\n\t        packedNodes[packedII++] = node;\n\t      }\n\t    }\n\t    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n\t  }\n\t\n\t  function expandNodes(ownerID, nodes, bitmap, including, node) {\n\t    var count = 0;\n\t    var expandedNodes = new Array(SIZE);\n\t    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n\t      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n\t    }\n\t    expandedNodes[including] = node;\n\t    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n\t  }\n\t\n\t  function mergeIntoMapWith(map, merger, iterables) {\n\t    var iters = [];\n\t    for (var ii = 0; ii < iterables.length; ii++) {\n\t      var value = iterables[ii];\n\t      var iter = KeyedIterable(value);\n\t      if (!isIterable(value)) {\n\t        iter = iter.map(function(v ) {return fromJS(v)});\n\t      }\n\t      iters.push(iter);\n\t    }\n\t    return mergeIntoCollectionWith(map, merger, iters);\n\t  }\n\t\n\t  function deepMerger(existing, value, key) {\n\t    return existing && existing.mergeDeep && isIterable(value) ?\n\t      existing.mergeDeep(value) :\n\t      is(existing, value) ? existing : value;\n\t  }\n\t\n\t  function deepMergerWith(merger) {\n\t    return function(existing, value, key)  {\n\t      if (existing && existing.mergeDeepWith && isIterable(value)) {\n\t        return existing.mergeDeepWith(merger, value);\n\t      }\n\t      var nextValue = merger(existing, value, key);\n\t      return is(existing, nextValue) ? existing : nextValue;\n\t    };\n\t  }\n\t\n\t  function mergeIntoCollectionWith(collection, merger, iters) {\n\t    iters = iters.filter(function(x ) {return x.size !== 0});\n\t    if (iters.length === 0) {\n\t      return collection;\n\t    }\n\t    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n\t      return collection.constructor(iters[0]);\n\t    }\n\t    return collection.withMutations(function(collection ) {\n\t      var mergeIntoMap = merger ?\n\t        function(value, key)  {\n\t          collection.update(key, NOT_SET, function(existing )\n\t            {return existing === NOT_SET ? value : merger(existing, value, key)}\n\t          );\n\t        } :\n\t        function(value, key)  {\n\t          collection.set(key, value);\n\t        }\n\t      for (var ii = 0; ii < iters.length; ii++) {\n\t        iters[ii].forEach(mergeIntoMap);\n\t      }\n\t    });\n\t  }\n\t\n\t  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n\t    var isNotSet = existing === NOT_SET;\n\t    var step = keyPathIter.next();\n\t    if (step.done) {\n\t      var existingValue = isNotSet ? notSetValue : existing;\n\t      var newValue = updater(existingValue);\n\t      return newValue === existingValue ? existing : newValue;\n\t    }\n\t    invariant(\n\t      isNotSet || (existing && existing.set),\n\t      'invalid keyPath'\n\t    );\n\t    var key = step.value;\n\t    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n\t    var nextUpdated = updateInDeepMap(\n\t      nextExisting,\n\t      keyPathIter,\n\t      notSetValue,\n\t      updater\n\t    );\n\t    return nextUpdated === nextExisting ? existing :\n\t      nextUpdated === NOT_SET ? existing.remove(key) :\n\t      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n\t  }\n\t\n\t  function popCount(x) {\n\t    x = x - ((x >> 1) & 0x55555555);\n\t    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n\t    x = (x + (x >> 4)) & 0x0f0f0f0f;\n\t    x = x + (x >> 8);\n\t    x = x + (x >> 16);\n\t    return x & 0x7f;\n\t  }\n\t\n\t  function setIn(array, idx, val, canEdit) {\n\t    var newArray = canEdit ? array : arrCopy(array);\n\t    newArray[idx] = val;\n\t    return newArray;\n\t  }\n\t\n\t  function spliceIn(array, idx, val, canEdit) {\n\t    var newLen = array.length + 1;\n\t    if (canEdit && idx + 1 === newLen) {\n\t      array[idx] = val;\n\t      return array;\n\t    }\n\t    var newArray = new Array(newLen);\n\t    var after = 0;\n\t    for (var ii = 0; ii < newLen; ii++) {\n\t      if (ii === idx) {\n\t        newArray[ii] = val;\n\t        after = -1;\n\t      } else {\n\t        newArray[ii] = array[ii + after];\n\t      }\n\t    }\n\t    return newArray;\n\t  }\n\t\n\t  function spliceOut(array, idx, canEdit) {\n\t    var newLen = array.length - 1;\n\t    if (canEdit && idx === newLen) {\n\t      array.pop();\n\t      return array;\n\t    }\n\t    var newArray = new Array(newLen);\n\t    var after = 0;\n\t    for (var ii = 0; ii < newLen; ii++) {\n\t      if (ii === idx) {\n\t        after = 1;\n\t      }\n\t      newArray[ii] = array[ii + after];\n\t    }\n\t    return newArray;\n\t  }\n\t\n\t  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n\t  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n\t  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\t\n\t  createClass(List, IndexedCollection);\n\t\n\t    // @pragma Construction\n\t\n\t    function List(value) {\n\t      var empty = emptyList();\n\t      if (value === null || value === undefined) {\n\t        return empty;\n\t      }\n\t      if (isList(value)) {\n\t        return value;\n\t      }\n\t      var iter = IndexedIterable(value);\n\t      var size = iter.size;\n\t      if (size === 0) {\n\t        return empty;\n\t      }\n\t      assertNotInfinite(size);\n\t      if (size > 0 && size < SIZE) {\n\t        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n\t      }\n\t      return empty.withMutations(function(list ) {\n\t        list.setSize(size);\n\t        iter.forEach(function(v, i)  {return list.set(i, v)});\n\t      });\n\t    }\n\t\n\t    List.of = function(/*...values*/) {\n\t      return this(arguments);\n\t    };\n\t\n\t    List.prototype.toString = function() {\n\t      return this.__toString('List [', ']');\n\t    };\n\t\n\t    // @pragma Access\n\t\n\t    List.prototype.get = function(index, notSetValue) {\n\t      index = wrapIndex(this, index);\n\t      if (index >= 0 && index < this.size) {\n\t        index += this._origin;\n\t        var node = listNodeFor(this, index);\n\t        return node && node.array[index & MASK];\n\t      }\n\t      return notSetValue;\n\t    };\n\t\n\t    // @pragma Modification\n\t\n\t    List.prototype.set = function(index, value) {\n\t      return updateList(this, index, value);\n\t    };\n\t\n\t    List.prototype.remove = function(index) {\n\t      return !this.has(index) ? this :\n\t        index === 0 ? this.shift() :\n\t        index === this.size - 1 ? this.pop() :\n\t        this.splice(index, 1);\n\t    };\n\t\n\t    List.prototype.insert = function(index, value) {\n\t      return this.splice(index, 0, value);\n\t    };\n\t\n\t    List.prototype.clear = function() {\n\t      if (this.size === 0) {\n\t        return this;\n\t      }\n\t      if (this.__ownerID) {\n\t        this.size = this._origin = this._capacity = 0;\n\t        this._level = SHIFT;\n\t        this._root = this._tail = null;\n\t        this.__hash = undefined;\n\t        this.__altered = true;\n\t        return this;\n\t      }\n\t      return emptyList();\n\t    };\n\t\n\t    List.prototype.push = function(/*...values*/) {\n\t      var values = arguments;\n\t      var oldSize = this.size;\n\t      return this.withMutations(function(list ) {\n\t        setListBounds(list, 0, oldSize + values.length);\n\t        for (var ii = 0; ii < values.length; ii++) {\n\t          list.set(oldSize + ii, values[ii]);\n\t        }\n\t      });\n\t    };\n\t\n\t    List.prototype.pop = function() {\n\t      return setListBounds(this, 0, -1);\n\t    };\n\t\n\t    List.prototype.unshift = function(/*...values*/) {\n\t      var values = arguments;\n\t      return this.withMutations(function(list ) {\n\t        setListBounds(list, -values.length);\n\t        for (var ii = 0; ii < values.length; ii++) {\n\t          list.set(ii, values[ii]);\n\t        }\n\t      });\n\t    };\n\t\n\t    List.prototype.shift = function() {\n\t      return setListBounds(this, 1);\n\t    };\n\t\n\t    // @pragma Composition\n\t\n\t    List.prototype.merge = function(/*...iters*/) {\n\t      return mergeIntoListWith(this, undefined, arguments);\n\t    };\n\t\n\t    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n\t      return mergeIntoListWith(this, merger, iters);\n\t    };\n\t\n\t    List.prototype.mergeDeep = function(/*...iters*/) {\n\t      return mergeIntoListWith(this, deepMerger, arguments);\n\t    };\n\t\n\t    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n\t      return mergeIntoListWith(this, deepMergerWith(merger), iters);\n\t    };\n\t\n\t    List.prototype.setSize = function(size) {\n\t      return setListBounds(this, 0, size);\n\t    };\n\t\n\t    // @pragma Iteration\n\t\n\t    List.prototype.slice = function(begin, end) {\n\t      var size = this.size;\n\t      if (wholeSlice(begin, end, size)) {\n\t        return this;\n\t      }\n\t      return setListBounds(\n\t        this,\n\t        resolveBegin(begin, size),\n\t        resolveEnd(end, size)\n\t      );\n\t    };\n\t\n\t    List.prototype.__iterator = function(type, reverse) {\n\t      var index = 0;\n\t      var values = iterateList(this, reverse);\n\t      return new Iterator(function()  {\n\t        var value = values();\n\t        return value === DONE ?\n\t          iteratorDone() :\n\t          iteratorValue(type, index++, value);\n\t      });\n\t    };\n\t\n\t    List.prototype.__iterate = function(fn, reverse) {\n\t      var index = 0;\n\t      var values = iterateList(this, reverse);\n\t      var value;\n\t      while ((value = values()) !== DONE) {\n\t        if (fn(value, index++, this) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return index;\n\t    };\n\t\n\t    List.prototype.__ensureOwner = function(ownerID) {\n\t      if (ownerID === this.__ownerID) {\n\t        return this;\n\t      }\n\t      if (!ownerID) {\n\t        this.__ownerID = ownerID;\n\t        return this;\n\t      }\n\t      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n\t    };\n\t\n\t\n\t  function isList(maybeList) {\n\t    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n\t  }\n\t\n\t  List.isList = isList;\n\t\n\t  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\t\n\t  var ListPrototype = List.prototype;\n\t  ListPrototype[IS_LIST_SENTINEL] = true;\n\t  ListPrototype[DELETE] = ListPrototype.remove;\n\t  ListPrototype.setIn = MapPrototype.setIn;\n\t  ListPrototype.deleteIn =\n\t  ListPrototype.removeIn = MapPrototype.removeIn;\n\t  ListPrototype.update = MapPrototype.update;\n\t  ListPrototype.updateIn = MapPrototype.updateIn;\n\t  ListPrototype.mergeIn = MapPrototype.mergeIn;\n\t  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n\t  ListPrototype.withMutations = MapPrototype.withMutations;\n\t  ListPrototype.asMutable = MapPrototype.asMutable;\n\t  ListPrototype.asImmutable = MapPrototype.asImmutable;\n\t  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\t\n\t\n\t\n\t    function VNode(array, ownerID) {\n\t      this.array = array;\n\t      this.ownerID = ownerID;\n\t    }\n\t\n\t    // TODO: seems like these methods are very similar\n\t\n\t    VNode.prototype.removeBefore = function(ownerID, level, index) {\n\t      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n\t        return this;\n\t      }\n\t      var originIndex = (index >>> level) & MASK;\n\t      if (originIndex >= this.array.length) {\n\t        return new VNode([], ownerID);\n\t      }\n\t      var removingFirst = originIndex === 0;\n\t      var newChild;\n\t      if (level > 0) {\n\t        var oldChild = this.array[originIndex];\n\t        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n\t        if (newChild === oldChild && removingFirst) {\n\t          return this;\n\t        }\n\t      }\n\t      if (removingFirst && !newChild) {\n\t        return this;\n\t      }\n\t      var editable = editableVNode(this, ownerID);\n\t      if (!removingFirst) {\n\t        for (var ii = 0; ii < originIndex; ii++) {\n\t          editable.array[ii] = undefined;\n\t        }\n\t      }\n\t      if (newChild) {\n\t        editable.array[originIndex] = newChild;\n\t      }\n\t      return editable;\n\t    };\n\t\n\t    VNode.prototype.removeAfter = function(ownerID, level, index) {\n\t      if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n\t        return this;\n\t      }\n\t      var sizeIndex = ((index - 1) >>> level) & MASK;\n\t      if (sizeIndex >= this.array.length) {\n\t        return this;\n\t      }\n\t\n\t      var newChild;\n\t      if (level > 0) {\n\t        var oldChild = this.array[sizeIndex];\n\t        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n\t        if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n\t          return this;\n\t        }\n\t      }\n\t\n\t      var editable = editableVNode(this, ownerID);\n\t      editable.array.splice(sizeIndex + 1);\n\t      if (newChild) {\n\t        editable.array[sizeIndex] = newChild;\n\t      }\n\t      return editable;\n\t    };\n\t\n\t\n\t\n\t  var DONE = {};\n\t\n\t  function iterateList(list, reverse) {\n\t    var left = list._origin;\n\t    var right = list._capacity;\n\t    var tailPos = getTailOffset(right);\n\t    var tail = list._tail;\n\t\n\t    return iterateNodeOrLeaf(list._root, list._level, 0);\n\t\n\t    function iterateNodeOrLeaf(node, level, offset) {\n\t      return level === 0 ?\n\t        iterateLeaf(node, offset) :\n\t        iterateNode(node, level, offset);\n\t    }\n\t\n\t    function iterateLeaf(node, offset) {\n\t      var array = offset === tailPos ? tail && tail.array : node && node.array;\n\t      var from = offset > left ? 0 : left - offset;\n\t      var to = right - offset;\n\t      if (to > SIZE) {\n\t        to = SIZE;\n\t      }\n\t      return function()  {\n\t        if (from === to) {\n\t          return DONE;\n\t        }\n\t        var idx = reverse ? --to : from++;\n\t        return array && array[idx];\n\t      };\n\t    }\n\t\n\t    function iterateNode(node, level, offset) {\n\t      var values;\n\t      var array = node && node.array;\n\t      var from = offset > left ? 0 : (left - offset) >> level;\n\t      var to = ((right - offset) >> level) + 1;\n\t      if (to > SIZE) {\n\t        to = SIZE;\n\t      }\n\t      return function()  {\n\t        do {\n\t          if (values) {\n\t            var value = values();\n\t            if (value !== DONE) {\n\t              return value;\n\t            }\n\t            values = null;\n\t          }\n\t          if (from === to) {\n\t            return DONE;\n\t          }\n\t          var idx = reverse ? --to : from++;\n\t          values = iterateNodeOrLeaf(\n\t            array && array[idx], level - SHIFT, offset + (idx << level)\n\t          );\n\t        } while (true);\n\t      };\n\t    }\n\t  }\n\t\n\t  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n\t    var list = Object.create(ListPrototype);\n\t    list.size = capacity - origin;\n\t    list._origin = origin;\n\t    list._capacity = capacity;\n\t    list._level = level;\n\t    list._root = root;\n\t    list._tail = tail;\n\t    list.__ownerID = ownerID;\n\t    list.__hash = hash;\n\t    list.__altered = false;\n\t    return list;\n\t  }\n\t\n\t  var EMPTY_LIST;\n\t  function emptyList() {\n\t    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n\t  }\n\t\n\t  function updateList(list, index, value) {\n\t    index = wrapIndex(list, index);\n\t\n\t    if (index !== index) {\n\t      return list;\n\t    }\n\t\n\t    if (index >= list.size || index < 0) {\n\t      return list.withMutations(function(list ) {\n\t        index < 0 ?\n\t          setListBounds(list, index).set(0, value) :\n\t          setListBounds(list, 0, index + 1).set(index, value)\n\t      });\n\t    }\n\t\n\t    index += list._origin;\n\t\n\t    var newTail = list._tail;\n\t    var newRoot = list._root;\n\t    var didAlter = MakeRef(DID_ALTER);\n\t    if (index >= getTailOffset(list._capacity)) {\n\t      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n\t    } else {\n\t      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n\t    }\n\t\n\t    if (!didAlter.value) {\n\t      return list;\n\t    }\n\t\n\t    if (list.__ownerID) {\n\t      list._root = newRoot;\n\t      list._tail = newTail;\n\t      list.__hash = undefined;\n\t      list.__altered = true;\n\t      return list;\n\t    }\n\t    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n\t  }\n\t\n\t  function updateVNode(node, ownerID, level, index, value, didAlter) {\n\t    var idx = (index >>> level) & MASK;\n\t    var nodeHas = node && idx < node.array.length;\n\t    if (!nodeHas && value === undefined) {\n\t      return node;\n\t    }\n\t\n\t    var newNode;\n\t\n\t    if (level > 0) {\n\t      var lowerNode = node && node.array[idx];\n\t      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n\t      if (newLowerNode === lowerNode) {\n\t        return node;\n\t      }\n\t      newNode = editableVNode(node, ownerID);\n\t      newNode.array[idx] = newLowerNode;\n\t      return newNode;\n\t    }\n\t\n\t    if (nodeHas && node.array[idx] === value) {\n\t      return node;\n\t    }\n\t\n\t    SetRef(didAlter);\n\t\n\t    newNode = editableVNode(node, ownerID);\n\t    if (value === undefined && idx === newNode.array.length - 1) {\n\t      newNode.array.pop();\n\t    } else {\n\t      newNode.array[idx] = value;\n\t    }\n\t    return newNode;\n\t  }\n\t\n\t  function editableVNode(node, ownerID) {\n\t    if (ownerID && node && ownerID === node.ownerID) {\n\t      return node;\n\t    }\n\t    return new VNode(node ? node.array.slice() : [], ownerID);\n\t  }\n\t\n\t  function listNodeFor(list, rawIndex) {\n\t    if (rawIndex >= getTailOffset(list._capacity)) {\n\t      return list._tail;\n\t    }\n\t    if (rawIndex < 1 << (list._level + SHIFT)) {\n\t      var node = list._root;\n\t      var level = list._level;\n\t      while (node && level > 0) {\n\t        node = node.array[(rawIndex >>> level) & MASK];\n\t        level -= SHIFT;\n\t      }\n\t      return node;\n\t    }\n\t  }\n\t\n\t  function setListBounds(list, begin, end) {\n\t    // Sanitize begin & end using this shorthand for ToInt32(argument)\n\t    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n\t    if (begin !== undefined) {\n\t      begin = begin | 0;\n\t    }\n\t    if (end !== undefined) {\n\t      end = end | 0;\n\t    }\n\t    var owner = list.__ownerID || new OwnerID();\n\t    var oldOrigin = list._origin;\n\t    var oldCapacity = list._capacity;\n\t    var newOrigin = oldOrigin + begin;\n\t    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n\t    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n\t      return list;\n\t    }\n\t\n\t    // If it's going to end after it starts, it's empty.\n\t    if (newOrigin >= newCapacity) {\n\t      return list.clear();\n\t    }\n\t\n\t    var newLevel = list._level;\n\t    var newRoot = list._root;\n\t\n\t    // New origin might need creating a higher root.\n\t    var offsetShift = 0;\n\t    while (newOrigin + offsetShift < 0) {\n\t      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n\t      newLevel += SHIFT;\n\t      offsetShift += 1 << newLevel;\n\t    }\n\t    if (offsetShift) {\n\t      newOrigin += offsetShift;\n\t      oldOrigin += offsetShift;\n\t      newCapacity += offsetShift;\n\t      oldCapacity += offsetShift;\n\t    }\n\t\n\t    var oldTailOffset = getTailOffset(oldCapacity);\n\t    var newTailOffset = getTailOffset(newCapacity);\n\t\n\t    // New size might need creating a higher root.\n\t    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n\t      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n\t      newLevel += SHIFT;\n\t    }\n\t\n\t    // Locate or create the new tail.\n\t    var oldTail = list._tail;\n\t    var newTail = newTailOffset < oldTailOffset ?\n\t      listNodeFor(list, newCapacity - 1) :\n\t      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\t\n\t    // Merge Tail into tree.\n\t    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n\t      newRoot = editableVNode(newRoot, owner);\n\t      var node = newRoot;\n\t      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n\t        var idx = (oldTailOffset >>> level) & MASK;\n\t        node = node.array[idx] = editableVNode(node.array[idx], owner);\n\t      }\n\t      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n\t    }\n\t\n\t    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n\t    if (newCapacity < oldCapacity) {\n\t      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n\t    }\n\t\n\t    // If the new origin is within the tail, then we do not need a root.\n\t    if (newOrigin >= newTailOffset) {\n\t      newOrigin -= newTailOffset;\n\t      newCapacity -= newTailOffset;\n\t      newLevel = SHIFT;\n\t      newRoot = null;\n\t      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\t\n\t    // Otherwise, if the root has been trimmed, garbage collect.\n\t    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n\t      offsetShift = 0;\n\t\n\t      // Identify the new top root node of the subtree of the old root.\n\t      while (newRoot) {\n\t        var beginIndex = (newOrigin >>> newLevel) & MASK;\n\t        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n\t          break;\n\t        }\n\t        if (beginIndex) {\n\t          offsetShift += (1 << newLevel) * beginIndex;\n\t        }\n\t        newLevel -= SHIFT;\n\t        newRoot = newRoot.array[beginIndex];\n\t      }\n\t\n\t      // Trim the new sides of the new root.\n\t      if (newRoot && newOrigin > oldOrigin) {\n\t        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n\t      }\n\t      if (newRoot && newTailOffset < oldTailOffset) {\n\t        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n\t      }\n\t      if (offsetShift) {\n\t        newOrigin -= offsetShift;\n\t        newCapacity -= offsetShift;\n\t      }\n\t    }\n\t\n\t    if (list.__ownerID) {\n\t      list.size = newCapacity - newOrigin;\n\t      list._origin = newOrigin;\n\t      list._capacity = newCapacity;\n\t      list._level = newLevel;\n\t      list._root = newRoot;\n\t      list._tail = newTail;\n\t      list.__hash = undefined;\n\t      list.__altered = true;\n\t      return list;\n\t    }\n\t    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n\t  }\n\t\n\t  function mergeIntoListWith(list, merger, iterables) {\n\t    var iters = [];\n\t    var maxSize = 0;\n\t    for (var ii = 0; ii < iterables.length; ii++) {\n\t      var value = iterables[ii];\n\t      var iter = IndexedIterable(value);\n\t      if (iter.size > maxSize) {\n\t        maxSize = iter.size;\n\t      }\n\t      if (!isIterable(value)) {\n\t        iter = iter.map(function(v ) {return fromJS(v)});\n\t      }\n\t      iters.push(iter);\n\t    }\n\t    if (maxSize > list.size) {\n\t      list = list.setSize(maxSize);\n\t    }\n\t    return mergeIntoCollectionWith(list, merger, iters);\n\t  }\n\t\n\t  function getTailOffset(size) {\n\t    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n\t  }\n\t\n\t  createClass(OrderedMap, Map);\n\t\n\t    // @pragma Construction\n\t\n\t    function OrderedMap(value) {\n\t      return value === null || value === undefined ? emptyOrderedMap() :\n\t        isOrderedMap(value) ? value :\n\t        emptyOrderedMap().withMutations(function(map ) {\n\t          var iter = KeyedIterable(value);\n\t          assertNotInfinite(iter.size);\n\t          iter.forEach(function(v, k)  {return map.set(k, v)});\n\t        });\n\t    }\n\t\n\t    OrderedMap.of = function(/*...values*/) {\n\t      return this(arguments);\n\t    };\n\t\n\t    OrderedMap.prototype.toString = function() {\n\t      return this.__toString('OrderedMap {', '}');\n\t    };\n\t\n\t    // @pragma Access\n\t\n\t    OrderedMap.prototype.get = function(k, notSetValue) {\n\t      var index = this._map.get(k);\n\t      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n\t    };\n\t\n\t    // @pragma Modification\n\t\n\t    OrderedMap.prototype.clear = function() {\n\t      if (this.size === 0) {\n\t        return this;\n\t      }\n\t      if (this.__ownerID) {\n\t        this.size = 0;\n\t        this._map.clear();\n\t        this._list.clear();\n\t        return this;\n\t      }\n\t      return emptyOrderedMap();\n\t    };\n\t\n\t    OrderedMap.prototype.set = function(k, v) {\n\t      return updateOrderedMap(this, k, v);\n\t    };\n\t\n\t    OrderedMap.prototype.remove = function(k) {\n\t      return updateOrderedMap(this, k, NOT_SET);\n\t    };\n\t\n\t    OrderedMap.prototype.wasAltered = function() {\n\t      return this._map.wasAltered() || this._list.wasAltered();\n\t    };\n\t\n\t    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n\t      return this._list.__iterate(\n\t        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n\t        reverse\n\t      );\n\t    };\n\t\n\t    OrderedMap.prototype.__iterator = function(type, reverse) {\n\t      return this._list.fromEntrySeq().__iterator(type, reverse);\n\t    };\n\t\n\t    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n\t      if (ownerID === this.__ownerID) {\n\t        return this;\n\t      }\n\t      var newMap = this._map.__ensureOwner(ownerID);\n\t      var newList = this._list.__ensureOwner(ownerID);\n\t      if (!ownerID) {\n\t        this.__ownerID = ownerID;\n\t        this._map = newMap;\n\t        this._list = newList;\n\t        return this;\n\t      }\n\t      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n\t    };\n\t\n\t\n\t  function isOrderedMap(maybeOrderedMap) {\n\t    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n\t  }\n\t\n\t  OrderedMap.isOrderedMap = isOrderedMap;\n\t\n\t  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n\t  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\t\n\t\n\t\n\t  function makeOrderedMap(map, list, ownerID, hash) {\n\t    var omap = Object.create(OrderedMap.prototype);\n\t    omap.size = map ? map.size : 0;\n\t    omap._map = map;\n\t    omap._list = list;\n\t    omap.__ownerID = ownerID;\n\t    omap.__hash = hash;\n\t    return omap;\n\t  }\n\t\n\t  var EMPTY_ORDERED_MAP;\n\t  function emptyOrderedMap() {\n\t    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n\t  }\n\t\n\t  function updateOrderedMap(omap, k, v) {\n\t    var map = omap._map;\n\t    var list = omap._list;\n\t    var i = map.get(k);\n\t    var has = i !== undefined;\n\t    var newMap;\n\t    var newList;\n\t    if (v === NOT_SET) { // removed\n\t      if (!has) {\n\t        return omap;\n\t      }\n\t      if (list.size >= SIZE && list.size >= map.size * 2) {\n\t        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n\t        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n\t        if (omap.__ownerID) {\n\t          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n\t        }\n\t      } else {\n\t        newMap = map.remove(k);\n\t        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n\t      }\n\t    } else {\n\t      if (has) {\n\t        if (v === list.get(i)[1]) {\n\t          return omap;\n\t        }\n\t        newMap = map;\n\t        newList = list.set(i, [k, v]);\n\t      } else {\n\t        newMap = map.set(k, list.size);\n\t        newList = list.set(list.size, [k, v]);\n\t      }\n\t    }\n\t    if (omap.__ownerID) {\n\t      omap.size = newMap.size;\n\t      omap._map = newMap;\n\t      omap._list = newList;\n\t      omap.__hash = undefined;\n\t      return omap;\n\t    }\n\t    return makeOrderedMap(newMap, newList);\n\t  }\n\t\n\t  createClass(ToKeyedSequence, KeyedSeq);\n\t    function ToKeyedSequence(indexed, useKeys) {\n\t      this._iter = indexed;\n\t      this._useKeys = useKeys;\n\t      this.size = indexed.size;\n\t    }\n\t\n\t    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n\t      return this._iter.get(key, notSetValue);\n\t    };\n\t\n\t    ToKeyedSequence.prototype.has = function(key) {\n\t      return this._iter.has(key);\n\t    };\n\t\n\t    ToKeyedSequence.prototype.valueSeq = function() {\n\t      return this._iter.valueSeq();\n\t    };\n\t\n\t    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n\t      var reversedSequence = reverseFactory(this, true);\n\t      if (!this._useKeys) {\n\t        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n\t      }\n\t      return reversedSequence;\n\t    };\n\t\n\t    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n\t      var mappedSequence = mapFactory(this, mapper, context);\n\t      if (!this._useKeys) {\n\t        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n\t      }\n\t      return mappedSequence;\n\t    };\n\t\n\t    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n\t      var ii;\n\t      return this._iter.__iterate(\n\t        this._useKeys ?\n\t          function(v, k)  {return fn(v, k, this$0)} :\n\t          ((ii = reverse ? resolveSize(this) : 0),\n\t            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n\t        reverse\n\t      );\n\t    };\n\t\n\t    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n\t      if (this._useKeys) {\n\t        return this._iter.__iterator(type, reverse);\n\t      }\n\t      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\t      var ii = reverse ? resolveSize(this) : 0;\n\t      return new Iterator(function()  {\n\t        var step = iterator.next();\n\t        return step.done ? step :\n\t          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n\t      });\n\t    };\n\t\n\t  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\t\n\t\n\t  createClass(ToIndexedSequence, IndexedSeq);\n\t    function ToIndexedSequence(iter) {\n\t      this._iter = iter;\n\t      this.size = iter.size;\n\t    }\n\t\n\t    ToIndexedSequence.prototype.includes = function(value) {\n\t      return this._iter.includes(value);\n\t    };\n\t\n\t    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n\t      var iterations = 0;\n\t      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n\t    };\n\t\n\t    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n\t      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\t      var iterations = 0;\n\t      return new Iterator(function()  {\n\t        var step = iterator.next();\n\t        return step.done ? step :\n\t          iteratorValue(type, iterations++, step.value, step)\n\t      });\n\t    };\n\t\n\t\n\t\n\t  createClass(ToSetSequence, SetSeq);\n\t    function ToSetSequence(iter) {\n\t      this._iter = iter;\n\t      this.size = iter.size;\n\t    }\n\t\n\t    ToSetSequence.prototype.has = function(key) {\n\t      return this._iter.includes(key);\n\t    };\n\t\n\t    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n\t      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n\t    };\n\t\n\t    ToSetSequence.prototype.__iterator = function(type, reverse) {\n\t      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\t      return new Iterator(function()  {\n\t        var step = iterator.next();\n\t        return step.done ? step :\n\t          iteratorValue(type, step.value, step.value, step);\n\t      });\n\t    };\n\t\n\t\n\t\n\t  createClass(FromEntriesSequence, KeyedSeq);\n\t    function FromEntriesSequence(entries) {\n\t      this._iter = entries;\n\t      this.size = entries.size;\n\t    }\n\t\n\t    FromEntriesSequence.prototype.entrySeq = function() {\n\t      return this._iter.toSeq();\n\t    };\n\t\n\t    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n\t      return this._iter.__iterate(function(entry ) {\n\t        // Check if entry exists first so array access doesn't throw for holes\n\t        // in the parent iteration.\n\t        if (entry) {\n\t          validateEntry(entry);\n\t          var indexedIterable = isIterable(entry);\n\t          return fn(\n\t            indexedIterable ? entry.get(1) : entry[1],\n\t            indexedIterable ? entry.get(0) : entry[0],\n\t            this$0\n\t          );\n\t        }\n\t      }, reverse);\n\t    };\n\t\n\t    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n\t      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\t      return new Iterator(function()  {\n\t        while (true) {\n\t          var step = iterator.next();\n\t          if (step.done) {\n\t            return step;\n\t          }\n\t          var entry = step.value;\n\t          // Check if entry exists first so array access doesn't throw for holes\n\t          // in the parent iteration.\n\t          if (entry) {\n\t            validateEntry(entry);\n\t            var indexedIterable = isIterable(entry);\n\t            return iteratorValue(\n\t              type,\n\t              indexedIterable ? entry.get(0) : entry[0],\n\t              indexedIterable ? entry.get(1) : entry[1],\n\t              step\n\t            );\n\t          }\n\t        }\n\t      });\n\t    };\n\t\n\t\n\t  ToIndexedSequence.prototype.cacheResult =\n\t  ToKeyedSequence.prototype.cacheResult =\n\t  ToSetSequence.prototype.cacheResult =\n\t  FromEntriesSequence.prototype.cacheResult =\n\t    cacheResultThrough;\n\t\n\t\n\t  function flipFactory(iterable) {\n\t    var flipSequence = makeSequence(iterable);\n\t    flipSequence._iter = iterable;\n\t    flipSequence.size = iterable.size;\n\t    flipSequence.flip = function()  {return iterable};\n\t    flipSequence.reverse = function () {\n\t      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n\t      reversedSequence.flip = function()  {return iterable.reverse()};\n\t      return reversedSequence;\n\t    };\n\t    flipSequence.has = function(key ) {return iterable.includes(key)};\n\t    flipSequence.includes = function(key ) {return iterable.has(key)};\n\t    flipSequence.cacheResult = cacheResultThrough;\n\t    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n\t      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n\t    }\n\t    flipSequence.__iteratorUncached = function(type, reverse) {\n\t      if (type === ITERATE_ENTRIES) {\n\t        var iterator = iterable.__iterator(type, reverse);\n\t        return new Iterator(function()  {\n\t          var step = iterator.next();\n\t          if (!step.done) {\n\t            var k = step.value[0];\n\t            step.value[0] = step.value[1];\n\t            step.value[1] = k;\n\t          }\n\t          return step;\n\t        });\n\t      }\n\t      return iterable.__iterator(\n\t        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n\t        reverse\n\t      );\n\t    }\n\t    return flipSequence;\n\t  }\n\t\n\t\n\t  function mapFactory(iterable, mapper, context) {\n\t    var mappedSequence = makeSequence(iterable);\n\t    mappedSequence.size = iterable.size;\n\t    mappedSequence.has = function(key ) {return iterable.has(key)};\n\t    mappedSequence.get = function(key, notSetValue)  {\n\t      var v = iterable.get(key, NOT_SET);\n\t      return v === NOT_SET ?\n\t        notSetValue :\n\t        mapper.call(context, v, key, iterable);\n\t    };\n\t    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n\t      return iterable.__iterate(\n\t        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n\t        reverse\n\t      );\n\t    }\n\t    mappedSequence.__iteratorUncached = function (type, reverse) {\n\t      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n\t      return new Iterator(function()  {\n\t        var step = iterator.next();\n\t        if (step.done) {\n\t          return step;\n\t        }\n\t        var entry = step.value;\n\t        var key = entry[0];\n\t        return iteratorValue(\n\t          type,\n\t          key,\n\t          mapper.call(context, entry[1], key, iterable),\n\t          step\n\t        );\n\t      });\n\t    }\n\t    return mappedSequence;\n\t  }\n\t\n\t\n\t  function reverseFactory(iterable, useKeys) {\n\t    var reversedSequence = makeSequence(iterable);\n\t    reversedSequence._iter = iterable;\n\t    reversedSequence.size = iterable.size;\n\t    reversedSequence.reverse = function()  {return iterable};\n\t    if (iterable.flip) {\n\t      reversedSequence.flip = function () {\n\t        var flipSequence = flipFactory(iterable);\n\t        flipSequence.reverse = function()  {return iterable.flip()};\n\t        return flipSequence;\n\t      };\n\t    }\n\t    reversedSequence.get = function(key, notSetValue) \n\t      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n\t    reversedSequence.has = function(key )\n\t      {return iterable.has(useKeys ? key : -1 - key)};\n\t    reversedSequence.includes = function(value ) {return iterable.includes(value)};\n\t    reversedSequence.cacheResult = cacheResultThrough;\n\t    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n\t      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n\t    };\n\t    reversedSequence.__iterator =\n\t      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n\t    return reversedSequence;\n\t  }\n\t\n\t\n\t  function filterFactory(iterable, predicate, context, useKeys) {\n\t    var filterSequence = makeSequence(iterable);\n\t    if (useKeys) {\n\t      filterSequence.has = function(key ) {\n\t        var v = iterable.get(key, NOT_SET);\n\t        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n\t      };\n\t      filterSequence.get = function(key, notSetValue)  {\n\t        var v = iterable.get(key, NOT_SET);\n\t        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n\t          v : notSetValue;\n\t      };\n\t    }\n\t    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n\t      var iterations = 0;\n\t      iterable.__iterate(function(v, k, c)  {\n\t        if (predicate.call(context, v, k, c)) {\n\t          iterations++;\n\t          return fn(v, useKeys ? k : iterations - 1, this$0);\n\t        }\n\t      }, reverse);\n\t      return iterations;\n\t    };\n\t    filterSequence.__iteratorUncached = function (type, reverse) {\n\t      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n\t      var iterations = 0;\n\t      return new Iterator(function()  {\n\t        while (true) {\n\t          var step = iterator.next();\n\t          if (step.done) {\n\t            return step;\n\t          }\n\t          var entry = step.value;\n\t          var key = entry[0];\n\t          var value = entry[1];\n\t          if (predicate.call(context, value, key, iterable)) {\n\t            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n\t          }\n\t        }\n\t      });\n\t    }\n\t    return filterSequence;\n\t  }\n\t\n\t\n\t  function countByFactory(iterable, grouper, context) {\n\t    var groups = Map().asMutable();\n\t    iterable.__iterate(function(v, k)  {\n\t      groups.update(\n\t        grouper.call(context, v, k, iterable),\n\t        0,\n\t        function(a ) {return a + 1}\n\t      );\n\t    });\n\t    return groups.asImmutable();\n\t  }\n\t\n\t\n\t  function groupByFactory(iterable, grouper, context) {\n\t    var isKeyedIter = isKeyed(iterable);\n\t    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n\t    iterable.__iterate(function(v, k)  {\n\t      groups.update(\n\t        grouper.call(context, v, k, iterable),\n\t        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n\t      );\n\t    });\n\t    var coerce = iterableClass(iterable);\n\t    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n\t  }\n\t\n\t\n\t  function sliceFactory(iterable, begin, end, useKeys) {\n\t    var originalSize = iterable.size;\n\t\n\t    // Sanitize begin & end using this shorthand for ToInt32(argument)\n\t    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n\t    if (begin !== undefined) {\n\t      begin = begin | 0;\n\t    }\n\t    if (end !== undefined) {\n\t      end = end | 0;\n\t    }\n\t\n\t    if (wholeSlice(begin, end, originalSize)) {\n\t      return iterable;\n\t    }\n\t\n\t    var resolvedBegin = resolveBegin(begin, originalSize);\n\t    var resolvedEnd = resolveEnd(end, originalSize);\n\t\n\t    // begin or end will be NaN if they were provided as negative numbers and\n\t    // this iterable's size is unknown. In that case, cache first so there is\n\t    // a known size and these do not resolve to NaN.\n\t    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n\t      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n\t    }\n\t\n\t    // Note: resolvedEnd is undefined when the original sequence's length is\n\t    // unknown and this slice did not supply an end and should contain all\n\t    // elements after resolvedBegin.\n\t    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n\t    var resolvedSize = resolvedEnd - resolvedBegin;\n\t    var sliceSize;\n\t    if (resolvedSize === resolvedSize) {\n\t      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n\t    }\n\t\n\t    var sliceSeq = makeSequence(iterable);\n\t\n\t    // If iterable.size is undefined, the size of the realized sliceSeq is\n\t    // unknown at this point unless the number of items to slice is 0\n\t    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\t\n\t    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n\t      sliceSeq.get = function (index, notSetValue) {\n\t        index = wrapIndex(this, index);\n\t        return index >= 0 && index < sliceSize ?\n\t          iterable.get(index + resolvedBegin, notSetValue) :\n\t          notSetValue;\n\t      }\n\t    }\n\t\n\t    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n\t      if (sliceSize === 0) {\n\t        return 0;\n\t      }\n\t      if (reverse) {\n\t        return this.cacheResult().__iterate(fn, reverse);\n\t      }\n\t      var skipped = 0;\n\t      var isSkipping = true;\n\t      var iterations = 0;\n\t      iterable.__iterate(function(v, k)  {\n\t        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n\t          iterations++;\n\t          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n\t                 iterations !== sliceSize;\n\t        }\n\t      });\n\t      return iterations;\n\t    };\n\t\n\t    sliceSeq.__iteratorUncached = function(type, reverse) {\n\t      if (sliceSize !== 0 && reverse) {\n\t        return this.cacheResult().__iterator(type, reverse);\n\t      }\n\t      // Don't bother instantiating parent iterator if taking 0.\n\t      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n\t      var skipped = 0;\n\t      var iterations = 0;\n\t      return new Iterator(function()  {\n\t        while (skipped++ < resolvedBegin) {\n\t          iterator.next();\n\t        }\n\t        if (++iterations > sliceSize) {\n\t          return iteratorDone();\n\t        }\n\t        var step = iterator.next();\n\t        if (useKeys || type === ITERATE_VALUES) {\n\t          return step;\n\t        } else if (type === ITERATE_KEYS) {\n\t          return iteratorValue(type, iterations - 1, undefined, step);\n\t        } else {\n\t          return iteratorValue(type, iterations - 1, step.value[1], step);\n\t        }\n\t      });\n\t    }\n\t\n\t    return sliceSeq;\n\t  }\n\t\n\t\n\t  function takeWhileFactory(iterable, predicate, context) {\n\t    var takeSequence = makeSequence(iterable);\n\t    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n\t      if (reverse) {\n\t        return this.cacheResult().__iterate(fn, reverse);\n\t      }\n\t      var iterations = 0;\n\t      iterable.__iterate(function(v, k, c) \n\t        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n\t      );\n\t      return iterations;\n\t    };\n\t    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n\t      if (reverse) {\n\t        return this.cacheResult().__iterator(type, reverse);\n\t      }\n\t      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n\t      var iterating = true;\n\t      return new Iterator(function()  {\n\t        if (!iterating) {\n\t          return iteratorDone();\n\t        }\n\t        var step = iterator.next();\n\t        if (step.done) {\n\t          return step;\n\t        }\n\t        var entry = step.value;\n\t        var k = entry[0];\n\t        var v = entry[1];\n\t        if (!predicate.call(context, v, k, this$0)) {\n\t          iterating = false;\n\t          return iteratorDone();\n\t        }\n\t        return type === ITERATE_ENTRIES ? step :\n\t          iteratorValue(type, k, v, step);\n\t      });\n\t    };\n\t    return takeSequence;\n\t  }\n\t\n\t\n\t  function skipWhileFactory(iterable, predicate, context, useKeys) {\n\t    var skipSequence = makeSequence(iterable);\n\t    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n\t      if (reverse) {\n\t        return this.cacheResult().__iterate(fn, reverse);\n\t      }\n\t      var isSkipping = true;\n\t      var iterations = 0;\n\t      iterable.__iterate(function(v, k, c)  {\n\t        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n\t          iterations++;\n\t          return fn(v, useKeys ? k : iterations - 1, this$0);\n\t        }\n\t      });\n\t      return iterations;\n\t    };\n\t    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n\t      if (reverse) {\n\t        return this.cacheResult().__iterator(type, reverse);\n\t      }\n\t      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n\t      var skipping = true;\n\t      var iterations = 0;\n\t      return new Iterator(function()  {\n\t        var step, k, v;\n\t        do {\n\t          step = iterator.next();\n\t          if (step.done) {\n\t            if (useKeys || type === ITERATE_VALUES) {\n\t              return step;\n\t            } else if (type === ITERATE_KEYS) {\n\t              return iteratorValue(type, iterations++, undefined, step);\n\t            } else {\n\t              return iteratorValue(type, iterations++, step.value[1], step);\n\t            }\n\t          }\n\t          var entry = step.value;\n\t          k = entry[0];\n\t          v = entry[1];\n\t          skipping && (skipping = predicate.call(context, v, k, this$0));\n\t        } while (skipping);\n\t        return type === ITERATE_ENTRIES ? step :\n\t          iteratorValue(type, k, v, step);\n\t      });\n\t    };\n\t    return skipSequence;\n\t  }\n\t\n\t\n\t  function concatFactory(iterable, values) {\n\t    var isKeyedIterable = isKeyed(iterable);\n\t    var iters = [iterable].concat(values).map(function(v ) {\n\t      if (!isIterable(v)) {\n\t        v = isKeyedIterable ?\n\t          keyedSeqFromValue(v) :\n\t          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n\t      } else if (isKeyedIterable) {\n\t        v = KeyedIterable(v);\n\t      }\n\t      return v;\n\t    }).filter(function(v ) {return v.size !== 0});\n\t\n\t    if (iters.length === 0) {\n\t      return iterable;\n\t    }\n\t\n\t    if (iters.length === 1) {\n\t      var singleton = iters[0];\n\t      if (singleton === iterable ||\n\t          isKeyedIterable && isKeyed(singleton) ||\n\t          isIndexed(iterable) && isIndexed(singleton)) {\n\t        return singleton;\n\t      }\n\t    }\n\t\n\t    var concatSeq = new ArraySeq(iters);\n\t    if (isKeyedIterable) {\n\t      concatSeq = concatSeq.toKeyedSeq();\n\t    } else if (!isIndexed(iterable)) {\n\t      concatSeq = concatSeq.toSetSeq();\n\t    }\n\t    concatSeq = concatSeq.flatten(true);\n\t    concatSeq.size = iters.reduce(\n\t      function(sum, seq)  {\n\t        if (sum !== undefined) {\n\t          var size = seq.size;\n\t          if (size !== undefined) {\n\t            return sum + size;\n\t          }\n\t        }\n\t      },\n\t      0\n\t    );\n\t    return concatSeq;\n\t  }\n\t\n\t\n\t  function flattenFactory(iterable, depth, useKeys) {\n\t    var flatSequence = makeSequence(iterable);\n\t    flatSequence.__iterateUncached = function(fn, reverse) {\n\t      var iterations = 0;\n\t      var stopped = false;\n\t      function flatDeep(iter, currentDepth) {var this$0 = this;\n\t        iter.__iterate(function(v, k)  {\n\t          if ((!depth || currentDepth < depth) && isIterable(v)) {\n\t            flatDeep(v, currentDepth + 1);\n\t          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n\t            stopped = true;\n\t          }\n\t          return !stopped;\n\t        }, reverse);\n\t      }\n\t      flatDeep(iterable, 0);\n\t      return iterations;\n\t    }\n\t    flatSequence.__iteratorUncached = function(type, reverse) {\n\t      var iterator = iterable.__iterator(type, reverse);\n\t      var stack = [];\n\t      var iterations = 0;\n\t      return new Iterator(function()  {\n\t        while (iterator) {\n\t          var step = iterator.next();\n\t          if (step.done !== false) {\n\t            iterator = stack.pop();\n\t            continue;\n\t          }\n\t          var v = step.value;\n\t          if (type === ITERATE_ENTRIES) {\n\t            v = v[1];\n\t          }\n\t          if ((!depth || stack.length < depth) && isIterable(v)) {\n\t            stack.push(iterator);\n\t            iterator = v.__iterator(type, reverse);\n\t          } else {\n\t            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n\t          }\n\t        }\n\t        return iteratorDone();\n\t      });\n\t    }\n\t    return flatSequence;\n\t  }\n\t\n\t\n\t  function flatMapFactory(iterable, mapper, context) {\n\t    var coerce = iterableClass(iterable);\n\t    return iterable.toSeq().map(\n\t      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n\t    ).flatten(true);\n\t  }\n\t\n\t\n\t  function interposeFactory(iterable, separator) {\n\t    var interposedSequence = makeSequence(iterable);\n\t    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n\t    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n\t      var iterations = 0;\n\t      iterable.__iterate(function(v, k) \n\t        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n\t        fn(v, iterations++, this$0) !== false},\n\t        reverse\n\t      );\n\t      return iterations;\n\t    };\n\t    interposedSequence.__iteratorUncached = function(type, reverse) {\n\t      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n\t      var iterations = 0;\n\t      var step;\n\t      return new Iterator(function()  {\n\t        if (!step || iterations % 2) {\n\t          step = iterator.next();\n\t          if (step.done) {\n\t            return step;\n\t          }\n\t        }\n\t        return iterations % 2 ?\n\t          iteratorValue(type, iterations++, separator) :\n\t          iteratorValue(type, iterations++, step.value, step);\n\t      });\n\t    };\n\t    return interposedSequence;\n\t  }\n\t\n\t\n\t  function sortFactory(iterable, comparator, mapper) {\n\t    if (!comparator) {\n\t      comparator = defaultComparator;\n\t    }\n\t    var isKeyedIterable = isKeyed(iterable);\n\t    var index = 0;\n\t    var entries = iterable.toSeq().map(\n\t      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n\t    ).toArray();\n\t    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n\t      isKeyedIterable ?\n\t      function(v, i)  { entries[i].length = 2; } :\n\t      function(v, i)  { entries[i] = v[1]; }\n\t    );\n\t    return isKeyedIterable ? KeyedSeq(entries) :\n\t      isIndexed(iterable) ? IndexedSeq(entries) :\n\t      SetSeq(entries);\n\t  }\n\t\n\t\n\t  function maxFactory(iterable, comparator, mapper) {\n\t    if (!comparator) {\n\t      comparator = defaultComparator;\n\t    }\n\t    if (mapper) {\n\t      var entry = iterable.toSeq()\n\t        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n\t        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n\t      return entry && entry[0];\n\t    } else {\n\t      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n\t    }\n\t  }\n\t\n\t  function maxCompare(comparator, a, b) {\n\t    var comp = comparator(b, a);\n\t    // b is considered the new max if the comparator declares them equal, but\n\t    // they are not equal and b is in fact a nullish value.\n\t    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n\t  }\n\t\n\t\n\t  function zipWithFactory(keyIter, zipper, iters) {\n\t    var zipSequence = makeSequence(keyIter);\n\t    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n\t    // Note: this a generic base implementation of __iterate in terms of\n\t    // __iterator which may be more generically useful in the future.\n\t    zipSequence.__iterate = function(fn, reverse) {\n\t      /* generic:\n\t      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n\t      var step;\n\t      var iterations = 0;\n\t      while (!(step = iterator.next()).done) {\n\t        iterations++;\n\t        if (fn(step.value[1], step.value[0], this) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return iterations;\n\t      */\n\t      // indexed:\n\t      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n\t      var step;\n\t      var iterations = 0;\n\t      while (!(step = iterator.next()).done) {\n\t        if (fn(step.value, iterations++, this) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return iterations;\n\t    };\n\t    zipSequence.__iteratorUncached = function(type, reverse) {\n\t      var iterators = iters.map(function(i )\n\t        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n\t      );\n\t      var iterations = 0;\n\t      var isDone = false;\n\t      return new Iterator(function()  {\n\t        var steps;\n\t        if (!isDone) {\n\t          steps = iterators.map(function(i ) {return i.next()});\n\t          isDone = steps.some(function(s ) {return s.done});\n\t        }\n\t        if (isDone) {\n\t          return iteratorDone();\n\t        }\n\t        return iteratorValue(\n\t          type,\n\t          iterations++,\n\t          zipper.apply(null, steps.map(function(s ) {return s.value}))\n\t        );\n\t      });\n\t    };\n\t    return zipSequence\n\t  }\n\t\n\t\n\t  // #pragma Helper Functions\n\t\n\t  function reify(iter, seq) {\n\t    return isSeq(iter) ? seq : iter.constructor(seq);\n\t  }\n\t\n\t  function validateEntry(entry) {\n\t    if (entry !== Object(entry)) {\n\t      throw new TypeError('Expected [K, V] tuple: ' + entry);\n\t    }\n\t  }\n\t\n\t  function resolveSize(iter) {\n\t    assertNotInfinite(iter.size);\n\t    return ensureSize(iter);\n\t  }\n\t\n\t  function iterableClass(iterable) {\n\t    return isKeyed(iterable) ? KeyedIterable :\n\t      isIndexed(iterable) ? IndexedIterable :\n\t      SetIterable;\n\t  }\n\t\n\t  function makeSequence(iterable) {\n\t    return Object.create(\n\t      (\n\t        isKeyed(iterable) ? KeyedSeq :\n\t        isIndexed(iterable) ? IndexedSeq :\n\t        SetSeq\n\t      ).prototype\n\t    );\n\t  }\n\t\n\t  function cacheResultThrough() {\n\t    if (this._iter.cacheResult) {\n\t      this._iter.cacheResult();\n\t      this.size = this._iter.size;\n\t      return this;\n\t    } else {\n\t      return Seq.prototype.cacheResult.call(this);\n\t    }\n\t  }\n\t\n\t  function defaultComparator(a, b) {\n\t    return a > b ? 1 : a < b ? -1 : 0;\n\t  }\n\t\n\t  function forceIterator(keyPath) {\n\t    var iter = getIterator(keyPath);\n\t    if (!iter) {\n\t      // Array might not be iterable in this environment, so we need a fallback\n\t      // to our wrapped type.\n\t      if (!isArrayLike(keyPath)) {\n\t        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n\t      }\n\t      iter = getIterator(Iterable(keyPath));\n\t    }\n\t    return iter;\n\t  }\n\t\n\t  createClass(Record, KeyedCollection);\n\t\n\t    function Record(defaultValues, name) {\n\t      var hasInitialized;\n\t\n\t      var RecordType = function Record(values) {\n\t        if (values instanceof RecordType) {\n\t          return values;\n\t        }\n\t        if (!(this instanceof RecordType)) {\n\t          return new RecordType(values);\n\t        }\n\t        if (!hasInitialized) {\n\t          hasInitialized = true;\n\t          var keys = Object.keys(defaultValues);\n\t          setProps(RecordTypePrototype, keys);\n\t          RecordTypePrototype.size = keys.length;\n\t          RecordTypePrototype._name = name;\n\t          RecordTypePrototype._keys = keys;\n\t          RecordTypePrototype._defaultValues = defaultValues;\n\t        }\n\t        this._map = Map(values);\n\t      };\n\t\n\t      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n\t      RecordTypePrototype.constructor = RecordType;\n\t\n\t      return RecordType;\n\t    }\n\t\n\t    Record.prototype.toString = function() {\n\t      return this.__toString(recordName(this) + ' {', '}');\n\t    };\n\t\n\t    // @pragma Access\n\t\n\t    Record.prototype.has = function(k) {\n\t      return this._defaultValues.hasOwnProperty(k);\n\t    };\n\t\n\t    Record.prototype.get = function(k, notSetValue) {\n\t      if (!this.has(k)) {\n\t        return notSetValue;\n\t      }\n\t      var defaultVal = this._defaultValues[k];\n\t      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n\t    };\n\t\n\t    // @pragma Modification\n\t\n\t    Record.prototype.clear = function() {\n\t      if (this.__ownerID) {\n\t        this._map && this._map.clear();\n\t        return this;\n\t      }\n\t      var RecordType = this.constructor;\n\t      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n\t    };\n\t\n\t    Record.prototype.set = function(k, v) {\n\t      if (!this.has(k)) {\n\t        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n\t      }\n\t      var newMap = this._map && this._map.set(k, v);\n\t      if (this.__ownerID || newMap === this._map) {\n\t        return this;\n\t      }\n\t      return makeRecord(this, newMap);\n\t    };\n\t\n\t    Record.prototype.remove = function(k) {\n\t      if (!this.has(k)) {\n\t        return this;\n\t      }\n\t      var newMap = this._map && this._map.remove(k);\n\t      if (this.__ownerID || newMap === this._map) {\n\t        return this;\n\t      }\n\t      return makeRecord(this, newMap);\n\t    };\n\t\n\t    Record.prototype.wasAltered = function() {\n\t      return this._map.wasAltered();\n\t    };\n\t\n\t    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n\t      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n\t    };\n\t\n\t    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n\t      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n\t    };\n\t\n\t    Record.prototype.__ensureOwner = function(ownerID) {\n\t      if (ownerID === this.__ownerID) {\n\t        return this;\n\t      }\n\t      var newMap = this._map && this._map.__ensureOwner(ownerID);\n\t      if (!ownerID) {\n\t        this.__ownerID = ownerID;\n\t        this._map = newMap;\n\t        return this;\n\t      }\n\t      return makeRecord(this, newMap, ownerID);\n\t    };\n\t\n\t\n\t  var RecordPrototype = Record.prototype;\n\t  RecordPrototype[DELETE] = RecordPrototype.remove;\n\t  RecordPrototype.deleteIn =\n\t  RecordPrototype.removeIn = MapPrototype.removeIn;\n\t  RecordPrototype.merge = MapPrototype.merge;\n\t  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n\t  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n\t  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n\t  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n\t  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n\t  RecordPrototype.setIn = MapPrototype.setIn;\n\t  RecordPrototype.update = MapPrototype.update;\n\t  RecordPrototype.updateIn = MapPrototype.updateIn;\n\t  RecordPrototype.withMutations = MapPrototype.withMutations;\n\t  RecordPrototype.asMutable = MapPrototype.asMutable;\n\t  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\t\n\t\n\t  function makeRecord(likeRecord, map, ownerID) {\n\t    var record = Object.create(Object.getPrototypeOf(likeRecord));\n\t    record._map = map;\n\t    record.__ownerID = ownerID;\n\t    return record;\n\t  }\n\t\n\t  function recordName(record) {\n\t    return record._name || record.constructor.name || 'Record';\n\t  }\n\t\n\t  function setProps(prototype, names) {\n\t    try {\n\t      names.forEach(setProp.bind(undefined, prototype));\n\t    } catch (error) {\n\t      // Object.defineProperty failed. Probably IE8.\n\t    }\n\t  }\n\t\n\t  function setProp(prototype, name) {\n\t    Object.defineProperty(prototype, name, {\n\t      get: function() {\n\t        return this.get(name);\n\t      },\n\t      set: function(value) {\n\t        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n\t        this.set(name, value);\n\t      }\n\t    });\n\t  }\n\t\n\t  createClass(Set, SetCollection);\n\t\n\t    // @pragma Construction\n\t\n\t    function Set(value) {\n\t      return value === null || value === undefined ? emptySet() :\n\t        isSet(value) && !isOrdered(value) ? value :\n\t        emptySet().withMutations(function(set ) {\n\t          var iter = SetIterable(value);\n\t          assertNotInfinite(iter.size);\n\t          iter.forEach(function(v ) {return set.add(v)});\n\t        });\n\t    }\n\t\n\t    Set.of = function(/*...values*/) {\n\t      return this(arguments);\n\t    };\n\t\n\t    Set.fromKeys = function(value) {\n\t      return this(KeyedIterable(value).keySeq());\n\t    };\n\t\n\t    Set.prototype.toString = function() {\n\t      return this.__toString('Set {', '}');\n\t    };\n\t\n\t    // @pragma Access\n\t\n\t    Set.prototype.has = function(value) {\n\t      return this._map.has(value);\n\t    };\n\t\n\t    // @pragma Modification\n\t\n\t    Set.prototype.add = function(value) {\n\t      return updateSet(this, this._map.set(value, true));\n\t    };\n\t\n\t    Set.prototype.remove = function(value) {\n\t      return updateSet(this, this._map.remove(value));\n\t    };\n\t\n\t    Set.prototype.clear = function() {\n\t      return updateSet(this, this._map.clear());\n\t    };\n\t\n\t    // @pragma Composition\n\t\n\t    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n\t      iters = iters.filter(function(x ) {return x.size !== 0});\n\t      if (iters.length === 0) {\n\t        return this;\n\t      }\n\t      if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n\t        return this.constructor(iters[0]);\n\t      }\n\t      return this.withMutations(function(set ) {\n\t        for (var ii = 0; ii < iters.length; ii++) {\n\t          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n\t        }\n\t      });\n\t    };\n\t\n\t    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n\t      if (iters.length === 0) {\n\t        return this;\n\t      }\n\t      iters = iters.map(function(iter ) {return SetIterable(iter)});\n\t      var originalSet = this;\n\t      return this.withMutations(function(set ) {\n\t        originalSet.forEach(function(value ) {\n\t          if (!iters.every(function(iter ) {return iter.includes(value)})) {\n\t            set.remove(value);\n\t          }\n\t        });\n\t      });\n\t    };\n\t\n\t    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n\t      if (iters.length === 0) {\n\t        return this;\n\t      }\n\t      iters = iters.map(function(iter ) {return SetIterable(iter)});\n\t      var originalSet = this;\n\t      return this.withMutations(function(set ) {\n\t        originalSet.forEach(function(value ) {\n\t          if (iters.some(function(iter ) {return iter.includes(value)})) {\n\t            set.remove(value);\n\t          }\n\t        });\n\t      });\n\t    };\n\t\n\t    Set.prototype.merge = function() {\n\t      return this.union.apply(this, arguments);\n\t    };\n\t\n\t    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n\t      return this.union.apply(this, iters);\n\t    };\n\t\n\t    Set.prototype.sort = function(comparator) {\n\t      // Late binding\n\t      return OrderedSet(sortFactory(this, comparator));\n\t    };\n\t\n\t    Set.prototype.sortBy = function(mapper, comparator) {\n\t      // Late binding\n\t      return OrderedSet(sortFactory(this, comparator, mapper));\n\t    };\n\t\n\t    Set.prototype.wasAltered = function() {\n\t      return this._map.wasAltered();\n\t    };\n\t\n\t    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n\t      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n\t    };\n\t\n\t    Set.prototype.__iterator = function(type, reverse) {\n\t      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n\t    };\n\t\n\t    Set.prototype.__ensureOwner = function(ownerID) {\n\t      if (ownerID === this.__ownerID) {\n\t        return this;\n\t      }\n\t      var newMap = this._map.__ensureOwner(ownerID);\n\t      if (!ownerID) {\n\t        this.__ownerID = ownerID;\n\t        this._map = newMap;\n\t        return this;\n\t      }\n\t      return this.__make(newMap, ownerID);\n\t    };\n\t\n\t\n\t  function isSet(maybeSet) {\n\t    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n\t  }\n\t\n\t  Set.isSet = isSet;\n\t\n\t  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\t\n\t  var SetPrototype = Set.prototype;\n\t  SetPrototype[IS_SET_SENTINEL] = true;\n\t  SetPrototype[DELETE] = SetPrototype.remove;\n\t  SetPrototype.mergeDeep = SetPrototype.merge;\n\t  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n\t  SetPrototype.withMutations = MapPrototype.withMutations;\n\t  SetPrototype.asMutable = MapPrototype.asMutable;\n\t  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\t\n\t  SetPrototype.__empty = emptySet;\n\t  SetPrototype.__make = makeSet;\n\t\n\t  function updateSet(set, newMap) {\n\t    if (set.__ownerID) {\n\t      set.size = newMap.size;\n\t      set._map = newMap;\n\t      return set;\n\t    }\n\t    return newMap === set._map ? set :\n\t      newMap.size === 0 ? set.__empty() :\n\t      set.__make(newMap);\n\t  }\n\t\n\t  function makeSet(map, ownerID) {\n\t    var set = Object.create(SetPrototype);\n\t    set.size = map ? map.size : 0;\n\t    set._map = map;\n\t    set.__ownerID = ownerID;\n\t    return set;\n\t  }\n\t\n\t  var EMPTY_SET;\n\t  function emptySet() {\n\t    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n\t  }\n\t\n\t  createClass(OrderedSet, Set);\n\t\n\t    // @pragma Construction\n\t\n\t    function OrderedSet(value) {\n\t      return value === null || value === undefined ? emptyOrderedSet() :\n\t        isOrderedSet(value) ? value :\n\t        emptyOrderedSet().withMutations(function(set ) {\n\t          var iter = SetIterable(value);\n\t          assertNotInfinite(iter.size);\n\t          iter.forEach(function(v ) {return set.add(v)});\n\t        });\n\t    }\n\t\n\t    OrderedSet.of = function(/*...values*/) {\n\t      return this(arguments);\n\t    };\n\t\n\t    OrderedSet.fromKeys = function(value) {\n\t      return this(KeyedIterable(value).keySeq());\n\t    };\n\t\n\t    OrderedSet.prototype.toString = function() {\n\t      return this.__toString('OrderedSet {', '}');\n\t    };\n\t\n\t\n\t  function isOrderedSet(maybeOrderedSet) {\n\t    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n\t  }\n\t\n\t  OrderedSet.isOrderedSet = isOrderedSet;\n\t\n\t  var OrderedSetPrototype = OrderedSet.prototype;\n\t  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\t\n\t  OrderedSetPrototype.__empty = emptyOrderedSet;\n\t  OrderedSetPrototype.__make = makeOrderedSet;\n\t\n\t  function makeOrderedSet(map, ownerID) {\n\t    var set = Object.create(OrderedSetPrototype);\n\t    set.size = map ? map.size : 0;\n\t    set._map = map;\n\t    set.__ownerID = ownerID;\n\t    return set;\n\t  }\n\t\n\t  var EMPTY_ORDERED_SET;\n\t  function emptyOrderedSet() {\n\t    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n\t  }\n\t\n\t  createClass(Stack, IndexedCollection);\n\t\n\t    // @pragma Construction\n\t\n\t    function Stack(value) {\n\t      return value === null || value === undefined ? emptyStack() :\n\t        isStack(value) ? value :\n\t        emptyStack().unshiftAll(value);\n\t    }\n\t\n\t    Stack.of = function(/*...values*/) {\n\t      return this(arguments);\n\t    };\n\t\n\t    Stack.prototype.toString = function() {\n\t      return this.__toString('Stack [', ']');\n\t    };\n\t\n\t    // @pragma Access\n\t\n\t    Stack.prototype.get = function(index, notSetValue) {\n\t      var head = this._head;\n\t      index = wrapIndex(this, index);\n\t      while (head && index--) {\n\t        head = head.next;\n\t      }\n\t      return head ? head.value : notSetValue;\n\t    };\n\t\n\t    Stack.prototype.peek = function() {\n\t      return this._head && this._head.value;\n\t    };\n\t\n\t    // @pragma Modification\n\t\n\t    Stack.prototype.push = function(/*...values*/) {\n\t      if (arguments.length === 0) {\n\t        return this;\n\t      }\n\t      var newSize = this.size + arguments.length;\n\t      var head = this._head;\n\t      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n\t        head = {\n\t          value: arguments[ii],\n\t          next: head\n\t        };\n\t      }\n\t      if (this.__ownerID) {\n\t        this.size = newSize;\n\t        this._head = head;\n\t        this.__hash = undefined;\n\t        this.__altered = true;\n\t        return this;\n\t      }\n\t      return makeStack(newSize, head);\n\t    };\n\t\n\t    Stack.prototype.pushAll = function(iter) {\n\t      iter = IndexedIterable(iter);\n\t      if (iter.size === 0) {\n\t        return this;\n\t      }\n\t      assertNotInfinite(iter.size);\n\t      var newSize = this.size;\n\t      var head = this._head;\n\t      iter.reverse().forEach(function(value ) {\n\t        newSize++;\n\t        head = {\n\t          value: value,\n\t          next: head\n\t        };\n\t      });\n\t      if (this.__ownerID) {\n\t        this.size = newSize;\n\t        this._head = head;\n\t        this.__hash = undefined;\n\t        this.__altered = true;\n\t        return this;\n\t      }\n\t      return makeStack(newSize, head);\n\t    };\n\t\n\t    Stack.prototype.pop = function() {\n\t      return this.slice(1);\n\t    };\n\t\n\t    Stack.prototype.unshift = function(/*...values*/) {\n\t      return this.push.apply(this, arguments);\n\t    };\n\t\n\t    Stack.prototype.unshiftAll = function(iter) {\n\t      return this.pushAll(iter);\n\t    };\n\t\n\t    Stack.prototype.shift = function() {\n\t      return this.pop.apply(this, arguments);\n\t    };\n\t\n\t    Stack.prototype.clear = function() {\n\t      if (this.size === 0) {\n\t        return this;\n\t      }\n\t      if (this.__ownerID) {\n\t        this.size = 0;\n\t        this._head = undefined;\n\t        this.__hash = undefined;\n\t        this.__altered = true;\n\t        return this;\n\t      }\n\t      return emptyStack();\n\t    };\n\t\n\t    Stack.prototype.slice = function(begin, end) {\n\t      if (wholeSlice(begin, end, this.size)) {\n\t        return this;\n\t      }\n\t      var resolvedBegin = resolveBegin(begin, this.size);\n\t      var resolvedEnd = resolveEnd(end, this.size);\n\t      if (resolvedEnd !== this.size) {\n\t        // super.slice(begin, end);\n\t        return IndexedCollection.prototype.slice.call(this, begin, end);\n\t      }\n\t      var newSize = this.size - resolvedBegin;\n\t      var head = this._head;\n\t      while (resolvedBegin--) {\n\t        head = head.next;\n\t      }\n\t      if (this.__ownerID) {\n\t        this.size = newSize;\n\t        this._head = head;\n\t        this.__hash = undefined;\n\t        this.__altered = true;\n\t        return this;\n\t      }\n\t      return makeStack(newSize, head);\n\t    };\n\t\n\t    // @pragma Mutability\n\t\n\t    Stack.prototype.__ensureOwner = function(ownerID) {\n\t      if (ownerID === this.__ownerID) {\n\t        return this;\n\t      }\n\t      if (!ownerID) {\n\t        this.__ownerID = ownerID;\n\t        this.__altered = false;\n\t        return this;\n\t      }\n\t      return makeStack(this.size, this._head, ownerID, this.__hash);\n\t    };\n\t\n\t    // @pragma Iteration\n\t\n\t    Stack.prototype.__iterate = function(fn, reverse) {\n\t      if (reverse) {\n\t        return this.reverse().__iterate(fn);\n\t      }\n\t      var iterations = 0;\n\t      var node = this._head;\n\t      while (node) {\n\t        if (fn(node.value, iterations++, this) === false) {\n\t          break;\n\t        }\n\t        node = node.next;\n\t      }\n\t      return iterations;\n\t    };\n\t\n\t    Stack.prototype.__iterator = function(type, reverse) {\n\t      if (reverse) {\n\t        return this.reverse().__iterator(type);\n\t      }\n\t      var iterations = 0;\n\t      var node = this._head;\n\t      return new Iterator(function()  {\n\t        if (node) {\n\t          var value = node.value;\n\t          node = node.next;\n\t          return iteratorValue(type, iterations++, value);\n\t        }\n\t        return iteratorDone();\n\t      });\n\t    };\n\t\n\t\n\t  function isStack(maybeStack) {\n\t    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n\t  }\n\t\n\t  Stack.isStack = isStack;\n\t\n\t  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\t\n\t  var StackPrototype = Stack.prototype;\n\t  StackPrototype[IS_STACK_SENTINEL] = true;\n\t  StackPrototype.withMutations = MapPrototype.withMutations;\n\t  StackPrototype.asMutable = MapPrototype.asMutable;\n\t  StackPrototype.asImmutable = MapPrototype.asImmutable;\n\t  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\t\n\t\n\t  function makeStack(size, head, ownerID, hash) {\n\t    var map = Object.create(StackPrototype);\n\t    map.size = size;\n\t    map._head = head;\n\t    map.__ownerID = ownerID;\n\t    map.__hash = hash;\n\t    map.__altered = false;\n\t    return map;\n\t  }\n\t\n\t  var EMPTY_STACK;\n\t  function emptyStack() {\n\t    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n\t  }\n\t\n\t  /**\n\t   * Contributes additional methods to a constructor\n\t   */\n\t  function mixin(ctor, methods) {\n\t    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n\t    Object.keys(methods).forEach(keyCopier);\n\t    Object.getOwnPropertySymbols &&\n\t      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n\t    return ctor;\n\t  }\n\t\n\t  Iterable.Iterator = Iterator;\n\t\n\t  mixin(Iterable, {\n\t\n\t    // ### Conversion to other types\n\t\n\t    toArray: function() {\n\t      assertNotInfinite(this.size);\n\t      var array = new Array(this.size || 0);\n\t      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n\t      return array;\n\t    },\n\t\n\t    toIndexedSeq: function() {\n\t      return new ToIndexedSequence(this);\n\t    },\n\t\n\t    toJS: function() {\n\t      return this.toSeq().map(\n\t        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n\t      ).__toJS();\n\t    },\n\t\n\t    toJSON: function() {\n\t      return this.toSeq().map(\n\t        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n\t      ).__toJS();\n\t    },\n\t\n\t    toKeyedSeq: function() {\n\t      return new ToKeyedSequence(this, true);\n\t    },\n\t\n\t    toMap: function() {\n\t      // Use Late Binding here to solve the circular dependency.\n\t      return Map(this.toKeyedSeq());\n\t    },\n\t\n\t    toObject: function() {\n\t      assertNotInfinite(this.size);\n\t      var object = {};\n\t      this.__iterate(function(v, k)  { object[k] = v; });\n\t      return object;\n\t    },\n\t\n\t    toOrderedMap: function() {\n\t      // Use Late Binding here to solve the circular dependency.\n\t      return OrderedMap(this.toKeyedSeq());\n\t    },\n\t\n\t    toOrderedSet: function() {\n\t      // Use Late Binding here to solve the circular dependency.\n\t      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n\t    },\n\t\n\t    toSet: function() {\n\t      // Use Late Binding here to solve the circular dependency.\n\t      return Set(isKeyed(this) ? this.valueSeq() : this);\n\t    },\n\t\n\t    toSetSeq: function() {\n\t      return new ToSetSequence(this);\n\t    },\n\t\n\t    toSeq: function() {\n\t      return isIndexed(this) ? this.toIndexedSeq() :\n\t        isKeyed(this) ? this.toKeyedSeq() :\n\t        this.toSetSeq();\n\t    },\n\t\n\t    toStack: function() {\n\t      // Use Late Binding here to solve the circular dependency.\n\t      return Stack(isKeyed(this) ? this.valueSeq() : this);\n\t    },\n\t\n\t    toList: function() {\n\t      // Use Late Binding here to solve the circular dependency.\n\t      return List(isKeyed(this) ? this.valueSeq() : this);\n\t    },\n\t\n\t\n\t    // ### Common JavaScript methods and properties\n\t\n\t    toString: function() {\n\t      return '[Iterable]';\n\t    },\n\t\n\t    __toString: function(head, tail) {\n\t      if (this.size === 0) {\n\t        return head + tail;\n\t      }\n\t      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n\t    },\n\t\n\t\n\t    // ### ES6 Collection methods (ES6 Array and Map)\n\t\n\t    concat: function() {var values = SLICE$0.call(arguments, 0);\n\t      return reify(this, concatFactory(this, values));\n\t    },\n\t\n\t    includes: function(searchValue) {\n\t      return this.some(function(value ) {return is(value, searchValue)});\n\t    },\n\t\n\t    entries: function() {\n\t      return this.__iterator(ITERATE_ENTRIES);\n\t    },\n\t\n\t    every: function(predicate, context) {\n\t      assertNotInfinite(this.size);\n\t      var returnValue = true;\n\t      this.__iterate(function(v, k, c)  {\n\t        if (!predicate.call(context, v, k, c)) {\n\t          returnValue = false;\n\t          return false;\n\t        }\n\t      });\n\t      return returnValue;\n\t    },\n\t\n\t    filter: function(predicate, context) {\n\t      return reify(this, filterFactory(this, predicate, context, true));\n\t    },\n\t\n\t    find: function(predicate, context, notSetValue) {\n\t      var entry = this.findEntry(predicate, context);\n\t      return entry ? entry[1] : notSetValue;\n\t    },\n\t\n\t    findEntry: function(predicate, context) {\n\t      var found;\n\t      this.__iterate(function(v, k, c)  {\n\t        if (predicate.call(context, v, k, c)) {\n\t          found = [k, v];\n\t          return false;\n\t        }\n\t      });\n\t      return found;\n\t    },\n\t\n\t    findLastEntry: function(predicate, context) {\n\t      return this.toSeq().reverse().findEntry(predicate, context);\n\t    },\n\t\n\t    forEach: function(sideEffect, context) {\n\t      assertNotInfinite(this.size);\n\t      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n\t    },\n\t\n\t    join: function(separator) {\n\t      assertNotInfinite(this.size);\n\t      separator = separator !== undefined ? '' + separator : ',';\n\t      var joined = '';\n\t      var isFirst = true;\n\t      this.__iterate(function(v ) {\n\t        isFirst ? (isFirst = false) : (joined += separator);\n\t        joined += v !== null && v !== undefined ? v.toString() : '';\n\t      });\n\t      return joined;\n\t    },\n\t\n\t    keys: function() {\n\t      return this.__iterator(ITERATE_KEYS);\n\t    },\n\t\n\t    map: function(mapper, context) {\n\t      return reify(this, mapFactory(this, mapper, context));\n\t    },\n\t\n\t    reduce: function(reducer, initialReduction, context) {\n\t      assertNotInfinite(this.size);\n\t      var reduction;\n\t      var useFirst;\n\t      if (arguments.length < 2) {\n\t        useFirst = true;\n\t      } else {\n\t        reduction = initialReduction;\n\t      }\n\t      this.__iterate(function(v, k, c)  {\n\t        if (useFirst) {\n\t          useFirst = false;\n\t          reduction = v;\n\t        } else {\n\t          reduction = reducer.call(context, reduction, v, k, c);\n\t        }\n\t      });\n\t      return reduction;\n\t    },\n\t\n\t    reduceRight: function(reducer, initialReduction, context) {\n\t      var reversed = this.toKeyedSeq().reverse();\n\t      return reversed.reduce.apply(reversed, arguments);\n\t    },\n\t\n\t    reverse: function() {\n\t      return reify(this, reverseFactory(this, true));\n\t    },\n\t\n\t    slice: function(begin, end) {\n\t      return reify(this, sliceFactory(this, begin, end, true));\n\t    },\n\t\n\t    some: function(predicate, context) {\n\t      return !this.every(not(predicate), context);\n\t    },\n\t\n\t    sort: function(comparator) {\n\t      return reify(this, sortFactory(this, comparator));\n\t    },\n\t\n\t    values: function() {\n\t      return this.__iterator(ITERATE_VALUES);\n\t    },\n\t\n\t\n\t    // ### More sequential methods\n\t\n\t    butLast: function() {\n\t      return this.slice(0, -1);\n\t    },\n\t\n\t    isEmpty: function() {\n\t      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n\t    },\n\t\n\t    count: function(predicate, context) {\n\t      return ensureSize(\n\t        predicate ? this.toSeq().filter(predicate, context) : this\n\t      );\n\t    },\n\t\n\t    countBy: function(grouper, context) {\n\t      return countByFactory(this, grouper, context);\n\t    },\n\t\n\t    equals: function(other) {\n\t      return deepEqual(this, other);\n\t    },\n\t\n\t    entrySeq: function() {\n\t      var iterable = this;\n\t      if (iterable._cache) {\n\t        // We cache as an entries array, so we can just return the cache!\n\t        return new ArraySeq(iterable._cache);\n\t      }\n\t      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n\t      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n\t      return entriesSequence;\n\t    },\n\t\n\t    filterNot: function(predicate, context) {\n\t      return this.filter(not(predicate), context);\n\t    },\n\t\n\t    findLast: function(predicate, context, notSetValue) {\n\t      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n\t    },\n\t\n\t    first: function() {\n\t      return this.find(returnTrue);\n\t    },\n\t\n\t    flatMap: function(mapper, context) {\n\t      return reify(this, flatMapFactory(this, mapper, context));\n\t    },\n\t\n\t    flatten: function(depth) {\n\t      return reify(this, flattenFactory(this, depth, true));\n\t    },\n\t\n\t    fromEntrySeq: function() {\n\t      return new FromEntriesSequence(this);\n\t    },\n\t\n\t    get: function(searchKey, notSetValue) {\n\t      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n\t    },\n\t\n\t    getIn: function(searchKeyPath, notSetValue) {\n\t      var nested = this;\n\t      // Note: in an ES6 environment, we would prefer:\n\t      // for (var key of searchKeyPath) {\n\t      var iter = forceIterator(searchKeyPath);\n\t      var step;\n\t      while (!(step = iter.next()).done) {\n\t        var key = step.value;\n\t        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n\t        if (nested === NOT_SET) {\n\t          return notSetValue;\n\t        }\n\t      }\n\t      return nested;\n\t    },\n\t\n\t    groupBy: function(grouper, context) {\n\t      return groupByFactory(this, grouper, context);\n\t    },\n\t\n\t    has: function(searchKey) {\n\t      return this.get(searchKey, NOT_SET) !== NOT_SET;\n\t    },\n\t\n\t    hasIn: function(searchKeyPath) {\n\t      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n\t    },\n\t\n\t    isSubset: function(iter) {\n\t      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n\t      return this.every(function(value ) {return iter.includes(value)});\n\t    },\n\t\n\t    isSuperset: function(iter) {\n\t      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n\t      return iter.isSubset(this);\n\t    },\n\t\n\t    keySeq: function() {\n\t      return this.toSeq().map(keyMapper).toIndexedSeq();\n\t    },\n\t\n\t    last: function() {\n\t      return this.toSeq().reverse().first();\n\t    },\n\t\n\t    max: function(comparator) {\n\t      return maxFactory(this, comparator);\n\t    },\n\t\n\t    maxBy: function(mapper, comparator) {\n\t      return maxFactory(this, comparator, mapper);\n\t    },\n\t\n\t    min: function(comparator) {\n\t      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n\t    },\n\t\n\t    minBy: function(mapper, comparator) {\n\t      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n\t    },\n\t\n\t    rest: function() {\n\t      return this.slice(1);\n\t    },\n\t\n\t    skip: function(amount) {\n\t      return this.slice(Math.max(0, amount));\n\t    },\n\t\n\t    skipLast: function(amount) {\n\t      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n\t    },\n\t\n\t    skipWhile: function(predicate, context) {\n\t      return reify(this, skipWhileFactory(this, predicate, context, true));\n\t    },\n\t\n\t    skipUntil: function(predicate, context) {\n\t      return this.skipWhile(not(predicate), context);\n\t    },\n\t\n\t    sortBy: function(mapper, comparator) {\n\t      return reify(this, sortFactory(this, comparator, mapper));\n\t    },\n\t\n\t    take: function(amount) {\n\t      return this.slice(0, Math.max(0, amount));\n\t    },\n\t\n\t    takeLast: function(amount) {\n\t      return reify(this, this.toSeq().reverse().take(amount).reverse());\n\t    },\n\t\n\t    takeWhile: function(predicate, context) {\n\t      return reify(this, takeWhileFactory(this, predicate, context));\n\t    },\n\t\n\t    takeUntil: function(predicate, context) {\n\t      return this.takeWhile(not(predicate), context);\n\t    },\n\t\n\t    valueSeq: function() {\n\t      return this.toIndexedSeq();\n\t    },\n\t\n\t\n\t    // ### Hashable Object\n\t\n\t    hashCode: function() {\n\t      return this.__hash || (this.__hash = hashIterable(this));\n\t    }\n\t\n\t\n\t    // ### Internal\n\t\n\t    // abstract __iterate(fn, reverse)\n\t\n\t    // abstract __iterator(type, reverse)\n\t  });\n\t\n\t  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n\t  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n\t  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n\t  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\t\n\t  var IterablePrototype = Iterable.prototype;\n\t  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n\t  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n\t  IterablePrototype.__toJS = IterablePrototype.toArray;\n\t  IterablePrototype.__toStringMapper = quoteString;\n\t  IterablePrototype.inspect =\n\t  IterablePrototype.toSource = function() { return this.toString(); };\n\t  IterablePrototype.chain = IterablePrototype.flatMap;\n\t  IterablePrototype.contains = IterablePrototype.includes;\n\t\n\t  // Temporary warning about using length\n\t  (function () {\n\t    try {\n\t      Object.defineProperty(IterablePrototype, 'length', {\n\t        get: function () {\n\t          if (!Iterable.noLengthWarning) {\n\t            var stack;\n\t            try {\n\t              throw new Error();\n\t            } catch (error) {\n\t              stack = error.stack;\n\t            }\n\t            if (stack.indexOf('_wrapObject') === -1) {\n\t              console && console.warn && console.warn(\n\t                'iterable.length has been deprecated, '+\n\t                'use iterable.size or iterable.count(). '+\n\t                'This warning will become a silent error in a future version. ' +\n\t                stack\n\t              );\n\t              return this.size;\n\t            }\n\t          }\n\t        }\n\t      });\n\t    } catch (e) {}\n\t  })();\n\t\n\t\n\t\n\t  mixin(KeyedIterable, {\n\t\n\t    // ### More sequential methods\n\t\n\t    flip: function() {\n\t      return reify(this, flipFactory(this));\n\t    },\n\t\n\t    findKey: function(predicate, context) {\n\t      var entry = this.findEntry(predicate, context);\n\t      return entry && entry[0];\n\t    },\n\t\n\t    findLastKey: function(predicate, context) {\n\t      return this.toSeq().reverse().findKey(predicate, context);\n\t    },\n\t\n\t    keyOf: function(searchValue) {\n\t      return this.findKey(function(value ) {return is(value, searchValue)});\n\t    },\n\t\n\t    lastKeyOf: function(searchValue) {\n\t      return this.findLastKey(function(value ) {return is(value, searchValue)});\n\t    },\n\t\n\t    mapEntries: function(mapper, context) {var this$0 = this;\n\t      var iterations = 0;\n\t      return reify(this,\n\t        this.toSeq().map(\n\t          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n\t        ).fromEntrySeq()\n\t      );\n\t    },\n\t\n\t    mapKeys: function(mapper, context) {var this$0 = this;\n\t      return reify(this,\n\t        this.toSeq().flip().map(\n\t          function(k, v)  {return mapper.call(context, k, v, this$0)}\n\t        ).flip()\n\t      );\n\t    }\n\t\n\t  });\n\t\n\t  var KeyedIterablePrototype = KeyedIterable.prototype;\n\t  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n\t  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n\t  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n\t  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};\n\t\n\t\n\t\n\t  mixin(IndexedIterable, {\n\t\n\t    // ### Conversion to other types\n\t\n\t    toKeyedSeq: function() {\n\t      return new ToKeyedSequence(this, false);\n\t    },\n\t\n\t\n\t    // ### ES6 Collection methods (ES6 Array and Map)\n\t\n\t    filter: function(predicate, context) {\n\t      return reify(this, filterFactory(this, predicate, context, false));\n\t    },\n\t\n\t    findIndex: function(predicate, context) {\n\t      var entry = this.findEntry(predicate, context);\n\t      return entry ? entry[0] : -1;\n\t    },\n\t\n\t    indexOf: function(searchValue) {\n\t      var key = this.toKeyedSeq().keyOf(searchValue);\n\t      return key === undefined ? -1 : key;\n\t    },\n\t\n\t    lastIndexOf: function(searchValue) {\n\t      var key = this.toKeyedSeq().reverse().keyOf(searchValue);\n\t      return key === undefined ? -1 : key;\n\t\n\t      // var index =\n\t      // return this.toSeq().reverse().indexOf(searchValue);\n\t    },\n\t\n\t    reverse: function() {\n\t      return reify(this, reverseFactory(this, false));\n\t    },\n\t\n\t    slice: function(begin, end) {\n\t      return reify(this, sliceFactory(this, begin, end, false));\n\t    },\n\t\n\t    splice: function(index, removeNum /*, ...values*/) {\n\t      var numArgs = arguments.length;\n\t      removeNum = Math.max(removeNum | 0, 0);\n\t      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n\t        return this;\n\t      }\n\t      // If index is negative, it should resolve relative to the size of the\n\t      // collection. However size may be expensive to compute if not cached, so\n\t      // only call count() if the number is in fact negative.\n\t      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n\t      var spliced = this.slice(0, index);\n\t      return reify(\n\t        this,\n\t        numArgs === 1 ?\n\t          spliced :\n\t          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n\t      );\n\t    },\n\t\n\t\n\t    // ### More collection methods\n\t\n\t    findLastIndex: function(predicate, context) {\n\t      var key = this.toKeyedSeq().findLastKey(predicate, context);\n\t      return key === undefined ? -1 : key;\n\t    },\n\t\n\t    first: function() {\n\t      return this.get(0);\n\t    },\n\t\n\t    flatten: function(depth) {\n\t      return reify(this, flattenFactory(this, depth, false));\n\t    },\n\t\n\t    get: function(index, notSetValue) {\n\t      index = wrapIndex(this, index);\n\t      return (index < 0 || (this.size === Infinity ||\n\t          (this.size !== undefined && index > this.size))) ?\n\t        notSetValue :\n\t        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n\t    },\n\t\n\t    has: function(index) {\n\t      index = wrapIndex(this, index);\n\t      return index >= 0 && (this.size !== undefined ?\n\t        this.size === Infinity || index < this.size :\n\t        this.indexOf(index) !== -1\n\t      );\n\t    },\n\t\n\t    interpose: function(separator) {\n\t      return reify(this, interposeFactory(this, separator));\n\t    },\n\t\n\t    interleave: function(/*...iterables*/) {\n\t      var iterables = [this].concat(arrCopy(arguments));\n\t      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n\t      var interleaved = zipped.flatten(true);\n\t      if (zipped.size) {\n\t        interleaved.size = zipped.size * iterables.length;\n\t      }\n\t      return reify(this, interleaved);\n\t    },\n\t\n\t    last: function() {\n\t      return this.get(-1);\n\t    },\n\t\n\t    skipWhile: function(predicate, context) {\n\t      return reify(this, skipWhileFactory(this, predicate, context, false));\n\t    },\n\t\n\t    zip: function(/*, ...iterables */) {\n\t      var iterables = [this].concat(arrCopy(arguments));\n\t      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n\t    },\n\t\n\t    zipWith: function(zipper/*, ...iterables */) {\n\t      var iterables = arrCopy(arguments);\n\t      iterables[0] = this;\n\t      return reify(this, zipWithFactory(this, zipper, iterables));\n\t    }\n\t\n\t  });\n\t\n\t  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n\t  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\t\n\t\n\t\n\t  mixin(SetIterable, {\n\t\n\t    // ### ES6 Collection methods (ES6 Array and Map)\n\t\n\t    get: function(value, notSetValue) {\n\t      return this.has(value) ? value : notSetValue;\n\t    },\n\t\n\t    includes: function(value) {\n\t      return this.has(value);\n\t    },\n\t\n\t\n\t    // ### More sequential methods\n\t\n\t    keySeq: function() {\n\t      return this.valueSeq();\n\t    }\n\t\n\t  });\n\t\n\t  SetIterable.prototype.has = IterablePrototype.includes;\n\t\n\t\n\t  // Mixin subclasses\n\t\n\t  mixin(KeyedSeq, KeyedIterable.prototype);\n\t  mixin(IndexedSeq, IndexedIterable.prototype);\n\t  mixin(SetSeq, SetIterable.prototype);\n\t\n\t  mixin(KeyedCollection, KeyedIterable.prototype);\n\t  mixin(IndexedCollection, IndexedIterable.prototype);\n\t  mixin(SetCollection, SetIterable.prototype);\n\t\n\t\n\t  // #pragma Helper functions\n\t\n\t  function keyMapper(v, k) {\n\t    return k;\n\t  }\n\t\n\t  function entryMapper(v, k) {\n\t    return [k, v];\n\t  }\n\t\n\t  function not(predicate) {\n\t    return function() {\n\t      return !predicate.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  function neg(predicate) {\n\t    return function() {\n\t      return -predicate.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  function quoteString(value) {\n\t    return typeof value === 'string' ? JSON.stringify(value) : value;\n\t  }\n\t\n\t  function defaultZipper() {\n\t    return arrCopy(arguments);\n\t  }\n\t\n\t  function defaultNegComparator(a, b) {\n\t    return a < b ? 1 : a > b ? -1 : 0;\n\t  }\n\t\n\t  function hashIterable(iterable) {\n\t    if (iterable.size === Infinity) {\n\t      return 0;\n\t    }\n\t    var ordered = isOrdered(iterable);\n\t    var keyed = isKeyed(iterable);\n\t    var h = ordered ? 1 : 0;\n\t    var size = iterable.__iterate(\n\t      keyed ?\n\t        ordered ?\n\t          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n\t          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n\t        ordered ?\n\t          function(v ) { h = 31 * h + hash(v) | 0; } :\n\t          function(v ) { h = h + hash(v) | 0; }\n\t    );\n\t    return murmurHashOfSize(size, h);\n\t  }\n\t\n\t  function murmurHashOfSize(size, h) {\n\t    h = imul(h, 0xCC9E2D51);\n\t    h = imul(h << 15 | h >>> -15, 0x1B873593);\n\t    h = imul(h << 13 | h >>> -13, 5);\n\t    h = (h + 0xE6546B64 | 0) ^ size;\n\t    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n\t    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n\t    h = smi(h ^ h >>> 16);\n\t    return h;\n\t  }\n\t\n\t  function hashMerge(a, b) {\n\t    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n\t  }\n\t\n\t  var Immutable = {\n\t\n\t    Iterable: Iterable,\n\t\n\t    Seq: Seq,\n\t    Collection: Collection,\n\t    Map: Map,\n\t    OrderedMap: OrderedMap,\n\t    List: List,\n\t    Stack: Stack,\n\t    Set: Set,\n\t    OrderedSet: OrderedSet,\n\t\n\t    Record: Record,\n\t    Range: Range,\n\t    Repeat: Repeat,\n\t\n\t    is: is,\n\t    fromJS: fromJS\n\t\n\t  };\n\t\n\t  return Immutable;\n\t\n\t}));\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t// istanbul ignore next\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tvar _lodash = __webpack_require__(3);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar extend = function extend() {\n\t\tfor (var _len = arguments.length, options = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\toptions[_key] = arguments[_key];\n\t\t}\n\t\n\t\tvar parent = this;\n\t\tvar store = undefined; // placeholder for instance constructor\n\t\tvar Ctor = function Ctor() {}; // placeholder ctor function used to insert level in prototype chain\n\t\n\t\t// First - separate mixins from prototype props\n\t\tvar mixins = [];\n\t\tvar _iteratorNormalCompletion = true;\n\t\tvar _didIteratorError = false;\n\t\tvar _iteratorError = undefined;\n\t\n\t\ttry {\n\t\t\tfor (var _iterator = options[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\tvar opt = _step.value;\n\t\n\t\t\t\tmixins.push(_lodash2[\"default\"].pick(opt, [\"handlers\", \"state\"]));\n\t\t\t\tdelete opt.handlers;\n\t\t\t\tdelete opt.state;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError = true;\n\t\t\t_iteratorError = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n\t\t\t\t\t_iterator[\"return\"]();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tvar protoProps = _lodash2[\"default\"].merge.apply(this, [{}].concat(options));\n\t\n\t\t// The constructor function for the new subclass is either defined by you\n\t\t// (the \"constructor\" property in your `extend` definition), or defaulted\n\t\t// by us to simply call the parent's constructor.\n\t\tif (protoProps && protoProps.hasOwnProperty(\"constructor\")) {\n\t\t\tstore = protoProps.constructor;\n\t\t} else {\n\t\t\tstore = function () {\n\t\t\t\tvar args = Array.from(arguments);\n\t\t\t\targs[0] = args[0] || {};\n\t\t\t\tparent.apply(this, store.mixins.concat(args));\n\t\t\t};\n\t\t}\n\t\n\t\tstore.mixins = mixins;\n\t\n\t\t// Inherit class (static) properties from parent.\n\t\t_lodash2[\"default\"].merge(store, parent);\n\t\n\t\t// Set the prototype chain to inherit from `parent`, without calling\n\t\t// `parent`'s constructor function.\n\t\tCtor.prototype = parent.prototype;\n\t\tstore.prototype = new Ctor();\n\t\n\t\t// Add prototype properties (instance properties) to the subclass,\n\t\t// if supplied.\n\t\tif (protoProps) {\n\t\t\t_lodash2[\"default\"].extend(store.prototype, protoProps);\n\t\t}\n\t\n\t\t// Correctly set child's `prototype.constructor`.\n\t\tstore.prototype.constructor = store;\n\t\n\t\t// Set a convenience property in case the parent's prototype is needed later.\n\t\tstore.__super__ = parent.prototype;\n\t\treturn store;\n\t};\n\texports.extend = extend;\n\n/***/ }\n/******/ ])\n});\n;\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c503dffd2e08f5d7b463\n **/","\"use strict\";\n\n/* istanbul ignore next */\nif ( !( typeof global === \"undefined\" ? window : global )._babelPolyfill ) {\n\tthrow new Error( \"You must include the babel polyfill on your page before lux is loaded. See https://babeljs.io/docs/usage/polyfill/ for more details.\" );\n}\n\nimport utils from \"./utils\";\n\nimport {\n\tgetActionGroup,\n\tcustomActionCreator,\n\taddToActionGroup,\n\tactions\n} from \"./actions\";\n\nimport {\n\tcomponent,\n\tcontrollerView,\n\tinitReact,\n\tmixin,\n\treactMixin,\n\tactionListener,\n\tactionCreator,\n\tactionCreatorListener,\n\tpublishAction\n} from \"./mixins\";\n\nimport { Store, stores, removeStore } from \"./store\";\nimport { extend } from \"./extend\";\nStore.extend = extend;\n\nimport dispatcher from \"./dispatcher\";\n\nexport default {\n\tactions,\n\tpublishAction,\n\taddToActionGroup,\n\tcomponent,\n\tcontrollerView,\n\tcustomActionCreator,\n\tdispatcher,\n\tgetActionGroup,\n\tactionCreatorListener,\n\tactionCreator,\n\tactionListener,\n\tmixin,\n\tinitReact,\n\treactMixin,\n\tremoveStore,\n\tStore,\n\tstores,\n\tutils\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lux.js\n **/","\"use strict\";\n\nexport function ensureLuxProp( context ) {\n\tconst __lux = context.__lux = ( context.__lux || {} );\n\t/*eslint-disable */\n\tconst cleanup = __lux.cleanup = ( __lux.cleanup || [] );\n\tconst subscriptions = __lux.subscriptions = ( __lux.subscriptions || {} );\n\t/*eslint-enable */\n\treturn __lux;\n}\n\nexport function* entries( obj ) {\n\tif ( [ \"object\", \"function\" ].indexOf( typeof obj ) === -1 ) {\n\t\tobj = {};\n\t}\n\tfor ( let k of Object.keys( obj ) ) {\n\t\tyield [ k, obj[ k ] ];\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils.js\n **/","import _ from \"lodash\";\nimport { entries } from \"./utils\";\nimport { actionChannel } from \"./bus\";\nexport const actions = Object.create( null );\nexport const actionGroups = Object.create( null );\n\nexport function generateActionCreator( actionList ) {\n\tactionList = ( typeof actionList === \"string\" ) ? [ actionList ] : actionList;\n\tactionList.forEach( function( action ) {\n\t\tif ( !actions[ action ] ) {\n\t\t\tactions[ action ] = function() {\n\t\t\t\tvar args = Array.from( arguments );\n\t\t\t\tactionChannel.publish( {\n\t\t\t\t\ttopic: `execute.${action}`,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tactionType: action,\n\t\t\t\t\t\tactionArgs: args\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t};\n\t\t}\n\t} );\n}\n\nexport function getActionGroup( group ) {\n\tif ( actionGroups[ group ] ) {\n\t\treturn _.pick( actions, actionGroups[ group ] );\n\t} else {\n\t\tthrow new Error( `There is no action group named '${group}'` );\n\t}\n}\n\nexport function getGroupsWithAction( actionName ) {\n\tconst groups = [];\n\tfor ( var [ group, list ] of entries( actionGroups ) ) {\n\t\tif ( list.indexOf( actionName ) >= 0 ) {\n\t\t\tgroups.push( group );\n\t\t}\n\t}\n\treturn groups;\n}\n\nexport function customActionCreator( action ) {\n\tObject.assign( actions, action );\n}\n\nexport function addToActionGroup( groupName, actionList ) {\n\tlet group = actionGroups[ groupName ];\n\tif ( !group ) {\n\t\tgroup = actionGroups[ groupName ] = [];\n\t}\n\tactionList = typeof actionList === \"string\" ? [ actionList ] : actionList;\n\tconst diff = _.difference( actionList, Object.keys( actions ) );\n\tif ( diff.length ) {\n\t\tthrow new Error( `The following actions do not exist: ${diff.join( \", \" )}` );\n\t}\n\tactionList.forEach( function( action ) {\n\t\tif ( group.indexOf( action ) === -1 ) {\n\t\t\tgroup.push( action );\n\t\t}\n\t} );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/actions.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"_\",\"commonjs\":\"lodash\",\"commonjs2\":\"lodash\",\"amd\":\"lodash\"}\n ** module id = 3\n ** module chunks = 0\n **/","import postal from \"postal\";\n\nconst actionChannel = postal.channel( \"lux.action\" );\nconst storeChannel = postal.channel( \"lux.store\" );\nconst dispatcherChannel = postal.channel( \"lux.dispatcher\" );\n\nexport {\n\tactionChannel,\n\tstoreChannel,\n\tdispatcherChannel,\n\tpostal\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/bus.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"postal\"\n ** module id = 5\n ** module chunks = 0\n **/","\"use strict\";\n\nimport { storeMixin, storeReactMixin } from \"./store\";\nimport { actionCreatorMixin, actionCreatorReactMixin, publishAction } from \"./actionCreator\";\nimport { actionListenerMixin } from \"./actionListener\";\n\nlet React;\n\nfunction initReact( userReact ) {\n\tReact = userReact;\n\treturn this;\n}\n\nfunction ensureReact( methodName ) {\n\tif ( typeof React === \"undefined\" ) {\n\t\tthrow new Error( \"You attempted to use lux.\" + methodName + \" without first calling lux.initReact( React );\" );\n\t}\n}\n\nfunction controllerView( options ) {\n\tensureReact( \"controllerView\" );\n\tconst opt = {\n\t\tmixins: [ storeReactMixin, actionCreatorReactMixin ].concat( options.mixins || [] )\n\t};\n\tdelete options.mixins;\n\treturn React.createClass( Object.assign( opt, options ) );\n}\n\nfunction component( options ) {\n\tensureReact( \"component\" );\n\tconst opt = {\n\t\tmixins: [ actionCreatorReactMixin ].concat( options.mixins || [] )\n\t};\n\tdelete options.mixins;\n\treturn React.createClass( Object.assign( opt, options ) );\n}\n\n/*********************************************\n*   Generalized Mixin Behavior for non-lux   *\n**********************************************/\nconst luxMixinCleanup = function() {\n\tthis.__lux.cleanup.forEach( ( method ) => method.call( this ) );\n\tthis.__lux.cleanup = undefined;\n\tdelete this.__lux.cleanup;\n};\n\nfunction mixin( context, ...mixins ) {\n\tif ( mixins.length === 0 ) {\n\t\tmixins = [ storeMixin, actionCreatorMixin ];\n\t}\n\n\tmixins.forEach( ( mxn ) => {\n\t\tif ( typeof mxn === \"function\" ) {\n\t\t\tmxn = mxn();\n\t\t}\n\t\tif ( mxn.mixin ) {\n\t\t\tObject.assign( context, mxn.mixin );\n\t\t}\n\t\tif ( typeof mxn.setup !== \"function\" ) {\n\t\t\tthrow new Error( \"Lux mixins should have a setup method. Did you perhaps pass your mixins ahead of your target instance?\" );\n\t\t}\n\t\tmxn.setup.call( context );\n\t\tif ( mxn.teardown ) {\n\t\t\tcontext.__lux.cleanup.push( mxn.teardown );\n\t\t}\n\t} );\n\tcontext.luxCleanup = luxMixinCleanup;\n\treturn context;\n}\n\nmixin.store = storeMixin;\nmixin.actionCreator = actionCreatorMixin;\nmixin.actionListener = actionListenerMixin;\n\nconst reactMixin = {\n\tactionCreator: actionCreatorReactMixin,\n\tstore: storeReactMixin\n};\n\nfunction actionListener( target ) {\n\treturn mixin( target, actionListenerMixin );\n}\n\nfunction actionCreator( target ) {\n\treturn mixin( target, actionCreatorMixin );\n}\n\nfunction actionCreatorListener( target ) {\n\treturn actionCreator( actionListener( target ) );\n}\n\nexport {\n\tcomponent,\n\tcontrollerView,\n\tinitReact,\n\tmixin,\n\treactMixin,\n\tactionListener,\n\tactionCreator,\n\tactionCreatorListener,\n\tpublishAction\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/mixins/index.js\n **/","\"use strict\";\n/*********************************************\n*                 Store Mixin                *\n**********************************************/\nimport { storeChannel, dispatcherChannel } from \"../bus\";\nimport { ensureLuxProp, entries } from \"../utils\";\n\nfunction gateKeeper( store, data ) {\n\tconst payload = {};\n\tpayload[ store ] = true;\n\tconst __lux = this.__lux;\n\n\tconst found = __lux.waitFor.indexOf( store );\n\n\tif ( found > -1 ) {\n\t\t__lux.waitFor.splice( found, 1 );\n\t\t__lux.heardFrom.push( payload );\n\n\t\tif ( __lux.waitFor.length === 0 ) {\n\t\t\t__lux.heardFrom = [];\n\t\t\tthis.stores.onChange.call( this, payload );\n\t\t}\n\t} else {\n\t\tthis.stores.onChange.call( this, payload );\n\t}\n}\n\nfunction handlePreNotify( data ) {\n\tthis.__lux.waitFor = data.stores.filter(\n\t\t( item ) => this.stores.listenTo.indexOf( item ) > -1\n\t);\n}\n\nexport var storeMixin = {\n\tsetup: function() {\n\t\tconst __lux = ensureLuxProp( this );\n\t\tconst stores = this.stores = ( this.stores || {} );\n\n\t\tif ( !stores.listenTo || !stores.listenTo.length ) {\n\t\t\tthrow new Error( `listenTo must contain at least one store namespace` );\n\t\t}\n\n\t\tconst listenTo = typeof stores.listenTo === \"string\" ? [ stores.listenTo ] : stores.listenTo;\n\n\t\tif ( !stores.onChange ) {\n\t\t\tthrow new Error( `A component was told to listen to the following store(s): ${listenTo} but no onChange handler was implemented` );\n\t\t}\n\n\t\t__lux.waitFor = [];\n\t\t__lux.heardFrom = [];\n\n\t\tlistenTo.forEach( ( store ) => {\n\t\t\t__lux.subscriptions[ `${store}.changed` ] = storeChannel.subscribe( `${store}.changed`, () => gateKeeper.call( this, store ) );\n\t\t} );\n\n\t\t__lux.subscriptions.prenotify = dispatcherChannel.subscribe( \"prenotify\", ( data ) => handlePreNotify.call( this, data ) );\n\t},\n\tteardown: function() {\n\t\tfor ( let [ key, sub ] of entries( this.__lux.subscriptions ) ) {\n\t\t\tlet split;\n\t\t\tif ( key === \"prenotify\" || ( ( split = key.split( \".\" ) ) && split.pop() === \"changed\" ) ) {\n\t\t\t\tsub.unsubscribe();\n\t\t\t}\n\t\t}\n\t},\n\tmixin: {}\n};\n\nexport const storeReactMixin = {\n\tcomponentWillMount: storeMixin.setup,\n\tcomponentWillUnmount: storeMixin.teardown\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/mixins/store.js\n **/","\"use strict\";\nimport { entries } from \"../utils\";\nimport { getActionGroup, actions } from \"../actions\";\n/*********************************************\n*           Action Creator Mixin          *\n**********************************************/\n\nexport function publishAction( action, ...args ) {\n\tif ( actions[ action ] ) {\n\t\tactions[ action ]( ...args );\n\t} else {\n\t\tthrow new Error( `There is no action named '${action}'` );\n\t}\n}\n\nexport const actionCreatorMixin = {\n\tsetup: function() {\n\t\tthis.getActionGroup = this.getActionGroup || [];\n\t\tthis.getActions = this.getActions || [];\n\n\t\tif ( typeof this.getActionGroup === \"string\" ) {\n\t\t\tthis.getActionGroup = [ this.getActionGroup ];\n\t\t}\n\n\t\tif ( typeof this.getActions === \"string\" ) {\n\t\t\tthis.getActions = [ this.getActions ];\n\t\t}\n\n\t\tconst addActionIfNotPresent = ( k, v ) => {\n\t\t\tif ( !this[ k ] ) {\n\t\t\t\tthis[ k ] = v;\n\t\t\t}\n\t\t};\n\t\tthis.getActionGroup.forEach( ( group ) => {\n\t\t\tfor ( let [ k, v ] of entries( getActionGroup( group ) ) ) {\n\t\t\t\taddActionIfNotPresent( k, v );\n\t\t\t}\n\t\t} );\n\n\t\tif ( this.getActions.length ) {\n\t\t\tthis.getActions.forEach( function( key ) {\n\t\t\t\taddActionIfNotPresent( key, function() {\n\t\t\t\t\tpublishAction( key, ...arguments );\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\t},\n\tmixin: {\n\t\tpublishAction: publishAction\n\t}\n};\n\nexport const actionCreatorReactMixin = {\n\tcomponentWillMount: actionCreatorMixin.setup,\n\tpublishAction: publishAction\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/mixins/actionCreator.js\n **/","\"use strict\";\n/*********************************************\n*            Action Listener Mixin           *\n**********************************************/\nimport { actionChannel } from \"../bus\";\nimport { ensureLuxProp } from \"../utils\";\nimport { generateActionCreator, addToActionGroup } from \"../actions\";\nexport function actionListenerMixin( { handlers, handlerFn, context, channel, topic } = {} ) {\n\treturn {\n\t\tsetup() {\n\t\t\tcontext = context || this;\n\t\t\tconst __lux = ensureLuxProp( context );\n\t\t\tconst subs = __lux.subscriptions;\n\t\t\thandlers = handlers || context.handlers;\n\t\t\tchannel = channel || actionChannel;\n\t\t\ttopic = topic || \"execute.*\";\n\t\t\thandlerFn = handlerFn || ( ( data, env ) => {\n\t\t\t\tconst handler = handlers[ data.actionType ];\n\t\t\t\tif ( handler ) {\n\t\t\t\t\thandler.apply( context, data.actionArgs );\n\t\t\t\t}\n\t\t\t} );\n\t\t\tif ( !handlers || !Object.keys( handlers ).length ) {\n\t\t\t\tthrow new Error( \"You must have at least one action handler in the handlers property\" );\n\t\t\t} else if ( subs && subs.actionListener ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsubs.actionListener = channel.subscribe( topic, handlerFn ).context( context );\n\t\t\tconst handlerKeys = Object.keys( handlers );\n\t\t\tgenerateActionCreator( handlerKeys );\n\t\t\tif ( context.namespace ) {\n\t\t\t\taddToActionGroup( context.namespace, handlerKeys );\n\t\t\t}\n\t\t},\n\t\tteardown() {\n\t\t\tthis.__lux.subscriptions.actionListener.unsubscribe();\n\t\t}\n\t};\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/mixins/actionListener.js\n **/","import { storeChannel, dispatcherChannel } from \"./bus\";\nimport { entries } from \"./utils\";\nimport dispatcher from \"./dispatcher\";\nimport _ from \"lodash\";\nimport { mixin } from \"./mixins\";\nimport { Iterable } from \"immutable\";\nexport const stores = {};\n\nfunction buildActionList( handlers ) {\n\tconst actionList = [];\n\tfor ( let [ key, handler ] of entries( handlers ) ) {\n\t\tactionList.push( {\n\t\t\tactionType: key,\n\t\t\twaitFor: handler.waitFor || []\n\t\t} );\n\t}\n\treturn actionList;\n}\n\nfunction ensureStoreOptions( options, handlers, store ) {\n\tconst namespace = ( options && options.namespace ) || store.namespace;\n\tif ( namespace in stores ) {\n\t\tthrow new Error( `The store namespace \"${namespace}\" already exists.` );\n\t}\n\tif ( !namespace ) {\n\t\tthrow new Error( \"A lux store must have a namespace value provided\" );\n\t}\n\tif ( !handlers || !Object.keys( handlers ).length ) {\n\t\tthrow new Error( \"A lux store must have action handler methods provided\" );\n\t}\n}\n\nfunction getHandlerObject( key, listeners ) {\n\treturn {\n\t\twaitFor: [],\n\t\thandler: function() {\n\t\t\tlet changed = 0;\n\t\t\tconst args = Array.from( arguments );\n\t\t\tlisteners[ key ].forEach( function( listener ) {\n\t\t\t\tchanged += ( listener.apply( this, args ) === false ? 0 : 1 );\n\t\t\t}.bind( this ) );\n\t\t\treturn changed > 0;\n\t\t}\n\t};\n}\n\nfunction updateWaitFor( source, handlerObject ) {\n\tif ( source.waitFor ) {\n\t\tsource.waitFor.forEach( function( dep ) {\n\t\t\tif ( handlerObject.waitFor.indexOf( dep ) === -1 ) {\n\t\t\t\thandlerObject.waitFor.push( dep );\n\t\t\t}\n\t\t} );\n\t}\n}\n\nfunction addListeners( listeners, key, handler ) {\n\tlisteners[ key ] = listeners[ key ] || [];\n\tlisteners[ key ].push( handler.handler || handler );\n}\n\nfunction customMerge( object, source ) {\n\tlet props = _.keys( source ) || source;\n\n\t_.forEach( props, function( srcValue, key ) {\n\t\tkey = srcValue;\n\t\tsrcValue = source[key];\n\n\t\tif ( Iterable.isIterable( srcValue ) ) {\n\t\t\tlet objVal = object[key] || {};\n\t\t\tif ( _.isEmpty( objVal ) ) {\n\t\t\t\tobject[key] = srcValue;\n\t\t\t}\n\t\t} else if ( _.isObject( srcValue ) ) {\n\t\t\tobject[key] = _.merge( object[key] || {}, srcValue );\n\t\t} else {\n\t\t\tobject[key] = srcValue;\n\t\t}\n\t} );\n\n\treturn object;\n}\n\nfunction processStoreArgs( ...options ) {\n\tconst listeners = {};\n\tconst handlers = {};\n\tlet state = {};\n\tconst otherOpts = {};\n\toptions.forEach( function( o ) {\n\t\tlet opt;\n\t\tif ( o ) {\n\t\t\topt = _.clone( o );\n\n\t\t\tstate = customMerge( state, opt.state );\n\n\t\t\tif ( opt.handlers ) {\n\t\t\t\tObject.keys( opt.handlers ).forEach( function( key ) {\n\t\t\t\t\tlet handler = opt.handlers[ key ];\n\t\t\t\t\t// set up the actual handler method that will be executed\n\t\t\t\t\t// as the store handles a dispatched action\n\t\t\t\t\thandlers[ key ] = handlers[ key ] || getHandlerObject( key, listeners );\n\t\t\t\t\t// ensure that the handler definition has a list of all stores\n\t\t\t\t\t// being waited upon\n\t\t\t\t\tupdateWaitFor( handler, handlers[ key ] );\n\t\t\t\t\t// Add the original handler method(s) to the listeners queue\n\t\t\t\t\taddListeners( listeners, key, handler );\n\t\t\t\t} );\n\t\t\t}\n\t\t\tdelete opt.handlers;\n\t\t\tdelete opt.state;\n\n\t\t\t_.merge( otherOpts, opt );\n\t\t}\n\t} );\n\treturn [ state, handlers, otherOpts ];\n}\n\nexport class Store {\n\n\tconstructor( ...opt ) {\n\t\tlet [ state, handlers, options ] = processStoreArgs( ...opt );\n\t\tensureStoreOptions( options, handlers, this );\n\t\tconst namespace = options.namespace || this.namespace;\n\t\tObject.assign( this, options );\n\t\tstores[ namespace ] = this;\n\t\tlet inDispatch = false;\n\t\tthis.hasChanged = false;\n\n\t\tthis.getState = function() {\n\t\t\treturn state;\n\t\t};\n\n\t\tthis.setState = function( newState ) {\n\t\t\tif ( !inDispatch ) {\n\t\t\t\tthrow new Error( \"setState can only be called during a dispatch cycle from a store action handler.\" );\n\t\t\t}\n\t\t\tstate = Object.assign( state, newState );\n\t\t};\n\n\t\tthis.replaceState = function( newState ) {\n\t\t\tif ( !inDispatch ) {\n\t\t\t\tthrow new Error( \"replaceState can only be called during a dispatch cycle from a store action handler.\" );\n\t\t\t}\n\t\t\t// we preserve the underlying state ref, but clear it\n\t\t\tObject.keys( state ).forEach( function( key ) {\n\t\t\t\tdelete state[ key ];\n\t\t\t} );\n\t\t\tstate = Object.assign( state, newState );\n\t\t};\n\n\t\tthis.flush = function flush() {\n\t\t\tinDispatch = false;\n\t\t\tif ( this.hasChanged ) {\n\t\t\t\tthis.hasChanged = false;\n\t\t\t\tstoreChannel.publish( `${this.namespace}.changed` );\n\t\t\t}\n\t\t};\n\n\t\tmixin( this, mixin.actionListener( {\n\t\t\tcontext: this,\n\t\t\tchannel: dispatcherChannel,\n\t\t\ttopic: `${namespace}.handle.*`,\n\t\t\thandlers: handlers,\n\t\t\thandlerFn: function( data ) {\n\t\t\t\tif ( handlers.hasOwnProperty( data.actionType ) ) {\n\t\t\t\t\tinDispatch = true;\n\t\t\t\t\tvar res = handlers[ data.actionType ].handler.apply( this, data.actionArgs.concat( data.deps ) );\n\t\t\t\t\tthis.hasChanged = ( res === false ) ? false : true;\n\t\t\t\t\tdispatcherChannel.publish(\n\t\t\t\t\t\t`${this.namespace}.handled.${data.actionType}`,\n\t\t\t\t\t\t{ hasChanged: this.hasChanged, namespace: this.namespace }\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}.bind( this )\n\t\t} ) );\n\n\t\tthis.__subscription = {\n\t\t\tnotify: dispatcherChannel.subscribe( `notify`, () => this.flush() )\n\t\t\t\t\t.constraint( () => inDispatch )\n\t\t};\n\n\t\tdispatcher.registerStore(\n\t\t\t{\n\t\t\t\tnamespace,\n\t\t\t\tactions: buildActionList( handlers )\n\t\t\t}\n\t\t);\n\t}\n\n\t// Need to build in behavior to remove this store\n\t// from the dispatcher's actionMap as well!\n\tdispose() {\n\t\t/*eslint-disable */\n\t\tfor ( let [ k, subscription ] of entries( this.__subscription ) ) {\n\t\t\tsubscription.unsubscribe();\n\t\t}\n\t\t/*eslint-enable */\n\t\tdelete stores[ this.namespace ];\n\t\tdispatcher.removeStore( this.namespace );\n\t\tthis.luxCleanup();\n\t}\n}\n\nexport function removeStore( namespace ) {\n\tstores[ namespace ].dispose();\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/store.js\n **/","\"use strict\";\nimport _ from \"lodash\";\nimport { dispatcherChannel, actionChannel } from \"./bus\";\nimport { entries } from \"./utils\";\nimport machina from \"machina\";\n\nfunction calculateGen( store, lookup, gen, actionType, namespaces ) {\n\tlet calcdGen = gen;\n\tconst _namespaces = namespaces || [];\n\tif ( _namespaces.indexOf( store.namespace ) > -1 ) {\n\t\tthrow new Error( `Circular dependency detected for the \"${store.namespace}\" store when participating in the \"${actionType}\" action.` );\n\t}\n\tif ( store.waitFor && store.waitFor.length ) {\n\t\tstore.waitFor.forEach( function( dep ) {\n\t\t\tconst depStore = lookup[ dep ];\n\t\t\tif ( depStore ) {\n\t\t\t\t_namespaces.push( store.namespace );\n\t\t\t\tconst thisGen = calculateGen( depStore, lookup, gen + 1, actionType, _namespaces );\n\t\t\t\tif ( thisGen > calcdGen ) {\n\t\t\t\t\tcalcdGen = thisGen;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.warn( `The \"${actionType}\" action in the \"${store.namespace}\" store waits for \"${dep}\" but a store with that namespace does not participate in this action.` );\n\t\t\t}\n\t\t} );\n\t}\n\treturn calcdGen;\n}\n\nfunction buildGenerations( stores, actionType ) {\n\tconst tree = [];\n\tconst lookup = {};\n\tstores.forEach( ( store ) => lookup[ store.namespace ] = store );\n\tstores.forEach( ( store ) => store.gen = calculateGen( store, lookup, 0, actionType ) );\n\t/*eslint-disable */\n\tfor ( let [ key, item ] of entries( lookup ) ) {\n\t\ttree[ item.gen ] = tree[ item.gen ] || [];\n\t\ttree[ item.gen ].push( item );\n\t}\n\t/*eslint-enable */\n\treturn tree;\n}\n\nfunction processGeneration( generation, action ) {\n\tgeneration.map( ( store ) => {\n\t\tconst data = Object.assign( {\n\t\t\tdeps: _.pick( this.stores, store.waitFor )\n\t\t}, action );\n\t\tdispatcherChannel.publish(\n\t\t\t`${store.namespace}.handle.${action.actionType}`,\n\t\t\tdata\n\t\t);\n\t} );\n}\n\nclass Dispatcher extends machina.BehavioralFsm {\n\tconstructor() {\n\t\tsuper( {\n\t\t\tinitialState: \"ready\",\n\t\t\tactionMap: {},\n\t\t\tstates: {\n\t\t\t\tready: {\n\t\t\t\t\t_onEnter: function() {\n\t\t\t\t\t\tthis.actionContext = undefined;\n\t\t\t\t\t},\n\t\t\t\t\t\"action.dispatch\": \"dispatching\"\n\t\t\t\t},\n\t\t\t\tdispatching: {\n\t\t\t\t\t_onEnter: function( luxAction ) {\n\t\t\t\t\t\tthis.actionContext = luxAction;\n\t\t\t\t\t\tif ( luxAction.generations.length ) {\n\t\t\t\t\t\t\tfor ( var generation of luxAction.generations ) {\n\t\t\t\t\t\t\t\tprocessGeneration.call( luxAction, generation, luxAction.action );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.transition( luxAction, \"notifying\" );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.transition( luxAction, \"nothandled\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"action.handled\": function( luxAction, data ) {\n\t\t\t\t\t\tif ( data.hasChanged ) {\n\t\t\t\t\t\t\tluxAction.updated.push( data.namespace );\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t_onExit: function( luxAction ) {\n\t\t\t\t\t\tif ( luxAction.updated.length ) {\n\t\t\t\t\t\t\tdispatcherChannel.publish( \"prenotify\", { stores: luxAction.updated } );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tnotifying: {\n\t\t\t\t\t_onEnter: function( luxAction ) {\n\t\t\t\t\t\tdispatcherChannel.publish( \"notify\", {\n\t\t\t\t\t\t\taction: luxAction.action\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tnothandled: {}\n\t\t\t},\n\t\t\tgetStoresHandling( actionType ) {\n\t\t\t\tconst stores = this.actionMap[ actionType ] || [];\n\t\t\t\treturn {\n\t\t\t\t\tstores,\n\t\t\t\t\tgenerations: buildGenerations( stores, actionType )\n\t\t\t\t};\n\t\t\t}\n\t\t} );\n\t\tthis.createSubscribers();\n\t}\n\n\thandleActionDispatch( data ) {\n\t\tconst luxAction = Object.assign(\n\t\t\t{ action: data, generationIndex: 0, updated: [] },\n\t\t\tthis.getStoresHandling( data.actionType )\n\t\t);\n\t\tthis.handle( luxAction, \"action.dispatch\" );\n\t}\n\n\tregisterStore( storeMeta ) {\n\t\tfor ( let actionDef of storeMeta.actions ) {\n\t\t\tlet action;\n\t\t\tconst actionName = actionDef.actionType;\n\t\t\tconst actionMeta = {\n\t\t\t\tnamespace: storeMeta.namespace,\n\t\t\t\twaitFor: actionDef.waitFor\n\t\t\t};\n\t\t\taction = this.actionMap[ actionName ] = this.actionMap[ actionName ] || [];\n\t\t\taction.push( actionMeta );\n\t\t}\n\t}\n\n\tremoveStore( namespace ) {\n\t\tfunction isThisNameSpace( meta ) {\n\t\t\treturn meta.namespace === namespace;\n\t\t}\n\t\t/*eslint-disable */\n\t\tfor ( let [ k, v ] of entries( this.actionMap ) ) {\n\t\t\tlet idx = v.findIndex( isThisNameSpace );\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tv.splice( idx, 1 );\n\t\t\t}\n\t\t}\n\t\t/*eslint-enable */\n\t}\n\n\tcreateSubscribers() {\n\t\tif ( !this.__subscriptions || !this.__subscriptions.length ) {\n\t\t\tthis.__subscriptions = [\n\t\t\t\tactionChannel.subscribe(\n\t\t\t\t\t\"execute.*\",\n\t\t\t\t\t( data, env ) => this.handleActionDispatch( data )\n\t\t\t\t),\n\t\t\t\tdispatcherChannel.subscribe(\n\t\t\t\t\t\"*.handled.*\",\n\t\t\t\t\t( data ) => this.handle( this.actionContext, \"action.handled\", data )\n\t\t\t\t).constraint( () => !!this.actionContext )\n\t\t\t];\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif ( this.__subscriptions ) {\n\t\t\tthis.__subscriptions.forEach( ( subscription ) => subscription.unsubscribe() );\n\t\t\tthis.__subscriptions = null;\n\t\t}\n\t}\n}\n\nexport default new Dispatcher();\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/dispatcher.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"machina\"\n ** module id = 12\n ** module chunks = 0\n **/","/**\n *  Copyright (c) 2014-2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.Immutable = factory();\n}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n      return isIterable(value) ? value : Seq(value);\n    }\n\n\n  createClass(KeyedIterable, Iterable);\n    function KeyedIterable(value) {\n      return isKeyed(value) ? value : KeyedSeq(value);\n    }\n\n\n  createClass(IndexedIterable, Iterable);\n    function IndexedIterable(value) {\n      return isIndexed(value) ? value : IndexedSeq(value);\n    }\n\n\n  createClass(SetIterable, Iterable);\n    function SetIterable(value) {\n      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n    }\n\n\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32−1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n      index = uint32Index;\n    }\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n      (end === undefined || (size !== undefined && end >= size));\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ?\n      defaultIndex :\n      index < 0 ?\n        Math.max(0, size + index) :\n        size === undefined ?\n          index :\n          Math.min(size, index);\n  }\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n\n  function Iterator(next) {\n      this.next = next;\n    }\n\n    Iterator.prototype.toString = function() {\n      return '[Iterator]';\n    };\n\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect =\n  Iterator.prototype.toSource = function () { return this.toString(); }\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n      value: value, done: false\n    });\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (\n      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]\n    );\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n    function Seq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        isIterable(value) ? value.toSeq() : seqFromValue(value);\n    }\n\n    Seq.of = function(/*...values*/) {\n      return Seq(arguments);\n    };\n\n    Seq.prototype.toSeq = function() {\n      return this;\n    };\n\n    Seq.prototype.toString = function() {\n      return this.__toString('Seq {', '}');\n    };\n\n    Seq.prototype.cacheResult = function() {\n      if (!this._cache && this.__iterateUncached) {\n        this._cache = this.entrySeq().toArray();\n        this.size = this._cache.length;\n      }\n      return this;\n    };\n\n    // abstract __iterateUncached(fn, reverse)\n\n    Seq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, true);\n    };\n\n    // abstract __iteratorUncached(type, reverse)\n\n    Seq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, true);\n    };\n\n\n\n  createClass(KeyedSeq, Seq);\n    function KeyedSeq(value) {\n      return value === null || value === undefined ?\n        emptySequence().toKeyedSeq() :\n        isIterable(value) ?\n          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n          keyedSeqFromValue(value);\n    }\n\n    KeyedSeq.prototype.toKeyedSeq = function() {\n      return this;\n    };\n\n\n\n  createClass(IndexedSeq, Seq);\n    function IndexedSeq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n    }\n\n    IndexedSeq.of = function(/*...values*/) {\n      return IndexedSeq(arguments);\n    };\n\n    IndexedSeq.prototype.toIndexedSeq = function() {\n      return this;\n    };\n\n    IndexedSeq.prototype.toString = function() {\n      return this.__toString('Seq [', ']');\n    };\n\n    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, false);\n    };\n\n    IndexedSeq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, false);\n    };\n\n\n\n  createClass(SetSeq, Seq);\n    function SetSeq(value) {\n      return (\n        value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value\n      ).toSetSeq();\n    }\n\n    SetSeq.of = function(/*...values*/) {\n      return SetSeq(arguments);\n    };\n\n    SetSeq.prototype.toSetSeq = function() {\n      return this;\n    };\n\n\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n\n\n  createClass(ArraySeq, IndexedSeq);\n    function ArraySeq(array) {\n      this._array = array;\n      this.size = array.length;\n    }\n\n    ArraySeq.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n    };\n\n    ArraySeq.prototype.__iterate = function(fn, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ArraySeq.prototype.__iterator = function(type, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n      );\n    };\n\n\n\n  createClass(ObjectSeq, KeyedSeq);\n    function ObjectSeq(object) {\n      var keys = Object.keys(object);\n      this._object = object;\n      this._keys = keys;\n      this.size = keys.length;\n    }\n\n    ObjectSeq.prototype.get = function(key, notSetValue) {\n      if (notSetValue !== undefined && !this.has(key)) {\n        return notSetValue;\n      }\n      return this._object[key];\n    };\n\n    ObjectSeq.prototype.has = function(key) {\n      return this._object.hasOwnProperty(key);\n    };\n\n    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        if (fn(object[key], key, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ObjectSeq.prototype.__iterator = function(type, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, key, object[key]);\n      });\n    };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(IterableSeq, IndexedSeq);\n    function IterableSeq(iterable) {\n      this._iterable = iterable;\n      this.size = iterable.length || iterable.size;\n    }\n\n    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      var iterations = 0;\n      if (isIterator(iterator)) {\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (fn(step.value, iterations++, this) === false) {\n            break;\n          }\n        }\n      }\n      return iterations;\n    };\n\n    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      if (!isIterator(iterator)) {\n        return new Iterator(iteratorDone);\n      }\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step : iteratorValue(type, iterations++, step.value);\n      });\n    };\n\n\n\n  createClass(IteratorSeq, IndexedSeq);\n    function IteratorSeq(iterator) {\n      this._iterator = iterator;\n      this._iteratorCache = [];\n    }\n\n    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      while (iterations < cache.length) {\n        if (fn(cache[iterations], iterations++, this) === false) {\n          return iterations;\n        }\n      }\n      var step;\n      while (!(step = iterator.next()).done) {\n        var val = step.value;\n        cache[iterations] = val;\n        if (fn(val, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n\n    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      return new Iterator(function()  {\n        if (iterations >= cache.length) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          cache[iterations] = step.value;\n        }\n        return iteratorValue(type, iterations, cache[iterations++]);\n      });\n    };\n\n\n\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq =\n      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n      typeof value === 'object' ? new ObjectSeq(value) :\n      undefined;\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of [k, v] entries, '+\n        'or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) ||\n      (typeof value === 'object' && new ObjectSeq(value));\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values, or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return (\n      isArrayLike(value) ? new ArraySeq(value) :\n      isIterator(value) ? new IteratorSeq(value) :\n      hasIterator(value) ? new IterableSeq(value) :\n      undefined\n    );\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ?\n      fromJSWith(converter, json, '', {'': json}) :\n      fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' &&\n        typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n        return true;\n      }\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n    if (typeof valueA.equals === 'function' &&\n        typeof valueB.equals === 'function' &&\n        valueA.equals(valueB)) {\n      return true;\n    }\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (\n      !isIterable(b) ||\n      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n      isKeyed(a) !== isKeyed(b) ||\n      isIndexed(a) !== isIndexed(b) ||\n      isOrdered(a) !== isOrdered(b)\n    ) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function(v, k)  {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function(v, k)  {\n      if (notAssociative ? !a.has(v) :\n          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n    function Repeat(value, times) {\n      if (!(this instanceof Repeat)) {\n        return new Repeat(value, times);\n      }\n      this._value = value;\n      this.size = times === undefined ? Infinity : Math.max(0, times);\n      if (this.size === 0) {\n        if (EMPTY_REPEAT) {\n          return EMPTY_REPEAT;\n        }\n        EMPTY_REPEAT = this;\n      }\n    }\n\n    Repeat.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Repeat []';\n      }\n      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n    };\n\n    Repeat.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._value : notSetValue;\n    };\n\n    Repeat.prototype.includes = function(searchValue) {\n      return is(this._value, searchValue);\n    };\n\n    Repeat.prototype.slice = function(begin, end) {\n      var size = this.size;\n      return wholeSlice(begin, end, size) ? this :\n        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n    };\n\n    Repeat.prototype.reverse = function() {\n      return this;\n    };\n\n    Repeat.prototype.indexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return 0;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.lastIndexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return this.size;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.__iterate = function(fn, reverse) {\n      for (var ii = 0; ii < this.size; ii++) {\n        if (fn(this._value, ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n      );\n    };\n\n    Repeat.prototype.equals = function(other) {\n      return other instanceof Repeat ?\n        is(this._value, other._value) :\n        deepEqual(other);\n    };\n\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        return new Range(start, end, step);\n      }\n      invariant(step !== 0, 'Cannot step a Range by 0');\n      start = start || 0;\n      if (end === undefined) {\n        end = Infinity;\n      }\n      step = step === undefined ? 1 : Math.abs(step);\n      if (end < start) {\n        step = -step;\n      }\n      this._start = start;\n      this._end = end;\n      this._step = step;\n      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n      if (this.size === 0) {\n        if (EMPTY_RANGE) {\n          return EMPTY_RANGE;\n        }\n        EMPTY_RANGE = this;\n      }\n    }\n\n    Range.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Range []';\n      }\n      return 'Range [ ' +\n        this._start + '...' + this._end +\n        (this._step > 1 ? ' by ' + this._step : '') +\n      ' ]';\n    };\n\n    Range.prototype.get = function(index, notSetValue) {\n      return this.has(index) ?\n        this._start + wrapIndex(this, index) * this._step :\n        notSetValue;\n    };\n\n    Range.prototype.includes = function(searchValue) {\n      var possibleIndex = (searchValue - this._start) / this._step;\n      return possibleIndex >= 0 &&\n        possibleIndex < this.size &&\n        possibleIndex === Math.floor(possibleIndex);\n    };\n\n    Range.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      begin = resolveBegin(begin, this.size);\n      end = resolveEnd(end, this.size);\n      if (end <= begin) {\n        return new Range(0, 0);\n      }\n      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n    };\n\n    Range.prototype.indexOf = function(searchValue) {\n      var offsetValue = searchValue - this._start;\n      if (offsetValue % this._step === 0) {\n        var index = offsetValue / this._step;\n        if (index >= 0 && index < this.size) {\n          return index\n        }\n      }\n      return -1;\n    };\n\n    Range.prototype.lastIndexOf = function(searchValue) {\n      return this.indexOf(searchValue);\n    };\n\n    Range.prototype.__iterate = function(fn, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(value, ii, this) === false) {\n          return ii + 1;\n        }\n        value += reverse ? -step : step;\n      }\n      return ii;\n    };\n\n    Range.prototype.__iterator = function(type, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      var ii = 0;\n      return new Iterator(function()  {\n        var v = value;\n        value += reverse ? -step : step;\n        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n      });\n    };\n\n    Range.prototype.equals = function(other) {\n      return other instanceof Range ?\n        this._start === other._start &&\n        this._end === other._end &&\n        this._step === other._step :\n        deepEqual(this, other);\n    };\n\n\n  var EMPTY_RANGE;\n\n  createClass(Collection, Iterable);\n    function Collection() {\n      throw TypeError('Abstract');\n    }\n\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  var imul =\n    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n    Math.imul :\n    function imul(a, b) {\n      a = a | 0; // int\n      b = b | 0; // int\n      var c = a & 0xffff;\n      var d = b & 0xffff;\n      // Shift by 0 fixes the sign on the high part.\n      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n    };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined &&\n               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function() {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // Get references to ES5 object methods.\n  var isExtensible = Object.isExtensible;\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = (function() {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }());\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1: // Element\n          return node.uniqueID;\n        case 9: // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(\n      size !== Infinity,\n      'Cannot perform this action with an infinite size.'\n    );\n  }\n\n  createClass(Map, KeyedCollection);\n\n    // @pragma Construction\n\n    function Map(value) {\n      return value === null || value === undefined ? emptyMap() :\n        isMap(value) && !isOrdered(value) ? value :\n        emptyMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    Map.prototype.toString = function() {\n      return this.__toString('Map {', '}');\n    };\n\n    // @pragma Access\n\n    Map.prototype.get = function(k, notSetValue) {\n      return this._root ?\n        this._root.get(0, undefined, k, notSetValue) :\n        notSetValue;\n    };\n\n    // @pragma Modification\n\n    Map.prototype.set = function(k, v) {\n      return updateMap(this, k, v);\n    };\n\n    Map.prototype.setIn = function(keyPath, v) {\n      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n    };\n\n    Map.prototype.remove = function(k) {\n      return updateMap(this, k, NOT_SET);\n    };\n\n    Map.prototype.deleteIn = function(keyPath) {\n      return this.updateIn(keyPath, function()  {return NOT_SET});\n    };\n\n    Map.prototype.update = function(k, notSetValue, updater) {\n      return arguments.length === 1 ?\n        k(this) :\n        this.updateIn([k], notSetValue, updater);\n    };\n\n    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n      if (!updater) {\n        updater = notSetValue;\n        notSetValue = undefined;\n      }\n      var updatedValue = updateInDeepMap(\n        this,\n        forceIterator(keyPath),\n        notSetValue,\n        updater\n      );\n      return updatedValue === NOT_SET ? undefined : updatedValue;\n    };\n\n    Map.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._root = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyMap();\n    };\n\n    // @pragma Composition\n\n    Map.prototype.merge = function(/*...iters*/) {\n      return mergeIntoMapWith(this, undefined, arguments);\n    };\n\n    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, merger, iters);\n    };\n\n    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.merge === 'function' ?\n          m.merge.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoMapWith(this, deepMerger, arguments);\n    };\n\n    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n    };\n\n    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.mergeDeep === 'function' ?\n          m.mergeDeep.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator));\n    };\n\n    Map.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator, mapper));\n    };\n\n    // @pragma Mutability\n\n    Map.prototype.withMutations = function(fn) {\n      var mutable = this.asMutable();\n      fn(mutable);\n      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n    };\n\n    Map.prototype.asMutable = function() {\n      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n    };\n\n    Map.prototype.asImmutable = function() {\n      return this.__ensureOwner();\n    };\n\n    Map.prototype.wasAltered = function() {\n      return this.__altered;\n    };\n\n    Map.prototype.__iterator = function(type, reverse) {\n      return new MapIterator(this, type, reverse);\n    };\n\n    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      this._root && this._root.iterate(function(entry ) {\n        iterations++;\n        return fn(entry[1], entry[0], this$0);\n      }, reverse);\n      return iterations;\n    };\n\n    Map.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeMap(this.size, this._root, ownerID, this.__hash);\n    };\n\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n\n  // #pragma Trie Nodes\n\n\n\n    function ArrayMapNode(ownerID, entries) {\n      this.ownerID = ownerID;\n      this.entries = entries;\n    }\n\n    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && entries.length === 1) {\n        return; // undefined\n      }\n\n      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n        return createNodes(ownerID, entries, key, value);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new ArrayMapNode(ownerID, newEntries);\n    };\n\n\n\n\n    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n      this.ownerID = ownerID;\n      this.bitmap = bitmap;\n      this.nodes = nodes;\n    }\n\n    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n      var bitmap = this.bitmap;\n      return (bitmap & bit) === 0 ? notSetValue :\n        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n    };\n\n    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var bit = 1 << keyHashFrag;\n      var bitmap = this.bitmap;\n      var exists = (bitmap & bit) !== 0;\n\n      if (!exists && value === NOT_SET) {\n        return this;\n      }\n\n      var idx = popCount(bitmap & (bit - 1));\n      var nodes = this.nodes;\n      var node = exists ? nodes[idx] : undefined;\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n      if (newNode === node) {\n        return this;\n      }\n\n      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n      }\n\n      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n        return nodes[idx ^ 1];\n      }\n\n      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n        return newNode;\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n      var newNodes = exists ? newNode ?\n        setIn(nodes, idx, newNode, isEditable) :\n        spliceOut(nodes, idx, isEditable) :\n        spliceIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.bitmap = newBitmap;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n    };\n\n\n\n\n    function HashArrayMapNode(ownerID, count, nodes) {\n      this.ownerID = ownerID;\n      this.count = count;\n      this.nodes = nodes;\n    }\n\n    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var node = this.nodes[idx];\n      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n    };\n\n    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var removed = value === NOT_SET;\n      var nodes = this.nodes;\n      var node = nodes[idx];\n\n      if (removed && !node) {\n        return this;\n      }\n\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n      if (newNode === node) {\n        return this;\n      }\n\n      var newCount = this.count;\n      if (!node) {\n        newCount++;\n      } else if (!newNode) {\n        newCount--;\n        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n          return packNodes(ownerID, nodes, newCount, idx);\n        }\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.count = newCount;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new HashArrayMapNode(ownerID, newCount, newNodes);\n    };\n\n\n\n\n    function HashCollisionNode(ownerID, keyHash, entries) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entries = entries;\n    }\n\n    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n\n      var removed = value === NOT_SET;\n\n      if (keyHash !== this.keyHash) {\n        if (removed) {\n          return this;\n        }\n        SetRef(didAlter);\n        SetRef(didChangeSize);\n        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n      }\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && len === 2) {\n        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n    };\n\n\n\n\n    function ValueNode(ownerID, keyHash, entry) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entry = entry;\n    }\n\n    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n    };\n\n    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n      var keyMatch = is(key, this.entry[0]);\n      if (keyMatch ? value === this.entry[1] : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n\n      if (removed) {\n        SetRef(didChangeSize);\n        return; // undefined\n      }\n\n      if (keyMatch) {\n        if (ownerID && ownerID === this.ownerID) {\n          this.entry[1] = value;\n          return this;\n        }\n        return new ValueNode(ownerID, this.keyHash, [key, value]);\n      }\n\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n    };\n\n\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate =\n  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  }\n\n  BitmapIndexedNode.prototype.iterate =\n  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  }\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  }\n\n  createClass(MapIterator, Iterator);\n\n    function MapIterator(map, type, reverse) {\n      this._type = type;\n      this._reverse = reverse;\n      this._stack = map._root && mapIteratorFrame(map._root);\n    }\n\n    MapIterator.prototype.next = function() {\n      var type = this._type;\n      var stack = this._stack;\n      while (stack) {\n        var node = stack.node;\n        var index = stack.index++;\n        var maxIndex;\n        if (node.entry) {\n          if (index === 0) {\n            return mapIteratorValue(type, node.entry);\n          }\n        } else if (node.entries) {\n          maxIndex = node.entries.length - 1;\n          if (index <= maxIndex) {\n            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n          }\n        } else {\n          maxIndex = node.nodes.length - 1;\n          if (index <= maxIndex) {\n            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n            if (subNode) {\n              if (subNode.entry) {\n                return mapIteratorValue(type, subNode.entry);\n              }\n              stack = this._stack = mapIteratorFrame(subNode, stack);\n            }\n            continue;\n          }\n        }\n        stack = this._stack = this._stack.__prev;\n      }\n      return iteratorDone();\n    };\n\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ?\n      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ?\n      existing.mergeDeep(value) :\n      is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function(existing, value, key)  {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function(x ) {return x.size !== 0});\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function(collection ) {\n      var mergeIntoMap = merger ?\n        function(value, key)  {\n          collection.update(key, NOT_SET, function(existing )\n            {return existing === NOT_SET ? value : merger(existing, value, key)}\n          );\n        } :\n        function(value, key)  {\n          collection.set(key, value);\n        }\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(\n      isNotSet || (existing && existing.set),\n      'invalid keyPath'\n    );\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(\n      nextExisting,\n      keyPathIter,\n      notSetValue,\n      updater\n    );\n    return nextUpdated === nextExisting ? existing :\n      nextUpdated === NOT_SET ? existing.remove(key) :\n      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - ((x >> 1) & 0x55555555);\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n    x = (x + (x >> 4)) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n    // @pragma Construction\n\n    function List(value) {\n      var empty = emptyList();\n      if (value === null || value === undefined) {\n        return empty;\n      }\n      if (isList(value)) {\n        return value;\n      }\n      var iter = IndexedIterable(value);\n      var size = iter.size;\n      if (size === 0) {\n        return empty;\n      }\n      assertNotInfinite(size);\n      if (size > 0 && size < SIZE) {\n        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n      }\n      return empty.withMutations(function(list ) {\n        list.setSize(size);\n        iter.forEach(function(v, i)  {return list.set(i, v)});\n      });\n    }\n\n    List.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    List.prototype.toString = function() {\n      return this.__toString('List [', ']');\n    };\n\n    // @pragma Access\n\n    List.prototype.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      if (index >= 0 && index < this.size) {\n        index += this._origin;\n        var node = listNodeFor(this, index);\n        return node && node.array[index & MASK];\n      }\n      return notSetValue;\n    };\n\n    // @pragma Modification\n\n    List.prototype.set = function(index, value) {\n      return updateList(this, index, value);\n    };\n\n    List.prototype.remove = function(index) {\n      return !this.has(index) ? this :\n        index === 0 ? this.shift() :\n        index === this.size - 1 ? this.pop() :\n        this.splice(index, 1);\n    };\n\n    List.prototype.insert = function(index, value) {\n      return this.splice(index, 0, value);\n    };\n\n    List.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = this._origin = this._capacity = 0;\n        this._level = SHIFT;\n        this._root = this._tail = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyList();\n    };\n\n    List.prototype.push = function(/*...values*/) {\n      var values = arguments;\n      var oldSize = this.size;\n      return this.withMutations(function(list ) {\n        setListBounds(list, 0, oldSize + values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(oldSize + ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.pop = function() {\n      return setListBounds(this, 0, -1);\n    };\n\n    List.prototype.unshift = function(/*...values*/) {\n      var values = arguments;\n      return this.withMutations(function(list ) {\n        setListBounds(list, -values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.shift = function() {\n      return setListBounds(this, 1);\n    };\n\n    // @pragma Composition\n\n    List.prototype.merge = function(/*...iters*/) {\n      return mergeIntoListWith(this, undefined, arguments);\n    };\n\n    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, merger, iters);\n    };\n\n    List.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoListWith(this, deepMerger, arguments);\n    };\n\n    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, deepMergerWith(merger), iters);\n    };\n\n    List.prototype.setSize = function(size) {\n      return setListBounds(this, 0, size);\n    };\n\n    // @pragma Iteration\n\n    List.prototype.slice = function(begin, end) {\n      var size = this.size;\n      if (wholeSlice(begin, end, size)) {\n        return this;\n      }\n      return setListBounds(\n        this,\n        resolveBegin(begin, size),\n        resolveEnd(end, size)\n      );\n    };\n\n    List.prototype.__iterator = function(type, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      return new Iterator(function()  {\n        var value = values();\n        return value === DONE ?\n          iteratorDone() :\n          iteratorValue(type, index++, value);\n      });\n    };\n\n    List.prototype.__iterate = function(fn, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      var value;\n      while ((value = values()) !== DONE) {\n        if (fn(value, index++, this) === false) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    List.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        return this;\n      }\n      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n    };\n\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn =\n  ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n\n    function VNode(array, ownerID) {\n      this.array = array;\n      this.ownerID = ownerID;\n    }\n\n    // TODO: seems like these methods are very similar\n\n    VNode.prototype.removeBefore = function(ownerID, level, index) {\n      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n        return this;\n      }\n      var originIndex = (index >>> level) & MASK;\n      if (originIndex >= this.array.length) {\n        return new VNode([], ownerID);\n      }\n      var removingFirst = originIndex === 0;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[originIndex];\n        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingFirst) {\n          return this;\n        }\n      }\n      if (removingFirst && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingFirst) {\n        for (var ii = 0; ii < originIndex; ii++) {\n          editable.array[ii] = undefined;\n        }\n      }\n      if (newChild) {\n        editable.array[originIndex] = newChild;\n      }\n      return editable;\n    };\n\n    VNode.prototype.removeAfter = function(ownerID, level, index) {\n      if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n        return this;\n      }\n      var sizeIndex = ((index - 1) >>> level) & MASK;\n      if (sizeIndex >= this.array.length) {\n        return this;\n      }\n\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[sizeIndex];\n        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n          return this;\n        }\n      }\n\n      var editable = editableVNode(this, ownerID);\n      editable.array.splice(sizeIndex + 1);\n      if (newChild) {\n        editable.array[sizeIndex] = newChild;\n      }\n      return editable;\n    };\n\n\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ?\n        iterateLeaf(node, offset) :\n        iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : (left - offset) >> level;\n      var to = ((right - offset) >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(\n            array && array[idx], level - SHIFT, offset + (idx << level)\n          );\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function(list ) {\n        index < 0 ?\n          setListBounds(list, index).set(0, value) :\n          setListBounds(list, 0, index + 1).set(index, value)\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = (index >>> level) & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << (list._level + SHIFT)) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[(rawIndex >>> level) & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might need creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might need creating a higher root.\n    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ?\n      listNodeFor(list, newCapacity - 1) :\n      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = (oldTailOffset >>> level) & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = (newOrigin >>> newLevel) & MASK;\n        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n  }\n\n  createClass(OrderedMap, Map);\n\n    // @pragma Construction\n\n    function OrderedMap(value) {\n      return value === null || value === undefined ? emptyOrderedMap() :\n        isOrderedMap(value) ? value :\n        emptyOrderedMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    OrderedMap.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedMap.prototype.toString = function() {\n      return this.__toString('OrderedMap {', '}');\n    };\n\n    // @pragma Access\n\n    OrderedMap.prototype.get = function(k, notSetValue) {\n      var index = this._map.get(k);\n      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n    };\n\n    // @pragma Modification\n\n    OrderedMap.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._map.clear();\n        this._list.clear();\n        return this;\n      }\n      return emptyOrderedMap();\n    };\n\n    OrderedMap.prototype.set = function(k, v) {\n      return updateOrderedMap(this, k, v);\n    };\n\n    OrderedMap.prototype.remove = function(k) {\n      return updateOrderedMap(this, k, NOT_SET);\n    };\n\n    OrderedMap.prototype.wasAltered = function() {\n      return this._map.wasAltered() || this._list.wasAltered();\n    };\n\n    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._list.__iterate(\n        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n        reverse\n      );\n    };\n\n    OrderedMap.prototype.__iterator = function(type, reverse) {\n      return this._list.fromEntrySeq().__iterator(type, reverse);\n    };\n\n    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      var newList = this._list.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        this._list = newList;\n        return this;\n      }\n      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n    };\n\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) { // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n    function ToKeyedSequence(indexed, useKeys) {\n      this._iter = indexed;\n      this._useKeys = useKeys;\n      this.size = indexed.size;\n    }\n\n    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n      return this._iter.get(key, notSetValue);\n    };\n\n    ToKeyedSequence.prototype.has = function(key) {\n      return this._iter.has(key);\n    };\n\n    ToKeyedSequence.prototype.valueSeq = function() {\n      return this._iter.valueSeq();\n    };\n\n    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n      var reversedSequence = reverseFactory(this, true);\n      if (!this._useKeys) {\n        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n      }\n      return reversedSequence;\n    };\n\n    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n      var mappedSequence = mapFactory(this, mapper, context);\n      if (!this._useKeys) {\n        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n      }\n      return mappedSequence;\n    };\n\n    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var ii;\n      return this._iter.__iterate(\n        this._useKeys ?\n          function(v, k)  {return fn(v, k, this$0)} :\n          ((ii = reverse ? resolveSize(this) : 0),\n            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n        reverse\n      );\n    };\n\n    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n      if (this._useKeys) {\n        return this._iter.__iterator(type, reverse);\n      }\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var ii = reverse ? resolveSize(this) : 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n      });\n    };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(ToIndexedSequence, IndexedSeq);\n    function ToIndexedSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToIndexedSequence.prototype.includes = function(value) {\n      return this._iter.includes(value);\n    };\n\n    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n    };\n\n    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, iterations++, step.value, step)\n      });\n    };\n\n\n\n  createClass(ToSetSequence, SetSeq);\n    function ToSetSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToSetSequence.prototype.has = function(key) {\n      return this._iter.includes(key);\n    };\n\n    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n    };\n\n    ToSetSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, step.value, step.value, step);\n      });\n    };\n\n\n\n  createClass(FromEntriesSequence, KeyedSeq);\n    function FromEntriesSequence(entries) {\n      this._iter = entries;\n      this.size = entries.size;\n    }\n\n    FromEntriesSequence.prototype.entrySeq = function() {\n      return this._iter.toSeq();\n    };\n\n    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(entry ) {\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return fn(\n            indexedIterable ? entry.get(1) : entry[1],\n            indexedIterable ? entry.get(0) : entry[0],\n            this$0\n          );\n        }\n      }, reverse);\n    };\n\n    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          // Check if entry exists first so array access doesn't throw for holes\n          // in the parent iteration.\n          if (entry) {\n            validateEntry(entry);\n            var indexedIterable = isIterable(entry);\n            return iteratorValue(\n              type,\n              indexedIterable ? entry.get(0) : entry[0],\n              indexedIterable ? entry.get(1) : entry[1],\n              step\n            );\n          }\n        }\n      });\n    };\n\n\n  ToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function()  {return iterable};\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function()  {return iterable.reverse()};\n      return reversedSequence;\n    };\n    flipSequence.has = function(key ) {return iterable.includes(key)};\n    flipSequence.includes = function(key ) {return iterable.has(key)};\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n    }\n    flipSequence.__iteratorUncached = function(type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function()  {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(\n        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n        reverse\n      );\n    }\n    return flipSequence;\n  }\n\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function(key ) {return iterable.has(key)};\n    mappedSequence.get = function(key, notSetValue)  {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ?\n        notSetValue :\n        mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(\n        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n        reverse\n      );\n    }\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(\n          type,\n          key,\n          mapper.call(context, entry[1], key, iterable),\n          step\n        );\n      });\n    }\n    return mappedSequence;\n  }\n\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function()  {return iterable};\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function()  {return iterable.flip()};\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function(key, notSetValue) \n      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n    reversedSequence.has = function(key )\n      {return iterable.has(useKeys ? key : -1 - key)};\n    reversedSequence.includes = function(value ) {return iterable.includes(value)};\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n    };\n    reversedSequence.__iterator =\n      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n    return reversedSequence;\n  }\n\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function(key ) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function(key, notSetValue)  {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n          v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    }\n    return filterSequence;\n  }\n\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        0,\n        function(a ) {return a + 1}\n      );\n    });\n    return groups.asImmutable();\n  }\n\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n      );\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n  }\n\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ?\n          iterable.get(index + resolvedBegin, notSetValue) :\n          notSetValue;\n      }\n    }\n\n    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k)  {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n                 iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function(type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    }\n\n    return sliceSeq;\n  }\n\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c) \n        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n      );\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function()  {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function(v ) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ?\n          keyedSeqFromValue(v) :\n          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function(v ) {return v.size !== 0});\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable ||\n          isKeyedIterable && isKeyed(singleton) ||\n          isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(\n      function(sum, seq)  {\n        if (sum !== undefined) {\n          var size = seq.size;\n          if (size !== undefined) {\n            return sum + size;\n          }\n        }\n      },\n      0\n    );\n    return concatSeq;\n  }\n\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function(fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {var this$0 = this;\n        iter.__iterate(function(v, k)  {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    }\n    flatSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    }\n    return flatSequence;\n  }\n\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(\n      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n    ).flatten(true);\n  }\n\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k) \n        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n        fn(v, iterations++, this$0) !== false},\n        reverse\n      );\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function()  {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ?\n          iteratorValue(type, iterations++, separator) :\n          iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(\n      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n    ).toArray();\n    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n      isKeyedIterable ?\n      function(v, i)  { entries[i].length = 2; } :\n      function(v, i)  { entries[i] = v[1]; }\n    );\n    return isKeyedIterable ? KeyedSeq(entries) :\n      isIndexed(iterable) ? IndexedSeq(entries) :\n      SetSeq(entries);\n  }\n\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq()\n        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n  }\n\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function(fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function(type, reverse) {\n      var iterators = iters.map(function(i )\n        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n      );\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function()  {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function(i ) {return i.next()});\n          isDone = steps.some(function(s ) {return s.done});\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(\n          type,\n          iterations++,\n          zipper.apply(null, steps.map(function(s ) {return s.value}))\n        );\n      });\n    };\n    return zipSequence\n  }\n\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable :\n      isIndexed(iterable) ? IndexedIterable :\n      SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create(\n      (\n        isKeyed(iterable) ? KeyedSeq :\n        isIndexed(iterable) ? IndexedSeq :\n        SetSeq\n      ).prototype\n    );\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n    function Record(defaultValues, name) {\n      var hasInitialized;\n\n      var RecordType = function Record(values) {\n        if (values instanceof RecordType) {\n          return values;\n        }\n        if (!(this instanceof RecordType)) {\n          return new RecordType(values);\n        }\n        if (!hasInitialized) {\n          hasInitialized = true;\n          var keys = Object.keys(defaultValues);\n          setProps(RecordTypePrototype, keys);\n          RecordTypePrototype.size = keys.length;\n          RecordTypePrototype._name = name;\n          RecordTypePrototype._keys = keys;\n          RecordTypePrototype._defaultValues = defaultValues;\n        }\n        this._map = Map(values);\n      };\n\n      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n      RecordTypePrototype.constructor = RecordType;\n\n      return RecordType;\n    }\n\n    Record.prototype.toString = function() {\n      return this.__toString(recordName(this) + ' {', '}');\n    };\n\n    // @pragma Access\n\n    Record.prototype.has = function(k) {\n      return this._defaultValues.hasOwnProperty(k);\n    };\n\n    Record.prototype.get = function(k, notSetValue) {\n      if (!this.has(k)) {\n        return notSetValue;\n      }\n      var defaultVal = this._defaultValues[k];\n      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n    };\n\n    // @pragma Modification\n\n    Record.prototype.clear = function() {\n      if (this.__ownerID) {\n        this._map && this._map.clear();\n        return this;\n      }\n      var RecordType = this.constructor;\n      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n    };\n\n    Record.prototype.set = function(k, v) {\n      if (!this.has(k)) {\n        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n      }\n      var newMap = this._map && this._map.set(k, v);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.remove = function(k) {\n      if (!this.has(k)) {\n        return this;\n      }\n      var newMap = this._map && this._map.remove(k);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n    };\n\n    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n    };\n\n    Record.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map && this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return makeRecord(this, newMap, ownerID);\n    };\n\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn =\n  RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {\n      // Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function() {\n        return this.get(name);\n      },\n      set: function(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection);\n\n    // @pragma Construction\n\n    function Set(value) {\n      return value === null || value === undefined ? emptySet() :\n        isSet(value) && !isOrdered(value) ? value :\n        emptySet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    Set.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Set.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    Set.prototype.toString = function() {\n      return this.__toString('Set {', '}');\n    };\n\n    // @pragma Access\n\n    Set.prototype.has = function(value) {\n      return this._map.has(value);\n    };\n\n    // @pragma Modification\n\n    Set.prototype.add = function(value) {\n      return updateSet(this, this._map.set(value, true));\n    };\n\n    Set.prototype.remove = function(value) {\n      return updateSet(this, this._map.remove(value));\n    };\n\n    Set.prototype.clear = function() {\n      return updateSet(this, this._map.clear());\n    };\n\n    // @pragma Composition\n\n    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n      iters = iters.filter(function(x ) {return x.size !== 0});\n      if (iters.length === 0) {\n        return this;\n      }\n      if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n        return this.constructor(iters[0]);\n      }\n      return this.withMutations(function(set ) {\n        for (var ii = 0; ii < iters.length; ii++) {\n          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n        }\n      });\n    };\n\n    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (!iters.every(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (iters.some(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.merge = function() {\n      return this.union.apply(this, arguments);\n    };\n\n    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return this.union.apply(this, iters);\n    };\n\n    Set.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator));\n    };\n\n    Set.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator, mapper));\n    };\n\n    Set.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n    };\n\n    Set.prototype.__iterator = function(type, reverse) {\n      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n    };\n\n    Set.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return this.__make(newMap, ownerID);\n    };\n\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set :\n      newMap.size === 0 ? set.__empty() :\n      set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set);\n\n    // @pragma Construction\n\n    function OrderedSet(value) {\n      return value === null || value === undefined ? emptyOrderedSet() :\n        isOrderedSet(value) ? value :\n        emptyOrderedSet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    OrderedSet.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedSet.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    OrderedSet.prototype.toString = function() {\n      return this.__toString('OrderedSet {', '}');\n    };\n\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection);\n\n    // @pragma Construction\n\n    function Stack(value) {\n      return value === null || value === undefined ? emptyStack() :\n        isStack(value) ? value :\n        emptyStack().unshiftAll(value);\n    }\n\n    Stack.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Stack.prototype.toString = function() {\n      return this.__toString('Stack [', ']');\n    };\n\n    // @pragma Access\n\n    Stack.prototype.get = function(index, notSetValue) {\n      var head = this._head;\n      index = wrapIndex(this, index);\n      while (head && index--) {\n        head = head.next;\n      }\n      return head ? head.value : notSetValue;\n    };\n\n    Stack.prototype.peek = function() {\n      return this._head && this._head.value;\n    };\n\n    // @pragma Modification\n\n    Stack.prototype.push = function(/*...values*/) {\n      if (arguments.length === 0) {\n        return this;\n      }\n      var newSize = this.size + arguments.length;\n      var head = this._head;\n      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n        head = {\n          value: arguments[ii],\n          next: head\n        };\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pushAll = function(iter) {\n      iter = IndexedIterable(iter);\n      if (iter.size === 0) {\n        return this;\n      }\n      assertNotInfinite(iter.size);\n      var newSize = this.size;\n      var head = this._head;\n      iter.reverse().forEach(function(value ) {\n        newSize++;\n        head = {\n          value: value,\n          next: head\n        };\n      });\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pop = function() {\n      return this.slice(1);\n    };\n\n    Stack.prototype.unshift = function(/*...values*/) {\n      return this.push.apply(this, arguments);\n    };\n\n    Stack.prototype.unshiftAll = function(iter) {\n      return this.pushAll(iter);\n    };\n\n    Stack.prototype.shift = function() {\n      return this.pop.apply(this, arguments);\n    };\n\n    Stack.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._head = undefined;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyStack();\n    };\n\n    Stack.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      var resolvedBegin = resolveBegin(begin, this.size);\n      var resolvedEnd = resolveEnd(end, this.size);\n      if (resolvedEnd !== this.size) {\n        // super.slice(begin, end);\n        return IndexedCollection.prototype.slice.call(this, begin, end);\n      }\n      var newSize = this.size - resolvedBegin;\n      var head = this._head;\n      while (resolvedBegin--) {\n        head = head.next;\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    // @pragma Mutability\n\n    Stack.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeStack(this.size, this._head, ownerID, this.__hash);\n    };\n\n    // @pragma Iteration\n\n    Stack.prototype.__iterate = function(fn, reverse) {\n      if (reverse) {\n        return this.reverse().__iterate(fn);\n      }\n      var iterations = 0;\n      var node = this._head;\n      while (node) {\n        if (fn(node.value, iterations++, this) === false) {\n          break;\n        }\n        node = node.next;\n      }\n      return iterations;\n    };\n\n    Stack.prototype.__iterator = function(type, reverse) {\n      if (reverse) {\n        return this.reverse().__iterator(type);\n      }\n      var iterations = 0;\n      var node = this._head;\n      return new Iterator(function()  {\n        if (node) {\n          var value = node.value;\n          node = node.next;\n          return iteratorValue(type, iterations++, value);\n        }\n        return iteratorDone();\n      });\n    };\n\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols &&\n      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n      return array;\n    },\n\n    toIndexedSeq: function() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n      ).__toJS();\n    },\n\n    toJSON: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n      ).__toJS();\n    },\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n\n    toObject: function() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function(v, k)  { object[k] = v; });\n      return object;\n    },\n\n    toOrderedMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function() {\n      return isIndexed(this) ? this.toIndexedSeq() :\n        isKeyed(this) ? this.toKeyedSeq() :\n        this.toSetSeq();\n    },\n\n    toStack: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n\n    // ### Common JavaScript methods and properties\n\n    toString: function() {\n      return '[Iterable]';\n    },\n\n    __toString: function(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function() {var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    includes: function(searchValue) {\n      return this.some(function(value ) {return is(value, searchValue)});\n    },\n\n    entries: function() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function(v, k, c)  {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    findEntry: function(predicate, context) {\n      var found;\n      this.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findLastEntry: function(predicate, context) {\n      return this.toSeq().reverse().findEntry(predicate, context);\n    },\n\n    forEach: function(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function(v ) {\n        isFirst ? (isFirst = false) : (joined += separator);\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n\n    keys: function() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function(v, k, c)  {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n\n    // ### More sequential methods\n\n    butLast: function() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n    },\n\n    count: function(predicate, context) {\n      return ensureSize(\n        predicate ? this.toSeq().filter(predicate, context) : this\n      );\n    },\n\n    countBy: function(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n      return entriesSequence;\n    },\n\n    filterNot: function(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findLast: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    first: function() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function(searchKey, notSetValue) {\n      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n    },\n\n    getIn: function(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function(value ) {return iter.includes(value)});\n    },\n\n    isSuperset: function(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n\n    keySeq: function() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function() {\n      return this.toSeq().reverse().first();\n    },\n\n    max: function(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function() {\n      return this.slice(1);\n    },\n\n    skip: function(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function() {\n      return this.toIndexedSeq();\n    },\n\n\n    // ### Hashable Object\n\n    hashCode: function() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    }\n\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect =\n  IterablePrototype.toSource = function() { return this.toString(); };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n\n  // Temporary warning about using length\n  (function () {\n    try {\n      Object.defineProperty(IterablePrototype, 'length', {\n        get: function () {\n          if (!Iterable.noLengthWarning) {\n            var stack;\n            try {\n              throw new Error();\n            } catch (error) {\n              stack = error.stack;\n            }\n            if (stack.indexOf('_wrapObject') === -1) {\n              console && console.warn && console.warn(\n                'iterable.length has been deprecated, '+\n                'use iterable.size or iterable.count(). '+\n                'This warning will become a silent error in a future version. ' +\n                stack\n              );\n              return this.size;\n            }\n          }\n        }\n      });\n    } catch (e) {}\n  })();\n\n\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function() {\n      return reify(this, flipFactory(this));\n    },\n\n    findKey: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLastKey: function(predicate, context) {\n      return this.toSeq().reverse().findKey(predicate, context);\n    },\n\n    keyOf: function(searchValue) {\n      return this.findKey(function(value ) {return is(value, searchValue)});\n    },\n\n    lastKeyOf: function(searchValue) {\n      return this.findLastKey(function(value ) {return is(value, searchValue)});\n    },\n\n    mapEntries: function(mapper, context) {var this$0 = this;\n      var iterations = 0;\n      return reify(this,\n        this.toSeq().map(\n          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n        ).fromEntrySeq()\n      );\n    },\n\n    mapKeys: function(mapper, context) {var this$0 = this;\n      return reify(this,\n        this.toSeq().flip().map(\n          function(k, v)  {return mapper.call(context, k, v, this$0)}\n        ).flip()\n      );\n    }\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};\n\n\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, false);\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function(searchValue) {\n      var key = this.toKeyedSeq().keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function(searchValue) {\n      var key = this.toKeyedSeq().reverse().keyOf(searchValue);\n      return key === undefined ? -1 : key;\n\n      // var index =\n      // return this.toSeq().reverse().indexOf(searchValue);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n        return this;\n      }\n      // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(\n        this,\n        numArgs === 1 ?\n          spliced :\n          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n      );\n    },\n\n\n    // ### More collection methods\n\n    findLastIndex: function(predicate, context) {\n      var key = this.toKeyedSeq().findLastKey(predicate, context);\n      return key === undefined ? -1 : key;\n    },\n\n    first: function() {\n      return this.get(0);\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return (index < 0 || (this.size === Infinity ||\n          (this.size !== undefined && index > this.size))) ?\n        notSetValue :\n        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n    },\n\n    has: function(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ?\n        this.size === Infinity || index < this.size :\n        this.indexOf(index) !== -1\n      );\n    },\n\n    interpose: function(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function(/*...iterables*/) {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    last: function() {\n      return this.get(-1);\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function(/*, ...iterables */) {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function(zipper/*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    includes: function(value) {\n      return this.has(value);\n    },\n\n\n    // ### More sequential methods\n\n    keySeq: function() {\n      return this.valueSeq();\n    }\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.includes;\n\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    }\n  }\n\n  function neg(predicate) {\n    return function() {\n      return -predicate.apply(this, arguments);\n    }\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : value;\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(\n      keyed ?\n        ordered ?\n          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n        ordered ?\n          function(v ) { h = 31 * h + hash(v) | 0; } :\n          function(v ) { h = h + hash(v) | 0; }\n    );\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS\n\n  };\n\n  return Immutable;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/immutable/dist/immutable.js\n ** module id = 13\n ** module chunks = 0\n **/","import _ from \"lodash\";\n\nexport const extend = function extend( ...options ) {\n\tconst parent = this;\n\tlet store; // placeholder for instance constructor\n\tconst Ctor = function() {}; // placeholder ctor function used to insert level in prototype chain\n\n\t// First - separate mixins from prototype props\n\tconst mixins = [];\n\tfor ( let opt of options ) {\n\t\tmixins.push( _.pick( opt, [ \"handlers\", \"state\" ] ) );\n\t\tdelete opt.handlers;\n\t\tdelete opt.state;\n\t}\n\n\tconst protoProps = _.merge.apply( this, [ {} ].concat( options ) );\n\n\t// The constructor function for the new subclass is either defined by you\n\t// (the \"constructor\" property in your `extend` definition), or defaulted\n\t// by us to simply call the parent's constructor.\n\tif ( protoProps && protoProps.hasOwnProperty( \"constructor\" ) ) {\n\t\tstore = protoProps.constructor;\n\t} else {\n\t\tstore = function() {\n\t\t\tconst args = Array.from( arguments );\n\t\t\targs[ 0 ] = args[ 0 ] || {};\n\t\t\tparent.apply( this, store.mixins.concat( args ) );\n\t\t};\n\t}\n\n\tstore.mixins = mixins;\n\n\t// Inherit class (static) properties from parent.\n\t_.merge( store, parent );\n\n\t// Set the prototype chain to inherit from `parent`, without calling\n\t// `parent`'s constructor function.\n\tCtor.prototype = parent.prototype;\n\tstore.prototype = new Ctor();\n\n\t// Add prototype properties (instance properties) to the subclass,\n\t// if supplied.\n\tif ( protoProps ) {\n\t\t_.extend( store.prototype, protoProps );\n\t}\n\n\t// Correctly set child's `prototype.constructor`.\n\tstore.prototype.constructor = store;\n\n\t// Set a convenience property in case the parent's prototype is needed later.\n\tstore.__super__ = parent.prototype;\n\treturn store;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/extend.js\n **/"],"sourceRoot":"/source/"}